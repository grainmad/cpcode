{
    "problems": [
        {
            "contestId": 1702,
            "index": "F",
            "name": "Equate Multisets",
            "type": "PROGRAMMING",
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1702,
            "index": "A",
            "name": "Round Down the Price",
            "type": "PROGRAMMING",
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1700,
            "index": "F",
            "name": "Puzzle",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1700,
            "index": "E",
            "name": "Serega the Pirate",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2600,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1700,
            "index": "C",
            "name": "Helping the Nature",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1700,
            "index": "B",
            "name": "Palindromic Numbers ",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1700,
            "index": "A",
            "name": "Optimal Path",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1699,
            "index": "C",
            "name": "The Third Problem",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1699,
            "index": "B",
            "name": "Almost Ternary Matrix",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 900,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "matrices"
            ]
        },
        {
            "contestId": 1699,
            "index": "A",
            "name": "The Third Three Number Problem",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1698,
            "index": "F",
            "name": "Equal Reversal",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1698,
            "index": "D",
            "name": "Fixed Point Guessing",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1698,
            "index": "B",
            "name": "Rising Sand",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1697,
            "index": "F",
            "name": "Too Many Constraints",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "2-sat",
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1697,
            "index": "E",
            "name": "Coloring",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "dp",
                "geometry",
                "graphs",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1697,
            "index": "D",
            "name": "Guess The String",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1697,
            "index": "C",
            "name": "awoo\u0027s Favorite Problem",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 1696,
            "index": "F",
            "name": "Tree Recovery",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1696,
            "index": "D",
            "name": "Permutation Graph",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "divide and conquer",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 1696,
            "index": "C",
            "name": "Fishingprince Plays With Array",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1695,
            "index": "E",
            "name": "Ambiguous Dominoes",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1695,
            "index": "D2",
            "name": "Tree Queries (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1695,
            "index": "D1",
            "name": "Tree Queries (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1694,
            "index": "B",
            "name": "Paranoid String",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1691,
            "index": "D",
            "name": "Max GEQ Sum",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "divide and conquer",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1691,
            "index": "C",
            "name": "Sum of Substrings",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1691,
            "index": "B",
            "name": "Shoe Shuffling",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1690,
            "index": "A",
            "name": "Print a Pedestal (Codeforces logo?)",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1689,
            "index": "E",
            "name": "ANDfinity",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 1688,
            "index": "C",
            "name": "Manipulating History",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1688,
            "index": "B",
            "name": "Patchouli\u0027s Magical Talisman",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 800,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1687,
            "index": "E",
            "name": "Become Big For Me",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 3500,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1687,
            "index": "B",
            "name": "Railway System",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "interactive",
                "sortings"
            ]
        },
        {
            "contestId": 1685,
            "index": "D2",
            "name": "Permutation Weight (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1685,
            "index": "D1",
            "name": "Permutation Weight (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu"
            ]
        },
        {
            "contestId": 1685,
            "index": "C",
            "name": "Bring Balance",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1685,
            "index": "A",
            "name": "Circular Local MiniMax",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1684,
            "index": "H",
            "name": "Hard Cut",
            "type": "PROGRAMMING",
            "points": 3250.0,
            "rating": 3400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "divide and conquer",
                "math"
            ]
        },
        {
            "contestId": 1684,
            "index": "G",
            "name": "Euclid Guess",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "flows",
                "graph matchings",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1684,
            "index": "E",
            "name": "MEX vs DIFF",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2100,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1684,
            "index": "D",
            "name": "Traps",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1684,
            "index": "C",
            "name": "Column Swapping",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1684,
            "index": "B",
            "name": "Z mod X \u003d C",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1684,
            "index": "A",
            "name": "Digit Minimization",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "games",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1682,
            "index": "E",
            "name": "Unordered Swaps",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "math",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1682,
            "index": "D",
            "name": "Circular Spanning Tree",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1682,
            "index": "C",
            "name": "LIS or Reverse LIS?",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1682,
            "index": "B",
            "name": "AND Sorting",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1677,
            "index": "C",
            "name": "Tokitsukaze and Two Colorful Tapes",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1674,
            "index": "E",
            "name": "Breaking the Wall",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1674,
            "index": "D",
            "name": "A-B-C Sort",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1674,
            "index": "A",
            "name": "Number Transformation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1673,
            "index": "F",
            "name": "Anti-Theft Road Planning",
            "type": "PROGRAMMING",
            "points": 3250.0,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "divide and conquer",
                "greedy",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1672,
            "index": "H",
            "name": "Zigu Zagu",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1672,
            "index": "G",
            "name": "Cross Xor",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 1672,
            "index": "F2",
            "name": "Checker for Array Shuffling",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1672,
            "index": "F1",
            "name": "Array Shuffling",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1672,
            "index": "E",
            "name": "notepad.exe",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "interactive"
            ]
        },
        {
            "contestId": 1672,
            "index": "D",
            "name": "Cyclic Rotation",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 1672,
            "index": "C",
            "name": "Unequal Array",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1672,
            "index": "B",
            "name": "I love AAAB",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1671,
            "index": "D",
            "name": "Insert a Progression",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1670,
            "index": "E",
            "name": "Hemose on the Tree",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 1667,
            "index": "D",
            "name": "Edge Elimination",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 1667,
            "index": "C",
            "name": "Half Queen Cover",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1666,
            "index": "J",
            "name": "Job Lookup",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dp",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 1666,
            "index": "I",
            "name": "Interactive Treasure Hunt",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "geometry",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1666,
            "index": "E",
            "name": "Even Split",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1666,
            "index": "C",
            "name": "Connect the Points",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 1665,
            "index": "D",
            "name": "GCD Guess",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "chinese remainder theorem",
                "constructive algorithms",
                "games",
                "interactive",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1665,
            "index": "B",
            "name": "Array Cloning Technique",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1665,
            "index": "A",
            "name": "GCD vs LCM",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1663,
            "index": "H",
            "name": "Cross-Language Program",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1663,
            "index": "G",
            "name": "Six Characters",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1662,
            "index": "M",
            "name": "Bottle Arrangements",
            "type": "PROGRAMMING",
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1660,
            "index": "E",
            "name": "Matrix and Shifts",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1659,
            "index": "E",
            "name": "AND-MEX Walk",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 1659,
            "index": "D",
            "name": "Reverse Sort Sum",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1659,
            "index": "B",
            "name": "Bit Flipping",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1659,
            "index": "A",
            "name": "Red Versus Blue",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1658,
            "index": "F",
            "name": "Juju and Binary String",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1658,
            "index": "C",
            "name": "Shinju and the Lost Permutation",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1658,
            "index": "A",
            "name": "Marin and Photoshoot",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1656,
            "index": "I",
            "name": "Neighbour Ordering",
            "type": "PROGRAMMING",
            "points": 4500.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1656,
            "index": "G",
            "name": "Cycle Palindrome",
            "type": "PROGRAMMING",
            "points": 3250.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 1656,
            "index": "F",
            "name": "Parametric MST",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2600,
            "tags": [
                "binary search",
                "constructive algorithms",
                "graphs",
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1656,
            "index": "E",
            "name": "Equal Tree Sums",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1656,
            "index": "D",
            "name": "K-good",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1656,
            "index": "C",
            "name": "Make Equal With Mod",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory",
                "sortings"
            ]
        },
        {
            "contestId": 1654,
            "index": "H",
            "name": "Three Minimums",
            "type": "PROGRAMMING",
            "points": 4000.0,
            "rating": 3500,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "divide and conquer",
                "dp",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 1651,
            "index": "E",
            "name": "Sum of Matchings",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "dfs and similar",
                "graph matchings",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1651,
            "index": "B",
            "name": "Prove Him Wrong",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1650,
            "index": "D",
            "name": "Twist the Permutation",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1648,
            "index": "B",
            "name": "Integral Array",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "math"
            ]
        },
        {
            "contestId": 1647,
            "index": "D",
            "name": "Madoka and the Best School in Russia",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1647,
            "index": "C",
            "name": "Madoka and Childish Pranks",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1647,
            "index": "B",
            "name": "Madoka and the Elegant Gift",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1646,
            "index": "F",
            "name": "Playing Around the Table",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1646,
            "index": "D",
            "name": "Weight the Tree",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1646,
            "index": "C",
            "name": "Factorials and Powers of Two",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1646,
            "index": "B",
            "name": "Quality vs Quantity",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1644,
            "index": "B",
            "name": "Anti-Fibonacci Permutation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1641,
            "index": "B",
            "name": "Repetitions Decoding",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1638,
            "index": "D",
            "name": "Big Brush",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1638,
            "index": "A",
            "name": "Reverse",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1637,
            "index": "G",
            "name": "Birthday",
            "type": "PROGRAMMING",
            "points": 4000.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1637,
            "index": "F",
            "name": "Towers",
            "type": "PROGRAMMING",
            "points": 3250.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1635,
            "index": "E",
            "name": "Cars ",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2200,
            "tags": [
                "2-sat",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1635,
            "index": "C",
            "name": "Differential Sorting",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1634,
            "index": "E",
            "name": "Fair Share",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "graph matchings",
                "graphs"
            ]
        },
        {
            "contestId": 1634,
            "index": "D",
            "name": "Finding Zero",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1634,
            "index": "C",
            "name": "OKEA",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1632,
            "index": "B",
            "name": "Roof Construction",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1630,
            "index": "D",
            "name": "Flipping Range",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 1630,
            "index": "B",
            "name": "Range and Partition",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1630,
            "index": "A",
            "name": "And Matching",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1628,
            "index": "C",
            "name": "Grid Xor",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1628,
            "index": "A",
            "name": "Meximum Array",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1627,
            "index": "C",
            "name": "Not Assigning",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "number theory",
                "trees"
            ]
        },
        {
            "contestId": 1627,
            "index": "A",
            "name": "Not Shading",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1626,
            "index": "A",
            "name": "Equidistant Letters",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1624,
            "index": "F",
            "name": "Interacdive Problem",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1624,
            "index": "E",
            "name": "Masha-forgetful",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "hashing",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 1624,
            "index": "C",
            "name": "Division by Two and Permutation",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "flows",
                "graph matchings",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1622,
            "index": "F",
            "name": "Quadratic Set",
            "type": "PROGRAMMING",
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "hashing",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1621,
            "index": "D",
            "name": "The Winter Hike",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1621,
            "index": "A",
            "name": "Stable Arrangement of Rooks",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1620,
            "index": "E",
            "name": "Replace the Numbers",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dsu",
                "implementation"
            ]
        },
        {
            "contestId": 1620,
            "index": "D",
            "name": "Exact Change",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1620,
            "index": "A",
            "name": "Equal or Not Equal",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "dsu",
                "implementation"
            ]
        },
        {
            "contestId": 1619,
            "index": "F",
            "name": "Let\u0027s Play the Hat?",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1619,
            "index": "E",
            "name": "MEX and Increments",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dp",
                "greedy",
                "implementation",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1618,
            "index": "F",
            "name": "Reverse",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "implementation",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1618,
            "index": "E",
            "name": "Singers\u0027 Tour",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1617,
            "index": "D2",
            "name": "Too Many Impostors (hard version)",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "implementation",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1617,
            "index": "D1",
            "name": "Too Many Impostors (easy version)",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "implementation",
                "interactive"
            ]
        },
        {
            "contestId": 1617,
            "index": "B",
            "name": "GCD Problem",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1617,
            "index": "A",
            "name": "Forbidden Subsequence",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        {
            "contestId": 1615,
            "index": "H",
            "name": "Reindeer Games",
            "type": "PROGRAMMING",
            "points": 4000.0,
            "rating": 3000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "divide and conquer",
                "flows",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1615,
            "index": "G",
            "name": "Maximum Adjacent Pairs",
            "type": "PROGRAMMING",
            "points": 3750.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms",
                "graph matchings"
            ]
        },
        {
            "contestId": 1614,
            "index": "C",
            "name": "Divan and bitwise operations",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "combinatorics",
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1614,
            "index": "B",
            "name": "Divan and a New Project ",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1614,
            "index": "A",
            "name": "Divan and a Store",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1612,
            "index": "G",
            "name": "Max Sum Array",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1612,
            "index": "B",
            "name": "Special Permutation",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1612,
            "index": "A",
            "name": "Distance",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1611,
            "index": "D",
            "name": "Weights Assignment For Tree Edges",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 1611,
            "index": "C",
            "name": "Polycarp Recovers the Permutation",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1611,
            "index": "B",
            "name": "Team Composition: Programmers and Mathematicians",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1611,
            "index": "A",
            "name": "Make Even",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1610,
            "index": "F",
            "name": "Mashtali: a Space Oddysey",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1608,
            "index": "B",
            "name": "Build the Permutation",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1608,
            "index": "A",
            "name": "Find Array",
            "type": "PROGRAMMING",
            "points": 250.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1606,
            "index": "D",
            "name": "Red-Blue Matrix",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1605,
            "index": "D",
            "name": "Treelabeling",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "games",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1603,
            "index": "B",
            "name": "Moderate Modular Mode",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1603,
            "index": "A",
            "name": "Di-visible Confusion",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1602,
            "index": "B",
            "name": "Divine Array",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1599,
            "index": "A",
            "name": "Weights",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1594,
            "index": "F",
            "name": "Ideal Farm",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1594,
            "index": "D",
            "name": "The Number of Imposters",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 1593,
            "index": "G",
            "name": "Changing Brackets",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1592,
            "index": "F2",
            "name": "Alice and Recoloring 2",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "flows",
                "graph matchings",
                "greedy"
            ]
        },
        {
            "contestId": 1592,
            "index": "F1",
            "name": "Alice and Recoloring 1",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1592,
            "index": "C",
            "name": "Bakry and Partitioning",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1592,
            "index": "B",
            "name": "Hemose Shopping",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "dsu",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1586,
            "index": "I",
            "name": "Omkar and Mosaic",
            "type": "PROGRAMMING",
            "points": 4000.0,
            "rating": 3500,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1583,
            "index": "F",
            "name": "Defender of Childhood Dreams",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "divide and conquer"
            ]
        },
        {
            "contestId": 1583,
            "index": "E",
            "name": "Moment of Bloom",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graph matchings",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1583,
            "index": "D",
            "name": "Omkar and the Meaning of Life",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "interactive"
            ]
        },
        {
            "contestId": 1583,
            "index": "B",
            "name": "Omkar and Heavenly Tree",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 1582,
            "index": "D",
            "name": "Vupsen, Pupsen and 0",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1581,
            "index": "B",
            "name": "Diameter of Graph",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1580,
            "index": "E",
            "name": "Railway Construction",
            "type": "PROGRAMMING",
            "points": 3500.0,
            "rating": 3400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1579,
            "index": "E1",
            "name": "Permutation Minimization by Deque",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1579,
            "index": "D",
            "name": "Productive Meeting",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1578,
            "index": "M",
            "name": "The Mind",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "interactive",
                "probabilities"
            ]
        },
        {
            "contestId": 1578,
            "index": "A",
            "name": "Anti-Tetris",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1574,
            "index": "E",
            "name": "Coloring",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1574,
            "index": "A",
            "name": "Regular Bracket Sequences",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1572,
            "index": "B",
            "name": "Xor of 3",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1571,
            "index": "F",
            "name": "Kotlinforces",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "*special",
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 1571,
            "index": "D",
            "name": "Sweepstake",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "*special",
                "brute force",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1569,
            "index": "B",
            "name": "Chess Tournament",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1567,
            "index": "F",
            "name": "One-Four Overload",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2700,
            "tags": [
                "2-sat",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1567,
            "index": "D",
            "name": "Expression Evaluation Error",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1566,
            "index": "H",
            "name": "Xor-quiz",
            "type": "PROGRAMMING",
            "points": 3750.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "dp",
                "interactive",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1566,
            "index": "G",
            "name": "Four Vertices",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 1566,
            "index": "E",
            "name": "Buds Re-hanging",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1566,
            "index": "C",
            "name": "MAX-MEX Cut",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1566,
            "index": "B",
            "name": "MIN-MEX Cut",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 800,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1562,
            "index": "C",
            "name": "Rings",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1562,
            "index": "B",
            "name": "Scenes From a Memory",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1560,
            "index": "F2",
            "name": "Nearest Beautiful Number (hard version)",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1560,
            "index": "F1",
            "name": "Nearest Beautiful Number (easy version)",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "greedy"
            ]
        },
        {
            "contestId": 1559,
            "index": "D2",
            "name": "Mocha and Diana (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 1559,
            "index": "D1",
            "name": "Mocha and Diana (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1559,
            "index": "C",
            "name": "Mocha and Hiking",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1559,
            "index": "A",
            "name": "Mocha and Math",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 900,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1558,
            "index": "C",
            "name": "Bottom-Tier Reversals",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1557,
            "index": "E",
            "name": "Assiut Chess",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1556,
            "index": "D",
            "name": "Take a Guess",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1555,
            "index": "D",
            "name": "Say No to Palindromes",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "strings"
            ]
        },
        {
            "contestId": 1555,
            "index": "C",
            "name": "Coin Rows",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 1554,
            "index": "D",
            "name": "Diane",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1553,
            "index": "G",
            "name": "Common Divisor Graph",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dsu",
                "graphs",
                "hashing",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1553,
            "index": "E",
            "name": "Permutation Shift",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2100,
            "tags": [
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 1552,
            "index": "E",
            "name": "Colors and Intervals",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1552,
            "index": "D",
            "name": "Array Differentiation",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 1552,
            "index": "C",
            "name": "Maximize the Intersections",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "geometry",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1551,
            "index": "D2",
            "name": "Domino (hard version)",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1551,
            "index": "D1",
            "name": "Domino (easy version)",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1551,
            "index": "B2",
            "name": "Wonderful Coloring - 2",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1550,
            "index": "D",
            "name": "Excellent Arrays",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "binary search",
                "combinatorics",
                "constructive algorithms",
                "implementation",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1547,
            "index": "D",
            "name": "Co-growing Sequence",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1545,
            "index": "D",
            "name": "AquaMoon and Wrong Coordinate",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1545,
            "index": "C",
            "name": "AquaMoon and Permutations",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2800,
            "tags": [
                "2-sat",
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "graph matchings",
                "graphs"
            ]
        },
        {
            "contestId": 1543,
            "index": "E",
            "name": "The Final Pursuit",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "divide and conquer",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1543,
            "index": "D2",
            "name": "RPD and Rap Sheet (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1543,
            "index": "D1",
            "name": "RPD and Rap Sheet (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1542,
            "index": "B",
            "name": "Plus and Multiply",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1541,
            "index": "A",
            "name": "Pretty Permutations",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1540,
            "index": "A",
            "name": "Great Graphs",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "shortest paths",
                "sortings"
            ]
        },
        {
            "contestId": 1539,
            "index": "E",
            "name": "Game with Cards",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2500,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1538,
            "index": "D",
            "name": "Another Problem About Dividing Numbers",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1537,
            "index": "F",
            "name": "Figure Fixing",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1537,
            "index": "C",
            "name": "Challenging Cliffs",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1537,
            "index": "B",
            "name": "Bad Boy",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1536,
            "index": "F",
            "name": "Omkar and Akmar",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2600,
            "tags": [
                "chinese remainder theorem",
                "combinatorics",
                "constructive algorithms",
                "fft",
                "games",
                "geometry",
                "math",
                "meet-in-the-middle",
                "string suffix structures"
            ]
        },
        {
            "contestId": 1536,
            "index": "B",
            "name": "Prinzessin der Verurteilung",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1536,
            "index": "A",
            "name": "Omkar and Bad Story",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1534,
            "index": "H",
            "name": "Lost Nodes",
            "type": "PROGRAMMING",
            "points": 3500.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "interactive",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1534,
            "index": "D",
            "name": "Lost Tree",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "interactive",
                "trees"
            ]
        },
        {
            "contestId": 1533,
            "index": "I",
            "name": "Excursions",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms",
                "dfs and similar",
                "flows",
                "graph matchings",
                "graphs"
            ]
        },
        {
            "contestId": 1533,
            "index": "G",
            "name": "Biome Map",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1531,
            "index": "C",
            "name": "Симметричный амфитеатр",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 1530,
            "index": "G",
            "name": "What a Reversal",
            "type": "PROGRAMMING",
            "points": 3750.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1530,
            "index": "E",
            "name": "Minimax",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1530,
            "index": "D",
            "name": "Secret Santa",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "flows",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1530,
            "index": "B",
            "name": "Putting Plates",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1529,
            "index": "A",
            "name": "Eshag Loves Big Arrays",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1528,
            "index": "D",
            "name": "It\u0027s a bird! No, it\u0027s a plane! No, it\u0027s AaParsa!",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1527,
            "index": "B2",
            "name": "Palindrome Game (hard version)",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "games"
            ]
        },
        {
            "contestId": 1527,
            "index": "B1",
            "name": "Palindrome Game (easy version)",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "games"
            ]
        },
        {
            "contestId": 1526,
            "index": "F",
            "name": "Median Queries",
            "type": "PROGRAMMING",
            "points": 3500.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "interactive",
                "probabilities"
            ]
        },
        {
            "contestId": 1526,
            "index": "E",
            "name": "Oolimry and Suffix Array",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1526,
            "index": "D",
            "name": "Kill Anton",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1526,
            "index": "A",
            "name": "Mean Inequality",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1525,
            "index": "B",
            "name": "Permutation Sort",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1523,
            "index": "B",
            "name": "Lord of the Values",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1521,
            "index": "E",
            "name": "Nastia and a Beautiful Matrix",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2700,
            "tags": [
                "binary search",
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1521,
            "index": "D",
            "name": "Nastia Plays with a Tree",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "dp",
                "dsu",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1521,
            "index": "C",
            "name": "Nastia and a Hidden Permutation",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1521,
            "index": "B",
            "name": "Nastia and a Good Array",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1521,
            "index": "A",
            "name": "Nastia and Nearly Good Numbers",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1520,
            "index": "F2",
            "name": "Guess the K-th Zero (Hard version)",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "interactive"
            ]
        },
        {
            "contestId": 1520,
            "index": "C",
            "name": "Not Adjacent Matrix",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1519,
            "index": "E",
            "name": "Off by One",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "geometry",
                "graphs",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1517,
            "index": "G",
            "name": "Starry Night Camping",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms",
                "flows",
                "graphs"
            ]
        },
        {
            "contestId": 1517,
            "index": "C",
            "name": "Fillomino 2",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1517,
            "index": "B",
            "name": "Morning Jogging",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1516,
            "index": "C",
            "name": "Baby Ehab Partitions Again",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1515,
            "index": "F",
            "name": "Phoenix and Earthquake",
            "type": "PROGRAMMING",
            "points": 3250.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1515,
            "index": "C",
            "name": "Phoenix and Towers",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1515,
            "index": "A",
            "name": "Phoenix and Gold",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1513,
            "index": "F",
            "name": "Swapping Problem",
            "type": "PROGRAMMING",
            "points": 3500.0,
            "rating": 2500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 1513,
            "index": "E",
            "name": "Cost Equilibrium",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2300,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1513,
            "index": "D",
            "name": "GCD and MST",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy",
                "number theory",
                "sortings"
            ]
        },
        {
            "contestId": 1513,
            "index": "B",
            "name": "AND Sequences",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1400,
            "tags": [
                "bitmasks",
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1513,
            "index": "A",
            "name": "Array and Peaks",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1512,
            "index": "D",
            "name": "Corrupted Array",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1512,
            "index": "C",
            "name": "A-B Palindrome",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 1511,
            "index": "D",
            "name": "Min Cost String",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1511,
            "index": "B",
            "name": "GCD Length",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1510,
            "index": "J",
            "name": "Japanese Game",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1509,
            "index": "A",
            "name": "Average Height",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1508,
            "index": "E",
            "name": "Tree Calendar",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 3100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1508,
            "index": "D",
            "name": "Swap Pass",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "geometry",
                "sortings"
            ]
        },
        {
            "contestId": 1508,
            "index": "B",
            "name": "Almost Sorted",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "binary search",
                "combinatorics",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1508,
            "index": "A",
            "name": "Binary Literature",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 1506,
            "index": "F",
            "name": "Triangular Paths",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math",
                "shortest paths",
                "sortings"
            ]
        },
        {
            "contestId": 1506,
            "index": "E",
            "name": "Restoring the Permutation",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1506,
            "index": "D",
            "name": "Epic Transformation",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1504,
            "index": "B",
            "name": "Flip the Bits",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1504,
            "index": "A",
            "name": " Déjà Vu",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1503,
            "index": "F",
            "name": "Balance the Cards",
            "type": "PROGRAMMING",
            "points": 4000.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "divide and conquer",
                "geometry",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1503,
            "index": "D",
            "name": "Flip the Cards",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2600,
            "tags": [
                "2-sat",
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1503,
            "index": "B",
            "name": "3-Coloring",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "games",
                "interactive"
            ]
        },
        {
            "contestId": 1503,
            "index": "A",
            "name": "Balance the Bits",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1500,
            "index": "C",
            "name": "Matrix Sorting",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2600,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1499,
            "index": "A",
            "name": "Domino on Windowsill",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1497,
            "index": "C2",
            "name": "k-LCM (hard version)",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1497,
            "index": "C1",
            "name": "k-LCM (easy version)",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1497,
            "index": "B",
            "name": "M-arrays",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1496,
            "index": "A",
            "name": "Split it!",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1495,
            "index": "F",
            "name": "Squares",
            "type": "PROGRAMMING",
            "points": 3250.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dp",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1495,
            "index": "C",
            "name": "Garden of the Sun",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1494,
            "index": "F",
            "name": "Delete The Edges",
            "type": "PROGRAMMING",
            "rating": 2900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1494,
            "index": "E",
            "name": "A-Z Graph",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "hashing"
            ]
        },
        {
            "contestId": 1494,
            "index": "D",
            "name": "Dogeforces",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "divide and conquer",
                "dsu",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1493,
            "index": "E",
            "name": "Enormous XOR",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2600,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "math",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 1493,
            "index": "C",
            "name": "K-beautiful Strings",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2000,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1493,
            "index": "A",
            "name": "Anti-knapsack",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1492,
            "index": "E",
            "name": "Almost Fault-Tolerant Database",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1492,
            "index": "D",
            "name": "Genius\u0027s Gambit",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1491,
            "index": "G",
            "name": "Switch and Flip",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 1491,
            "index": "F",
            "name": "Magnets",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2700,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1491,
            "index": "D",
            "name": "Zookeeper and The Infinite Zoo",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1490,
            "index": "B",
            "name": "Balanced Remainders",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1487,
            "index": "C",
            "name": "Minimum Ties",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1486,
            "index": "E",
            "name": "Paired Payment",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2200,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "dp",
                "flows",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1485,
            "index": "D",
            "name": "Multiples and Power Differences",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1482,
            "index": "C",
            "name": "Basic Diplomacy",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1481,
            "index": "D",
            "name": "AB Graph",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1481,
            "index": "C",
            "name": "Fence Painting",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1479,
            "index": "C",
            "name": "Continuous City",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1479,
            "index": "B2",
            "name": "Painting the Array II",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1479,
            "index": "B1",
            "name": "Painting the Array I",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1477,
            "index": "D",
            "name": "Nezzar and Hidden Permutations",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1477,
            "index": "C",
            "name": "Nezzar and Nice Beatmap",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "geometry",
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1477,
            "index": "A",
            "name": "Nezzar and Board",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1476,
            "index": "A",
            "name": "K-divisible Sum",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1475,
            "index": "F",
            "name": "Unusual Matrix",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "2-sat",
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1474,
            "index": "E",
            "name": "What Is It?",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1474,
            "index": "C",
            "name": "Array Destruction",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1474,
            "index": "B",
            "name": "Different Divisors",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1473,
            "index": "C",
            "name": "No More Inversions",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1470,
            "index": "D",
            "name": "Strange Housing",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graph matchings",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1470,
            "index": "C",
            "name": "Strange Shuffle",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2500,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1469,
            "index": "D",
            "name": "Ceil Divisions",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1469,
            "index": "A",
            "name": "Regular Bracket Sequence",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1468,
            "index": "H",
            "name": "K and Medians",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1467,
            "index": "C",
            "name": "Three Bags",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1467,
            "index": "A",
            "name": "Wizard of Orz",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1463,
            "index": "E",
            "name": "Plan of Lectures",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "implementation",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1463,
            "index": "D",
            "name": "Pairs",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1463,
            "index": "B",
            "name": "Find The Array",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1461,
            "index": "F",
            "name": "Mathematical Expression",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1461,
            "index": "A",
            "name": "String Generation",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1455,
            "index": "E",
            "name": "Four Points",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "flows",
                "geometry",
                "greedy",
                "implementation",
                "math",
                "ternary search"
            ]
        },
        {
            "contestId": 1455,
            "index": "C",
            "name": "Ping-pong",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "games",
                "math"
            ]
        },
        {
            "contestId": 1455,
            "index": "B",
            "name": "Jumps",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1454,
            "index": "D",
            "name": "Number into Sequence",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1454,
            "index": "A",
            "name": "Special Permutation",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "probabilities"
            ]
        },
        {
            "contestId": 1453,
            "index": "D",
            "name": "Checkpoints",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 1453,
            "index": "B",
            "name": "Suffix Operations",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1452,
            "index": "F",
            "name": "Divide Powers",
            "type": "PROGRAMMING",
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1451,
            "index": "F",
            "name": "Nullify The Matrix",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "games"
            ]
        },
        {
            "contestId": 1451,
            "index": "E2",
            "name": "Bitwise Queries (Hard Version)",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1451,
            "index": "E1",
            "name": "Bitwise Queries (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1450,
            "index": "F",
            "name": "The Struggling Contestant",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1450,
            "index": "E",
            "name": "Capitalism",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1450,
            "index": "C2",
            "name": "Errich-Tac-Toe (Hard Version)",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1450,
            "index": "C1",
            "name": "Errich-Tac-Toe (Easy Version)",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1450,
            "index": "A",
            "name": "Avoid Trygub",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1447,
            "index": "A",
            "name": "Add Candies",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1446,
            "index": "E",
            "name": "Long Recovery",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "dfs and similar"
            ]
        },
        {
            "contestId": 1446,
            "index": "A",
            "name": "Knapsack",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1444,
            "index": "D",
            "name": "Rectangular Polyline",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "dp",
                "geometry"
            ]
        },
        {
            "contestId": 1443,
            "index": "A",
            "name": "Kids Seating",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1442,
            "index": "E",
            "name": "Black, White and Grey Tree",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 3000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1442,
            "index": "A",
            "name": "Extreme Subtraction",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1439,
            "index": "B",
            "name": "Graph Subset Problem",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs"
            ]
        },
        {
            "contestId": 1439,
            "index": "A2",
            "name": "Binary Table (Hard Version)",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1439,
            "index": "A1",
            "name": "Binary Table (Easy Version)",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1438,
            "index": "E",
            "name": "Yurii Can Do Everything",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2500,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "divide and conquer",
                "two pointers"
            ]
        },
        {
            "contestId": 1438,
            "index": "D",
            "name": "Powerful Ksenia",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1438,
            "index": "C",
            "name": "Engineer Artem",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2000,
            "tags": [
                "2-sat",
                "chinese remainder theorem",
                "constructive algorithms",
                "fft",
                "flows"
            ]
        },
        {
            "contestId": 1438,
            "index": "B",
            "name": "Valerii Against Everyone",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1438,
            "index": "A",
            "name": "Specific Tastes of Andre ",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1437,
            "index": "E",
            "name": "Make It Increasing",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "dp",
                "implementation"
            ]
        },
        {
            "contestId": 1437,
            "index": "B",
            "name": "Reverse Binary Strings",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1437,
            "index": "A",
            "name": "Marketing Scheme",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1436,
            "index": "B",
            "name": "Prime Square",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1433,
            "index": "D",
            "name": "Districts Connection",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "dfs and similar"
            ]
        },
        {
            "contestId": 1433,
            "index": "C",
            "name": "Dominant Piranha",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1430,
            "index": "C",
            "name": "Numbers on Whiteboard",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1430,
            "index": "A",
            "name": "Number of Apartments",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1428,
            "index": "D",
            "name": "Bouncing Boomerangs",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1427,
            "index": "E",
            "name": "Xum",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math",
                "matrices",
                "number theory"
            ]
        },
        {
            "contestId": 1427,
            "index": "D",
            "name": "Unshuffling a Deck",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1426,
            "index": "E",
            "name": "Rock, Paper, Scissors",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "flows",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1426,
            "index": "D",
            "name": "Non-zero Segments",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1426,
            "index": "C",
            "name": "Increase and Copy",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1425,
            "index": "H",
            "name": "Huge Boxes of Animal Toys",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1423,
            "index": "J",
            "name": "Bubble Cup hypothesis",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 1421,
            "index": "D",
            "name": "Hexagons",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math",
                "shortest paths"
            ]
        },
        {
            "contestId": 1421,
            "index": "C",
            "name": "Palindromifier",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1421,
            "index": "B",
            "name": "Putting Bricks in the Wall",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1420,
            "index": "C1",
            "name": "Pokémon Army (easy version)",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1419,
            "index": "E",
            "name": "Decryption",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1419,
            "index": "D2",
            "name": "Sage\u0027s Birthday (hard version)",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1500,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1419,
            "index": "D1",
            "name": "Sage\u0027s Birthday (easy version)",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1419,
            "index": "B",
            "name": "Stairs",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1416,
            "index": "B",
            "name": "Make Them Equal",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1415,
            "index": "E",
            "name": "New Game Plus!",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1415,
            "index": "D",
            "name": "XOR-gun",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1413,
            "index": "A",
            "name": "Finding Sasuke",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1408,
            "index": "F",
            "name": "Two Different",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "divide and conquer"
            ]
        },
        {
            "contestId": 1408,
            "index": "B",
            "name": "Arrays Sum",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1408,
            "index": "A",
            "name": "Circle Coloring",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1407,
            "index": "E",
            "name": "Egor in the Republic of Dagestan",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 1407,
            "index": "C",
            "name": "Chocolate Bunny",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1407,
            "index": "A",
            "name": "Ahahahahahahahaha",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1406,
            "index": "D",
            "name": "Three Sequences",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1406,
            "index": "C",
            "name": "Link Cut Centroids",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1405,
            "index": "B",
            "name": "Array Cancellation",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1405,
            "index": "A",
            "name": "Permutation Forgery",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1404,
            "index": "D",
            "name": "Game of Pairs",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "interactive",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1404,
            "index": "C",
            "name": "Fixed Point Removal",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2300,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1401,
            "index": "C",
            "name": "Mere Array",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory",
                "sortings"
            ]
        },
        {
            "contestId": 1401,
            "index": "B",
            "name": "Ternary Sequence",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1401,
            "index": "A",
            "name": "Distance and Axis",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1400,
            "index": "C",
            "name": "Binary String Reconstruction",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "2-sat",
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1400,
            "index": "A",
            "name": "String Similarity",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1399,
            "index": "D",
            "name": "Binary String To Subsequences",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1396,
            "index": "E",
            "name": "Distance Matching",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 1396,
            "index": "B",
            "name": "Stoned Game",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "games",
                "greedy"
            ]
        },
        {
            "contestId": 1396,
            "index": "A",
            "name": "Multiples of Length",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 1395,
            "index": "B",
            "name": "Boboniu Plays Chess",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1393,
            "index": "C",
            "name": "Pinkie Pie Eats Patty-cakes",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1393,
            "index": "B",
            "name": "Applejack and Storages",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1392,
            "index": "F",
            "name": "Omkar and Landslide",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1392,
            "index": "E",
            "name": "Omkar and Duck",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1391,
            "index": "E",
            "name": "Pairs of Pairs",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1391,
            "index": "D",
            "name": "505",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1391,
            "index": "A",
            "name": "Suborrays",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1389,
            "index": "A",
            "name": "LCM Problem",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1386,
            "index": "A",
            "name": "Colors",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "*special",
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1385,
            "index": "E",
            "name": "Directing Edges",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1384,
            "index": "B2",
            "name": "Koa and the Beach (Hard Version)",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1384,
            "index": "A",
            "name": "Common Prefixes",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1383,
            "index": "D",
            "name": "Rearrange",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1383,
            "index": "B",
            "name": "GameGame",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "games",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1381,
            "index": "C",
            "name": "Mastermind",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "graph matchings",
                "greedy",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1381,
            "index": "A2",
            "name": "Prefix Flip (Hard Version)",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "data structures",
                "implementation",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 1381,
            "index": "A1",
            "name": "Prefix Flip (Easy Version)",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "strings"
            ]
        },
        {
            "contestId": 1380,
            "index": "D",
            "name": "Berserk And Fireball",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1379,
            "index": "E",
            "name": "Inverse Genealogy",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "dp",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1375,
            "index": "H",
            "name": "Set Merging",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms",
                "divide and conquer"
            ]
        },
        {
            "contestId": 1375,
            "index": "G",
            "name": "Tree Modification",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "graph matchings",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1375,
            "index": "F",
            "name": "Integer Game",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "games",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1375,
            "index": "E",
            "name": "Inversion SwapSort",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1375,
            "index": "D",
            "name": "Replace by MEX",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1375,
            "index": "C",
            "name": "Element Extermination",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1375,
            "index": "B",
            "name": "Neighbor Grid",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1375,
            "index": "A",
            "name": "Sign Flipping",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1374,
            "index": "F",
            "name": "Cyclic Shifts Sorting",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1373,
            "index": "F",
            "name": "Network Coverage",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1373,
            "index": "E",
            "name": "Sum of Digits",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1372,
            "index": "C",
            "name": "Omkar and Baseball",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1372,
            "index": "A",
            "name": "Omkar and Completion",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1371,
            "index": "D",
            "name": "Grid-00100",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1370,
            "index": "E",
            "name": "Binary Subsequence Rotation",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2100,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 1370,
            "index": "B",
            "name": "GCD Compression",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1368,
            "index": "E",
            "name": "Ski Accidents",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1368,
            "index": "C",
            "name": "Even Picture",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1368,
            "index": "B",
            "name": "Codeforces Subsequences",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1367,
            "index": "D",
            "name": "Task On The Board",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1367,
            "index": "C",
            "name": "Social Distance",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1366,
            "index": "E",
            "name": "Two Arrays",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "dp",
                "two pointers"
            ]
        },
        {
            "contestId": 1366,
            "index": "D",
            "name": "Two Divisors",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1365,
            "index": "G",
            "name": "Secure Password",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2800,
            "tags": [
                "bitmasks",
                "combinatorics",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1365,
            "index": "F",
            "name": "Swaps Again",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1365,
            "index": "E",
            "name": "Maximum Subsequence Value",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1365,
            "index": "D",
            "name": "Solve The Maze",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 1365,
            "index": "C",
            "name": "Rotation Matching",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1365,
            "index": "B",
            "name": "Trouble Sort",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1364,
            "index": "E",
            "name": "X-OR",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "divide and conquer",
                "interactive",
                "probabilities"
            ]
        },
        {
            "contestId": 1364,
            "index": "D",
            "name": "Ehab\u0027s Last Corollary",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1364,
            "index": "C",
            "name": "Ehab and Prefix MEXs",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1361,
            "index": "C",
            "name": "Johnny and Megan\u0027s Necklace",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2500,
            "tags": [
                "binary search",
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 1361,
            "index": "A",
            "name": "Johnny and Contribution",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1360,
            "index": "H",
            "name": "Binary Median",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1360,
            "index": "G",
            "name": "A/B Matrix",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1360,
            "index": "F",
            "name": "Spy-string",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dp",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 1360,
            "index": "C",
            "name": "Similar Pairs",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "graph matchings",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1358,
            "index": "F",
            "name": "Tasty Cookie",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2700,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1358,
            "index": "E",
            "name": "Are You Fired?",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1355,
            "index": "F",
            "name": "Guess Divisors Count",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "interactive",
                "number theory"
            ]
        },
        {
            "contestId": 1355,
            "index": "D",
            "name": "Game With Array",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1354,
            "index": "F",
            "name": "Summoning Minions",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dp",
                "flows",
                "graph matchings",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1353,
            "index": "D",
            "name": "Constructing the Array",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 1353,
            "index": "A",
            "name": "Most Unstable Array",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1352,
            "index": "G",
            "name": "Special Permutation",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1352,
            "index": "F",
            "name": "Binary String Reconstruction",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "math"
            ]
        },
        {
            "contestId": 1352,
            "index": "B",
            "name": "Same Parity Summands",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1349,
            "index": "E",
            "name": "Slime and Hats",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1349,
            "index": "B",
            "name": "Orac and Medians",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1348,
            "index": "D",
            "name": "Phoenix and Science",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1348,
            "index": "C",
            "name": "Phoenix and Distribution",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        {
            "contestId": 1348,
            "index": "B",
            "name": "Phoenix and Beauty",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1344,
            "index": "B",
            "name": "Monopole Magnets",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 1343,
            "index": "F",
            "name": "Restore the Permutation by Sorted Segments",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1343,
            "index": "B",
            "name": "Balanced Array",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1342,
            "index": "D",
            "name": "Multiple Testcases",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1342,
            "index": "B",
            "name": "Binary Period",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1340,
            "index": "D",
            "name": "Nastya and Time Machine",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 1339,
            "index": "B",
            "name": "Sorted Adjacent Differences",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1338,
            "index": "D",
            "name": "Nested Rubber Bands",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1338,
            "index": "C",
            "name": "Perfect Triples",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "divide and conquer",
                "math"
            ]
        },
        {
            "contestId": 1338,
            "index": "B",
            "name": "Edge Weight Assignment",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 1337,
            "index": "A",
            "name": "Ichihime and Triangle",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1336,
            "index": "D",
            "name": "Yui and Mahjong Set",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1335,
            "index": "D",
            "name": "Anti-Sudoku",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1335,
            "index": "B",
            "name": "Construct the String",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1334,
            "index": "D",
            "name": "Minimum Euler Cycle",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1334,
            "index": "C",
            "name": "Circle of Monsters",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1333,
            "index": "E",
            "name": "Road to 1600",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1333,
            "index": "D",
            "name": "Challenges in school №41",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "games",
                "graphs",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1333,
            "index": "A",
            "name": "Little Artem",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1332,
            "index": "E",
            "name": "Height All the Same",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 1332,
            "index": "D",
            "name": "Walk on Matrix",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1332,
            "index": "B",
            "name": "Composite Coloring",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1329,
            "index": "D",
            "name": "Dreamoon Likes Strings",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 1329,
            "index": "C",
            "name": "Drazil Likes Heap",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1329,
            "index": "A",
            "name": "Dreamoon Likes Coloring",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1328,
            "index": "D",
            "name": "Carousel",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1327,
            "index": "C",
            "name": "Game with Chips",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1326,
            "index": "A",
            "name": "Bad Ugly Numbers",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        {
            "contestId": 1325,
            "index": "F",
            "name": "Ehab\u0027s Last Theorem",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1325,
            "index": "D",
            "name": "Ehab the Xorcist",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 1325,
            "index": "C",
            "name": "Ehab and Path-etic MEXs",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1325,
            "index": "A",
            "name": "EhAb AnD gCd",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 1322,
            "index": "B",
            "name": "Present",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2100,
            "tags": [
                "binary search",
                "bitmasks",
                "constructive algorithms",
                "data structures",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1321,
            "index": "C",
            "name": "Remove Adjacent",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1316,
            "index": "D",
            "name": "Nash Matrix",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1316,
            "index": "C",
            "name": "Primitive Primes",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "math",
                "ternary search"
            ]
        },
        {
            "contestId": 1316,
            "index": "B",
            "name": "String Modification",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "sortings",
                "strings"
            ]
        },
        {
            "contestId": 1313,
            "index": "B",
            "name": "Different Rules",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1312,
            "index": "B",
            "name": "Bogosort",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1311,
            "index": "E",
            "name": "Construct the Binary Tree",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 1305,
            "index": "E",
            "name": "Kuroni and the Score Distribution",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1305,
            "index": "D",
            "name": "Kuroni and the Celebration",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "interactive",
                "trees"
            ]
        },
        {
            "contestId": 1305,
            "index": "B",
            "name": "Kuroni and Simple Strings",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 1305,
            "index": "A",
            "name": "Kuroni and the Gifts",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1304,
            "index": "D",
            "name": "Shortest and Longest LIS",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1304,
            "index": "B",
            "name": "Longest Palindrome",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 1302,
            "index": "B",
            "name": "DAG",
            "type": "PROGRAMMING",
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1301,
            "index": "D",
            "name": "Time to Run",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1296,
            "index": "F",
            "name": "Berland Beauty",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1296,
            "index": "E1",
            "name": "String Coloring (easy version)",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1292,
            "index": "E",
            "name": "Rin and The Unknown Flower",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1292,
            "index": "B",
            "name": "Aroma\u0027s Search",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "geometry",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1290,
            "index": "D",
            "name": "Coffee Varieties (hard version)",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "interactive"
            ]
        },
        {
            "contestId": 1290,
            "index": "B",
            "name": "Irreducible Anagrams",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 1288,
            "index": "F",
            "name": "Red-Blue Graph",
            "type": "PROGRAMMING",
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "flows"
            ]
        },
        {
            "contestId": 1286,
            "index": "F",
            "name": "Harry The Potter",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 3100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "fft",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1286,
            "index": "C2",
            "name": "Madhouse (Hard version)",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "hashing",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1286,
            "index": "C1",
            "name": "Madhouse (Easy version)",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1286,
            "index": "B",
            "name": "Numbers on Tree",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1285,
            "index": "E",
            "name": "Delete a Segment",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "data structures",
                "dp",
                "graphs",
                "sortings",
                "trees",
                "two pointers"
            ]
        },
        {
            "contestId": 1283,
            "index": "F",
            "name": "DIY Garland",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1283,
            "index": "C",
            "name": "Friends and Gifts",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "math"
            ]
        },
        {
            "contestId": 1282,
            "index": "E",
            "name": "The Cake Is a Lie",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1282,
            "index": "D",
            "name": "Enchanted Artifact",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "interactive",
                "strings"
            ]
        },
        {
            "contestId": 1280,
            "index": "F",
            "name": "Intergalactic Sliding Puzzle",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3400,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1278,
            "index": "E",
            "name": "Tests for problem D",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "divide and conquer",
                "trees"
            ]
        },
        {
            "contestId": 1276,
            "index": "E",
            "name": "Four Stones",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1276,
            "index": "C",
            "name": "Beautiful Rectangle",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2300,
            "tags": [
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "data structures",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1272,
            "index": "B",
            "name": "Snow Walking Robot",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1270,
            "index": "I",
            "name": "Xor on Figures",
            "type": "PROGRAMMING",
            "points": 4500.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 1270,
            "index": "G",
            "name": "Subset with Zero Sum",
            "type": "PROGRAMMING",
            "points": 3750.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 1270,
            "index": "E",
            "name": "Divide Points",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 1270,
            "index": "D",
            "name": "Strange Device",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1270,
            "index": "C",
            "name": "Make Good",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1270,
            "index": "B",
            "name": "Interesting Subarray",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1268,
            "index": "A",
            "name": "Long Beautiful Integer",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 1267,
            "index": "L",
            "name": "Lexicography",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1267,
            "index": "I",
            "name": "Intriguing Selection",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "interactive",
                "sortings"
            ]
        },
        {
            "contestId": 1267,
            "index": "H",
            "name": "Help BerLine",
            "type": "PROGRAMMING",
            "rating": 3200,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1267,
            "index": "D",
            "name": "DevOps Best Practices",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1267,
            "index": "C",
            "name": "Cactus Revenge",
            "type": "PROGRAMMING",
            "rating": 3500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1266,
            "index": "D",
            "name": "Decreasing Debts",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy",
                "implementation",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 1266,
            "index": "C",
            "name": "Diverse Matrix",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1266,
            "index": "B",
            "name": "Dice Tower",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1265,
            "index": "A",
            "name": "Beautiful String",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1264,
            "index": "F",
            "name": "Beautiful Fibonacci Problem",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        {
            "contestId": 1264,
            "index": "E",
            "name": "Beautiful League",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "flows",
                "graph matchings"
            ]
        },
        {
            "contestId": 1264,
            "index": "B",
            "name": "Beautiful Sequence",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1256,
            "index": "F",
            "name": "Equalizing Two Strings",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "sortings",
                "strings"
            ]
        },
        {
            "contestId": 1255,
            "index": "C",
            "name": "League of Leesins",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1254,
            "index": "C",
            "name": "Point Ordering",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "geometry",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1254,
            "index": "B2",
            "name": "Send Boxes to Alice (Hard Version)",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory",
                "ternary search",
                "two pointers"
            ]
        },
        {
            "contestId": 1254,
            "index": "B1",
            "name": "Send Boxes to Alice (Easy Version)",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory",
                "ternary search",
                "two pointers"
            ]
        },
        {
            "contestId": 1254,
            "index": "A",
            "name": "Feeding Chicken",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1253,
            "index": "D",
            "name": "Harmonious Graph",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1250,
            "index": "M",
            "name": "SmartGarden",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "divide and conquer"
            ]
        },
        {
            "contestId": 1250,
            "index": "B",
            "name": "The Feast and the Bus",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1245,
            "index": "B",
            "name": "Restricted RPS",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1244,
            "index": "G",
            "name": "Running in Pairs",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1244,
            "index": "F",
            "name": "Chips",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1244,
            "index": "E",
            "name": "Minimizing Difference",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "sortings",
                "ternary search",
                "two pointers"
            ]
        },
        {
            "contestId": 1244,
            "index": "D",
            "name": "Paint the Tree",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "graphs",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1242,
            "index": "E",
            "name": "Planar Perimeter",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1242,
            "index": "A",
            "name": "Tile Painting",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1237,
            "index": "H",
            "name": "Balanced Reversals",
            "type": "PROGRAMMING",
            "points": 4000.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1237,
            "index": "C2",
            "name": "Balanced Removals (Harder)",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "divide and conquer",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 1237,
            "index": "C1",
            "name": "Balanced Removals (Easier)",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "geometry",
                "greedy"
            ]
        },
        {
            "contestId": 1236,
            "index": "C",
            "name": "Labs",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1231,
            "index": "E",
            "name": "Middle-Out",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1228,
            "index": "F",
            "name": "One Node is Gone",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1228,
            "index": "D",
            "name": "Complete Tripartite",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "hashing",
                "implementation"
            ]
        },
        {
            "contestId": 1227,
            "index": "G",
            "name": "Not Same",
            "type": "PROGRAMMING",
            "points": 3250.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1227,
            "index": "C",
            "name": "Messy",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1227,
            "index": "B",
            "name": "Box",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1225,
            "index": "G",
            "name": "To Make 1",
            "type": "PROGRAMMING",
            "points": 3750.0,
            "rating": 3100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 1225,
            "index": "F",
            "name": "Tree Factory",
            "type": "PROGRAMMING",
            "points": 3250.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1221,
            "index": "B",
            "name": "Knights",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1218,
            "index": "G",
            "name": "Alpha planetary system",
            "type": "PROGRAMMING",
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 1217,
            "index": "D",
            "name": "Coloring Edges",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1215,
            "index": "C",
            "name": "Swap Letters",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1214,
            "index": "H",
            "name": "Tiles Placement",
            "type": "PROGRAMMING",
            "points": 3500.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 1214,
            "index": "E",
            "name": "Petya and Construction Set",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1213,
            "index": "E",
            "name": "Two Small Strings",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1209,
            "index": "C",
            "name": "Paint the Digits",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1208,
            "index": "C",
            "name": "Magic Grid",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1207,
            "index": "B",
            "name": "Square Filling",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1205,
            "index": "F",
            "name": "Beauty of a Permutation",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3400,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1205,
            "index": "D",
            "name": "Almost All",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 1205,
            "index": "A",
            "name": "Almost Equal",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1202,
            "index": "D",
            "name": "Print a 1337-string...",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1198,
            "index": "C",
            "name": "Matching vs  Independent Set",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1196,
            "index": "F",
            "name": "K-th Path",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "shortest paths",
                "sortings"
            ]
        },
        {
            "contestId": 1196,
            "index": "E",
            "name": "Connected Component on a Chessboard",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1196,
            "index": "B",
            "name": "Odd Sum Segments",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1196,
            "index": "A",
            "name": "Three Piles of Candies",
            "type": "PROGRAMMING",
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1193,
            "index": "C",
            "name": "Scissors and Tape",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 1188,
            "index": "A2",
            "name": "Add on a Tree: Revolution",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1187,
            "index": "C",
            "name": "Vasya And Array",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1186,
            "index": "D",
            "name": "Vus the Cossack and Numbers",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1182,
            "index": "D",
            "name": "Complete Mirror",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "hashing",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1179,
            "index": "B",
            "name": "Tolik and His Uncle",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1178,
            "index": "E",
            "name": "Archaeology",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 1178,
            "index": "D",
            "name": "Prime Graph",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1174,
            "index": "F",
            "name": "Ehab and the Big Finale",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "graphs",
                "implementation",
                "interactive",
                "trees"
            ]
        },
        {
            "contestId": 1174,
            "index": "D",
            "name": "Ehab and the Expected XOR Problem",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1174,
            "index": "C",
            "name": "Ehab and a Special Coloring Problem",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        {
            "contestId": 1174,
            "index": "A",
            "name": "Ehab Fails to Be Thanos",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1173,
            "index": "B",
            "name": "Nauuo and Chess",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1172,
            "index": "D",
            "name": "Nauuo and Portals",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2900,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1170,
            "index": "H",
            "name": "Longest Saw",
            "type": "PROGRAMMING",
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1168,
            "index": "E",
            "name": "Xor Permutations",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1167,
            "index": "D",
            "name": "Bicolored RBS",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1166,
            "index": "E",
            "name": "The LCMs Must be Large",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1166,
            "index": "B",
            "name": "All the Vowels Please",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1163,
            "index": "E",
            "name": "Magical Permutation",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2400,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "data structures",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 1158,
            "index": "D",
            "name": "Winding polygonal line",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "geometry",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1158,
            "index": "C",
            "name": "Permutation recovery",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "graphs",
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1158,
            "index": "B",
            "name": "The minimal unique substring",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 1158,
            "index": "A",
            "name": "The Party and Sweets",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1500,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1157,
            "index": "G",
            "name": "Inverse of Rows and Columns",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1157,
            "index": "F",
            "name": "Maximum Balanced Circle",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 1157,
            "index": "D",
            "name": "N Problems During K Days",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1153,
            "index": "B",
            "name": "Serval and Toy Bricks",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1152,
            "index": "E",
            "name": "Neko and Flashback",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 1152,
            "index": "B",
            "name": "Neko Performs Cat Furrier Transform",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "math"
            ]
        },
        {
            "contestId": 1151,
            "index": "C",
            "name": "Problem for Nazar",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1151,
            "index": "B",
            "name": "Dima and a Bad XOR",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 1149,
            "index": "A",
            "name": "Prefix Sum Primes",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1148,
            "index": "G",
            "name": "Gold Experience",
            "type": "PROGRAMMING",
            "points": 4000.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math",
                "number theory",
                "probabilities"
            ]
        },
        {
            "contestId": 1148,
            "index": "F",
            "name": "Foo Fighters",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1148,
            "index": "E",
            "name": "Earth Wind and Fire",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 1148,
            "index": "C",
            "name": "Crazy Diamond",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1144,
            "index": "D",
            "name": "Equalize Them All",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1144,
            "index": "C",
            "name": "Two Shuffled Sequences",
            "type": "PROGRAMMING",
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1141,
            "index": "G",
            "name": "Privatization of Roads in Treeland",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1137,
            "index": "D",
            "name": "Cooperative Game",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "interactive",
                "number theory"
            ]
        },
        {
            "contestId": 1136,
            "index": "C",
            "name": "Nastya Is Transposing Matrices",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 1136,
            "index": "B",
            "name": "Nastya Is Playing Computer Games",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1133,
            "index": "F2",
            "name": "Spanning Tree with One Fixed Degree",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1131,
            "index": "F",
            "name": "Asya And Kittens",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dsu"
            ]
        },
        {
            "contestId": 1129,
            "index": "B",
            "name": "Wrong Answer",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1120,
            "index": "B",
            "name": "Once in a casino",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1119,
            "index": "G",
            "name": "Get Ready for the Battle",
            "type": "PROGRAMMING",
            "points": 3500.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1119,
            "index": "C",
            "name": "Ramesses and Corner Inversion",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1118,
            "index": "E",
            "name": "Yet Another Ball Problem",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1118,
            "index": "C",
            "name": "Palindromic Matrix",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1117,
            "index": "E",
            "name": "Decypher the String",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "bitmasks",
                "chinese remainder theorem",
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 1114,
            "index": "B",
            "name": "Yet Another Array Partitioning Task",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 1110,
            "index": "G",
            "name": "Tree-Tac-Toe ",
            "type": "PROGRAMMING",
            "points": 3500.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "games",
                "trees"
            ]
        },
        {
            "contestId": 1110,
            "index": "E",
            "name": "Magic Stones",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1110,
            "index": "C",
            "name": "Meaningless Operations",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1109,
            "index": "B",
            "name": "Sasha and One More Name",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 1108,
            "index": "D",
            "name": "Diverse Garland",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 1107,
            "index": "G",
            "name": "Vasya and Maximum Profit",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "dp",
                "dsu"
            ]
        },
        {
            "contestId": 1104,
            "index": "A",
            "name": "Splitting into digits",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1103,
            "index": "C",
            "name": "Johnny Solving",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 1103,
            "index": "B",
            "name": "Game with modulo",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1103,
            "index": "A",
            "name": "Grid game",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1100,
            "index": "D",
            "name": "Dasha and Chess",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "games",
                "interactive"
            ]
        },
        {
            "contestId": 1099,
            "index": "C",
            "name": "Postcard",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1099,
            "index": "B",
            "name": "Squares and Segments",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1098,
            "index": "C",
            "name": "Construct a tree",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1098,
            "index": "B",
            "name": "Nice table",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1098,
            "index": "A",
            "name": "Sum in the tree",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1097,
            "index": "E",
            "name": "Egor and an RPG game",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 3400,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1093,
            "index": "B",
            "name": "Letters Rearranging",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        {
            "contestId": 1092,
            "index": "E",
            "name": "Minimal Diameter Forest",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 1091,
            "index": "F",
            "name": "New Year and the Mallard Expedition",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1091,
            "index": "B",
            "name": "New Year and the Treasure Geolocation",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1090,
            "index": "F",
            "name": "How to Learn You Score",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 1090,
            "index": "D",
            "name": "Similar Arrays",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1090,
            "index": "C",
            "name": "New Year Presents",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 1089,
            "index": "M",
            "name": "Minegraphed",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1089,
            "index": "E",
            "name": "Easy Chess",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1088,
            "index": "D",
            "name": "Ehab and another another xor problem",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "implementation",
                "interactive"
            ]
        },
        {
            "contestId": 1088,
            "index": "C",
            "name": "Ehab and a 2-operation task",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1088,
            "index": "A",
            "name": "Ehab and another construction problem",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1085,
            "index": "D",
            "name": "Minimum Diameter Tree",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 1082,
            "index": "D",
            "name": "Maximum Diameter Graph",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 1081,
            "index": "F",
            "name": "Tricky Interactor",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "implementation",
                "interactive"
            ]
        },
        {
            "contestId": 1081,
            "index": "E",
            "name": "Missing Numbers",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 1081,
            "index": "B",
            "name": "Farewell Party",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1081,
            "index": "A",
            "name": "Definite Game",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1080,
            "index": "D",
            "name": "Olya and magical square",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1078,
            "index": "E",
            "name": "Negative Time Summation",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 3400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1070,
            "index": "M",
            "name": "Algoland and Berland",
            "type": "PROGRAMMING",
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "geometry"
            ]
        },
        {
            "contestId": 1070,
            "index": "L",
            "name": "Odd Federalization",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1068,
            "index": "C",
            "name": "Colored Rooks",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1067,
            "index": "C",
            "name": "Knights",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1065,
            "index": "B",
            "name": "Vasya and Isolated Vertices",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1063,
            "index": "E",
            "name": "Lasers and Mirrors",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1063,
            "index": "C",
            "name": "Dwarves, Hats and Extrasensory Abilities",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "geometry",
                "interactive"
            ]
        },
        {
            "contestId": 1063,
            "index": "A",
            "name": "Oh Those Palindromes",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1060,
            "index": "H",
            "name": "Sophisticated Device",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1059,
            "index": "C",
            "name": "Sequence Transformation",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1056,
            "index": "D",
            "name": "Decorate Apple Tree",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 1054,
            "index": "G",
            "name": "New Road Network",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1054,
            "index": "E",
            "name": "Chips Puzzle",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1054,
            "index": "C",
            "name": "Candies Distribution",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1053,
            "index": "E",
            "name": "Euler tour",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3500,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 1045,
            "index": "E",
            "name": "Ancient civilizations",
            "type": "PROGRAMMING",
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 1043,
            "index": "E",
            "name": "Train Hard, Win Easy",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 1043,
            "index": "C",
            "name": "Smallest Word",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 1042,
            "index": "C",
            "name": "Array Product",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1041,
            "index": "E",
            "name": "Tree Reconstruction",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 1039,
            "index": "A",
            "name": "Timetable",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1038,
            "index": "B",
            "name": "Non-Coprime Partition",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1037,
            "index": "A",
            "name": "Packets",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1034,
            "index": "B",
            "name": "Little C Loves 3 II",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "flows",
                "graph matchings"
            ]
        },
        {
            "contestId": 1033,
            "index": "E",
            "name": "Hidden Bipartite Graph",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "interactive"
            ]
        },
        {
            "contestId": 1032,
            "index": "C",
            "name": "Playing Piano",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 1031,
            "index": "E",
            "name": "Triple Flips",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1028,
            "index": "E",
            "name": "Restore Array",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 1028,
            "index": "B",
            "name": "Unnatural Conditions",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1025,
            "index": "G",
            "name": "Company Acquisitions",
            "type": "PROGRAMMING",
            "points": 3500.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 1025,
            "index": "E",
            "name": "Colored Cubes",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "implementation",
                "matrices"
            ]
        },
        {
            "contestId": 1025,
            "index": "C",
            "name": "Plasticine zebra",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1023,
            "index": "E",
            "name": "Down or Right",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "interactive",
                "matrices"
            ]
        },
        {
            "contestId": 1023,
            "index": "D",
            "name": "Array Restoration",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 1019,
            "index": "C",
            "name": "Sergey\u0027s problem",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1017,
            "index": "C",
            "name": "The Phone Number",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1016,
            "index": "D",
            "name": "Vasya And The Matrix",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "flows",
                "math"
            ]
        },
        {
            "contestId": 1015,
            "index": "D",
            "name": "Walking Between Houses",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 1012,
            "index": "D",
            "name": "AB-Strings",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 1012,
            "index": "B",
            "name": "Chemical table",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "matrices"
            ]
        },
        {
            "contestId": 1009,
            "index": "D",
            "name": "Relatively Prime Graph",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 1004,
            "index": "D",
            "name": "Sonya and Matrix",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1004,
            "index": "C",
            "name": "Sonya and Robots",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 1004,
            "index": "B",
            "name": "Sonya and Exhibition",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 1003,
            "index": "E",
            "name": "Tree Constructing",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 1003,
            "index": "B",
            "name": "Binary String Constructing",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 998,
            "index": "A",
            "name": "Balloons",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 995,
            "index": "A",
            "name": "Tesla",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 990,
            "index": "D",
            "name": "Graph And Its Complement",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 989,
            "index": "C",
            "name": "A Mist of Florescence",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 989,
            "index": "B",
            "name": "A Tide of Riverscape",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 985,
            "index": "D",
            "name": "Sand Fortress",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 982,
            "index": "A",
            "name": "Row",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 980,
            "index": "B",
            "name": "Marlin",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 976,
            "index": "D",
            "name": "Degree Set",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 963,
            "index": "B",
            "name": "Destruction of a Tree",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 962,
            "index": "E",
            "name": "Byteland, Berland and Disputed Cities",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 962,
            "index": "B",
            "name": "Students in Railway Carriage",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 960,
            "index": "C",
            "name": "Subsequence Counting",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 959,
            "index": "D",
            "name": "Mahmoud and Ehab and another array construction task",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 959,
            "index": "C",
            "name": "Mahmoud and Ehab and the wrong algorithm",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 952,
            "index": "G",
            "name": "Puzzling Language",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 949,
            "index": "B",
            "name": "A Leapfrog in the Array",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 940,
            "index": "C",
            "name": "Phone Numbers",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 938,
            "index": "C",
            "name": "Constructing Tests",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 936,
            "index": "C",
            "name": "Lock Puzzle",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 934,
            "index": "B",
            "name": "A Prosperous Lot",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 933,
            "index": "E",
            "name": "A Preponderant Reunion",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 932,
            "index": "C",
            "name": "Permutation Cycle",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 932,
            "index": "A",
            "name": "Palindromic Supersequence",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 931,
            "index": "B",
            "name": "World Cup",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 926,
            "index": "E",
            "name": "Merge Equal Elements",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 925,
            "index": "D",
            "name": "Aztec Catacombs",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 925,
            "index": "C",
            "name": "Big Secret",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 923,
            "index": "F",
            "name": "Public Service",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 923,
            "index": "D",
            "name": "Picking Strings",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 922,
            "index": "F",
            "name": "Divisibility",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 916,
            "index": "C",
            "name": "Jamie and Interesting Graph",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 912,
            "index": "B",
            "name": "New Year\u0027s Eve",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "number theory"
            ]
        },
        {
            "contestId": 911,
            "index": "F",
            "name": "Tree Destruction",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 911,
            "index": "E",
            "name": "Stack Sorting",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 911,
            "index": "C",
            "name": "Three Garlands",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 910,
            "index": "C",
            "name": "Minimum Sum",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 909,
            "index": "F",
            "name": "AND-permutations",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 909,
            "index": "B",
            "name": "Segments",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 906,
            "index": "B",
            "name": "Seating of Students",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 901,
            "index": "D",
            "name": "Weighting a Tree",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 901,
            "index": "B",
            "name": "GCD of Polynomials",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 901,
            "index": "A",
            "name": "Hashing Trees",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 899,
            "index": "D",
            "name": "Shovel Sale",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 899,
            "index": "C",
            "name": "Dividing the numbers",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 899,
            "index": "A",
            "name": "Splitting in Teams",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 898,
            "index": "E",
            "name": "Squares and not squares",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 896,
            "index": "B",
            "name": "Ithea Plays With Chtholly",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2000,
            "tags": [
                "binary search",
                "constructive algorithms",
                "games",
                "greedy",
                "interactive"
            ]
        },
        {
            "contestId": 894,
            "index": "C",
            "name": "Marco and GCD Sequence",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 894,
            "index": "B",
            "name": "Ralph And His Magic Field",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 891,
            "index": "B",
            "name": "Gluttony",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 888,
            "index": "G",
            "name": "Xor-MST",
            "type": "PROGRAMMING",
            "rating": 2300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 886,
            "index": "D",
            "name": "Restoration of string",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 883,
            "index": "K",
            "name": "Road Widening",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 883,
            "index": "J",
            "name": "Renovation",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 883,
            "index": "B",
            "name": "Berland Army",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 878,
            "index": "A",
            "name": "Short Program",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 877,
            "index": "C",
            "name": "Slava and tanks",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 873,
            "index": "D",
            "name": "Merge Sort",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "divide and conquer"
            ]
        },
        {
            "contestId": 868,
            "index": "C",
            "name": "Qualification Rounds",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1500,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 865,
            "index": "D",
            "name": "Buy Low Sell High",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 865,
            "index": "A",
            "name": "Save the problem!",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 862,
            "index": "C",
            "name": "Mahmoud and Ehab and the xor",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 858,
            "index": "F",
            "name": "Wizard\u0027s Tour",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 856,
            "index": "A",
            "name": "Set Theory",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 854,
            "index": "B",
            "name": "Maxim Buys an Apartment",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 854,
            "index": "A",
            "name": "Fraction",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 850,
            "index": "D",
            "name": "Tournament Construction",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 848,
            "index": "B",
            "name": "Rooter\u0027s Song",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "geometry",
                "implementation",
                "sortings",
                "two pointers"
            ]
        },
        {
            "contestId": 848,
            "index": "A",
            "name": "From Y to Y",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 847,
            "index": "L",
            "name": "Berland SU Computer Network",
            "type": "PROGRAMMING",
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "hashing",
                "trees"
            ]
        },
        {
            "contestId": 847,
            "index": "D",
            "name": "Dog Show",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 847,
            "index": "C",
            "name": "Sum of Nestings",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 843,
            "index": "C",
            "name": "Upgrading Tree",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 840,
            "index": "B",
            "name": "Leha and another game about graph",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "dp",
                "graphs"
            ]
        },
        {
            "contestId": 835,
            "index": "E",
            "name": "The penguin\u0027s game",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 831,
            "index": "C",
            "name": "Jury Marks",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 830,
            "index": "E",
            "name": "Perpetual Motion Machine",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "implementation",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 827,
            "index": "B",
            "name": "High Load",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 822,
            "index": "F",
            "name": "Madness",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 820,
            "index": "B",
            "name": "Mister B and Angle in Polygon",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "geometry",
                "math"
            ]
        },
        {
            "contestId": 819,
            "index": "E",
            "name": "Mister B and Flight to the Moon",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 815,
            "index": "E",
            "name": "Karen and Neighborhood",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 815,
            "index": "B",
            "name": "Karen and Test",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2200,
            "tags": [
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 814,
            "index": "B",
            "name": "An express train to reveries",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 814,
            "index": "A",
            "name": "An abandoned sentiment from past",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 811,
            "index": "D",
            "name": "Vladik and Favorite Game",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "interactive"
            ]
        },
        {
            "contestId": 808,
            "index": "C",
            "name": "Tea Party",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 805,
            "index": "B",
            "name": "3-palindrome",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 804,
            "index": "E",
            "name": "The same permutation ",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 804,
            "index": "C",
            "name": "Ice cream coloring",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy"
            ]
        },
        {
            "contestId": 804,
            "index": "A",
            "name": "Find Amir",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 803,
            "index": "C",
            "name": "Maximal GCD",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 803,
            "index": "B",
            "name": "Distances to Zero",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 803,
            "index": "A",
            "name": "Maximal Binary Matrix",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 802,
            "index": "H",
            "name": "Fake News (medium)",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 801,
            "index": "B",
            "name": "Valued Keys",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 798,
            "index": "E",
            "name": "Mike and code of a permutation",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "sortings"
            ]
        },
        {
            "contestId": 798,
            "index": "D",
            "name": "Mike and distribution",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 798,
            "index": "A",
            "name": "Mike and palindrome",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 796,
            "index": "D",
            "name": "Police Stations",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "shortest paths",
                "trees"
            ]
        },
        {
            "contestId": 796,
            "index": "C",
            "name": "Bank Hacking",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 793,
            "index": "E",
            "name": "Problem of offices",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "trees"
            ]
        },
        {
            "contestId": 788,
            "index": "D",
            "name": "Finding lines",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "interactive"
            ]
        },
        {
            "contestId": 788,
            "index": "B",
            "name": "Weird journey",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 780,
            "index": "E",
            "name": "Underground Lab",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 779,
            "index": "C",
            "name": "Dishonest Sellers",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 779,
            "index": "A",
            "name": "Pupils Redistribution",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 778,
            "index": "D",
            "name": "Parquet Re-laying",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 777,
            "index": "A",
            "name": "Shell Game",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 776,
            "index": "F",
            "name": "Sherlock\u0027s bet to Moriarty",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "data structures",
                "divide and conquer",
                "geometry",
                "graphs",
                "implementation",
                "trees"
            ]
        },
        {
            "contestId": 776,
            "index": "B",
            "name": "Sherlock and his girlfriend",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        {
            "contestId": 774,
            "index": "H",
            "name": "Repairing Of String",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 774,
            "index": "D",
            "name": "Lie or Truth",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "*special",
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 774,
            "index": "C",
            "name": "Maximum Number",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "*special",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 773,
            "index": "C",
            "name": "Prairie Partition",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2200,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 772,
            "index": "C",
            "name": "Vulnerable Kerbals",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dp",
                "graphs",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 771,
            "index": "B",
            "name": "Bear and Different Names",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 768,
            "index": "B",
            "name": "Code For 1",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "divide and conquer"
            ]
        },
        {
            "contestId": 768,
            "index": "A",
            "name": "Oath of the Night\u0027s Watch",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 766,
            "index": "E",
            "name": "Mahmoud and a xor trip",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2100,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "data structures",
                "dfs and similar",
                "dp",
                "math",
                "trees"
            ]
        },
        {
            "contestId": 766,
            "index": "B",
            "name": "Mahmoud and a Triangle",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "geometry",
                "greedy",
                "math",
                "number theory",
                "sortings"
            ]
        },
        {
            "contestId": 766,
            "index": "A",
            "name": "Mahmoud and Longest Uncommon Subsequence",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 765,
            "index": "D",
            "name": "Artsem and Saunders",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dsu",
                "math"
            ]
        },
        {
            "contestId": 764,
            "index": "B",
            "name": "Timofey and cubes",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 763,
            "index": "B",
            "name": "Timofey and rectangles",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 761,
            "index": "E",
            "name": "Dasha and Puzzle",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 761,
            "index": "D",
            "name": "Dasha and Very Difficult Problem",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1700,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 761,
            "index": "A",
            "name": "Dasha and Stairs",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 758,
            "index": "D",
            "name": "Ability To Convert",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 758,
            "index": "C",
            "name": "Unfair Poll",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "binary search",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 756,
            "index": "A",
            "name": "Pavel and barbecue",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar"
            ]
        },
        {
            "contestId": 755,
            "index": "E",
            "name": "PolandBall and White-Red graph",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 754,
            "index": "C",
            "name": "Vladik and chat",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dp",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 754,
            "index": "A",
            "name": "Lesha and array splitting",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 753,
            "index": "C",
            "name": "Interactive Bulls and Cows (Hard)",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 753,
            "index": "B",
            "name": "Interactive Bulls and Cows (Easy)",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 750,
            "index": "F",
            "name": "New Year and Finding Roots",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "implementation",
                "interactive",
                "trees"
            ]
        },
        {
            "contestId": 749,
            "index": "B",
            "name": "Parallelogram is Back",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 748,
            "index": "F",
            "name": "Santa Clauses and a Soccer Championship",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 748,
            "index": "D",
            "name": "Santa Claus and a Palindrome",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 748,
            "index": "C",
            "name": "Santa Claus and Robot",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 746,
            "index": "G",
            "name": "New Roads",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 746,
            "index": "D",
            "name": "Green and Black Tea",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 746,
            "index": "C",
            "name": "Tram",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 743,
            "index": "C",
            "name": "Vladik and fractions",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 743,
            "index": "B",
            "name": "Chloe and the sequence ",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "binary search",
                "bitmasks",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 743,
            "index": "A",
            "name": "Vladik and flights",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 741,
            "index": "C",
            "name": "Arpa’s overnight party and Mehrdad’s silent entering",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 740,
            "index": "B",
            "name": "Alyona and flowers",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 739,
            "index": "A",
            "name": "Alyona and mex",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 737,
            "index": "F",
            "name": "Dirty plates",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3300,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 736,
            "index": "E",
            "name": "Chess Championship",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "flows",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 735,
            "index": "C",
            "name": "Tennis Championship",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1600,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 734,
            "index": "F",
            "name": "Anton and School",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2500,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 733,
            "index": "E",
            "name": "Sleep in Class",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "math",
                "two pointers"
            ]
        },
        {
            "contestId": 733,
            "index": "C",
            "name": "Epidemic in Monstropolis",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "two pointers"
            ]
        },
        {
            "contestId": 732,
            "index": "C",
            "name": "Sanatorium",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1200,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 732,
            "index": "A",
            "name": "Buy a Shovel",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 731,
            "index": "B",
            "name": "Coupons and Discounts",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 730,
            "index": "H",
            "name": "Delete Them",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 730,
            "index": "B",
            "name": "Minimum and Maximum",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 729,
            "index": "E",
            "name": "Subordinates",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 729,
            "index": "D",
            "name": "Sea Battle",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 727,
            "index": "D",
            "name": "T-shirts Distribution",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "flows",
                "greedy"
            ]
        },
        {
            "contestId": 727,
            "index": "C",
            "name": "Guess the Array",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 725,
            "index": "C",
            "name": "Hidden Word",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 723,
            "index": "E",
            "name": "One-Way Reform",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "flows",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 721,
            "index": "D",
            "name": "Maxim and Array",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 720,
            "index": "C",
            "name": "Homework",
            "type": "PROGRAMMING",
            "rating": 3100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 715,
            "index": "D",
            "name": "Create a Maze",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 715,
            "index": "B",
            "name": "Complete The Graph",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2300,
            "tags": [
                "binary search",
                "constructive algorithms",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 715,
            "index": "A",
            "name": "Plus and Square Root",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 713,
            "index": "B",
            "name": "Searching Rectangles",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2200,
            "tags": [
                "binary search",
                "constructive algorithms",
                "interactive"
            ]
        },
        {
            "contestId": 711,
            "index": "B",
            "name": "Chris and Magic Square",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 710,
            "index": "C",
            "name": "Magic Odd Square",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 708,
            "index": "B",
            "name": "Recover the String",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 708,
            "index": "A",
            "name": "Letters Cyclic Shift",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 698,
            "index": "B",
            "name": "Fix a Tree",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dsu",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 690,
            "index": "F2",
            "name": "Tree of Life (medium)",
            "type": "PROGRAMMING",
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "hashing",
                "trees"
            ]
        },
        {
            "contestId": 689,
            "index": "A",
            "name": "Mike and Cellphone",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 688,
            "index": "B",
            "name": "Lovely Palindromes",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 686,
            "index": "B",
            "name": "Little Robber Girl\u0027s Zoo",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 686,
            "index": "A",
            "name": "Free Ice Cream",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 682,
            "index": "A",
            "name": "Alyona and Numbers",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 681,
            "index": "D",
            "name": "Gifts by the List",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 681,
            "index": "C",
            "name": "Heap Operations",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 680,
            "index": "B",
            "name": "Bear and Finding Criminals",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 680,
            "index": "A",
            "name": "Bear and Five Cards",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 679,
            "index": "A",
            "name": "Bear and Prime 100",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "interactive",
                "math"
            ]
        },
        {
            "contestId": 676,
            "index": "A",
            "name": "Nicholas and Permutation",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 675,
            "index": "C",
            "name": "Money Transfers",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 675,
            "index": "B",
            "name": "Restoring Painting",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 672,
            "index": "B",
            "name": "Different is Good",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 670,
            "index": "F",
            "name": "Restore a Number",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 670,
            "index": "A",
            "name": "Holidays",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 667,
            "index": "B",
            "name": "Coat of Anticubism",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 665,
            "index": "D",
            "name": "Simple Subset",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 663,
            "index": "A",
            "name": "Rebus",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "expression parsing",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 662,
            "index": "D",
            "name": "International Olympiad",
            "type": "PROGRAMMING",
            "points": 250.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 659,
            "index": "B",
            "name": "Qualifying Contest",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 652,
            "index": "F",
            "name": "Ants on a Circle",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 645,
            "index": "A",
            "name": "Amity Assessment",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 644,
            "index": "B",
            "name": "Processing Queries",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "*special",
                "constructive algorithms",
                "data structures",
                "two pointers"
            ]
        },
        {
            "contestId": 644,
            "index": "A",
            "name": "Parliament of Berland",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 643,
            "index": "B",
            "name": "Bear and Two Paths",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 641,
            "index": "C",
            "name": "Little Artem and Dance",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 639,
            "index": "B",
            "name": "Bear and Forgotten Tree 3",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 638,
            "index": "A",
            "name": "Home Numbers",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "*special",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 637,
            "index": "C",
            "name": "Promocodes with Mistakes",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "*special",
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 637,
            "index": "B",
            "name": "Chat Order",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "*special",
                "binary search",
                "constructive algorithms",
                "data structures",
                "sortings"
            ]
        },
        {
            "contestId": 637,
            "index": "A",
            "name": "Voting for Photos",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "*special",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 634,
            "index": "A",
            "name": "Island Puzzle",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 633,
            "index": "E",
            "name": "Startup Funding",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "probabilities",
                "two pointers"
            ]
        },
        {
            "contestId": 633,
            "index": "B",
            "name": "A Trivial Problem",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 632,
            "index": "B",
            "name": "Alice, Bob, Two Teams",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 631,
            "index": "B",
            "name": "Print Check",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 629,
            "index": "A",
            "name": "Far Relative’s Birthday Cake",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "brute force",
                "combinatorics",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 626,
            "index": "B",
            "name": "Cards",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 625,
            "index": "D",
            "name": "Finals in arithmetic",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 625,
            "index": "C",
            "name": "K-special Tables",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 625,
            "index": "B",
            "name": "War of the Corporations",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 623,
            "index": "A",
            "name": "Graph and String",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 622,
            "index": "D",
            "name": "Optimal Number Permutation",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 621,
            "index": "D",
            "name": "Rat Kwesh and Cheese",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 618,
            "index": "F",
            "name": "Double Knapsack",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "two pointers"
            ]
        },
        {
            "contestId": 618,
            "index": "B",
            "name": "Guess the Permutation",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 617,
            "index": "D",
            "name": "Polyline",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 613,
            "index": "C",
            "name": "Necklace",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 612,
            "index": "E",
            "name": "Square Root of Permutation",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 611,
            "index": "H",
            "name": "New Year  and Forgotten Tree",
            "type": "PROGRAMMING",
            "points": 3500.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "flows",
                "graphs"
            ]
        },
        {
            "contestId": 610,
            "index": "D",
            "name": "Vika and Segments",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "geometry",
                "two pointers"
            ]
        },
        {
            "contestId": 610,
            "index": "C",
            "name": "Harmony Analysis",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 610,
            "index": "B",
            "name": "Vika and Squares",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 609,
            "index": "B",
            "name": "Книга - лучший подарок",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 605,
            "index": "B",
            "name": "Lazy Student",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs"
            ]
        },
        {
            "contestId": 605,
            "index": "A",
            "name": "Sorting Railway Cars",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 600,
            "index": "C",
            "name": "Make Palindrome",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 595,
            "index": "A",
            "name": "Vitaly and Night",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 593,
            "index": "C",
            "name": "Beautiful Function",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 584,
            "index": "E",
            "name": "Anton and Ira",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 584,
            "index": "C",
            "name": "Marina and Vasya",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "strings"
            ]
        },
        {
            "contestId": 582,
            "index": "B",
            "name": "Once Again...",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dp",
                "matrices"
            ]
        },
        {
            "contestId": 582,
            "index": "A",
            "name": "GCD Table",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "number theory"
            ]
        },
        {
            "contestId": 581,
            "index": "D",
            "name": "Three Logos",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "geometry",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 578,
            "index": "E",
            "name": "Walking!",
            "type": "PROGRAMMING",
            "points": 2750.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 576,
            "index": "C",
            "name": "Points on Plane",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "geometry",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 576,
            "index": "B",
            "name": "Invariance of Tree",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 575,
            "index": "D",
            "name": "Tablecity",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 573,
            "index": "C",
            "name": "Bear and Drawing",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 571,
            "index": "C",
            "name": "CNF 2",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 570,
            "index": "D",
            "name": "Tree Requests",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2200,
            "tags": [
                "binary search",
                "bitmasks",
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 570,
            "index": "C",
            "name": "Replacement",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 570,
            "index": "B",
            "name": "Simple Game",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "games",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 566,
            "index": "E",
            "name": "Restoring Map",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3200,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "trees"
            ]
        },
        {
            "contestId": 566,
            "index": "B",
            "name": "Replicating Processes",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 560,
            "index": "B",
            "name": "Gerald is into Art",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 557,
            "index": "B",
            "name": "Pasha and Tea",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 553,
            "index": "B",
            "name": "Kyoya and Permutation",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1900,
            "tags": [
                "binary search",
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 551,
            "index": "B",
            "name": "ZgukistringZ",
            "type": "PROGRAMMING",
            "points": 1250.0,
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "strings"
            ]
        },
        {
            "contestId": 550,
            "index": "E",
            "name": "Brackets in Implications",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 550,
            "index": "D",
            "name": "Regular Bridge",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 549,
            "index": "G",
            "name": "Happy Line",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 549,
            "index": "B",
            "name": "Looksery Party",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 547,
            "index": "D",
            "name": "Mike and Fish",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 546,
            "index": "D",
            "name": "Soldier and Number Game",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dp",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 544,
            "index": "B",
            "name": "Sea and Islands",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 543,
            "index": "E",
            "name": "Listening to Music",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3200,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 543,
            "index": "B",
            "name": "Destroying Roads",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 542,
            "index": "C",
            "name": "Idempotent functions",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 538,
            "index": "G",
            "name": "Berserk Robot ",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 538,
            "index": "D",
            "name": "Weird Chess",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 538,
            "index": "B",
            "name": "Quasi Binary",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 534,
            "index": "E",
            "name": "Berland Local Positioning System",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "hashing",
                "implementation"
            ]
        },
        {
            "contestId": 534,
            "index": "D",
            "name": "Handshakes",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy"
            ]
        },
        {
            "contestId": 534,
            "index": "A",
            "name": "Exam",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 533,
            "index": "E",
            "name": "Correcting Mistakes",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy",
                "hashing",
                "strings",
                "two pointers"
            ]
        },
        {
            "contestId": 525,
            "index": "D",
            "name": "Arthur and Walls",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "data structures",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 525,
            "index": "B",
            "name": "Pasha and String",
            "type": "PROGRAMMING",
            "points": 750.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "strings"
            ]
        },
        {
            "contestId": 518,
            "index": "C",
            "name": "Anya and Smartphone",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 518,
            "index": "A",
            "name": "Vitaly and Strings",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 515,
            "index": "D",
            "name": "Drazil and Tiles",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 513,
            "index": "D2",
            "name": "Constrained Tree",
            "type": "PROGRAMMING",
            "points": 8.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 513,
            "index": "A",
            "name": "Game",
            "type": "PROGRAMMING",
            "points": 3.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 512,
            "index": "E",
            "name": "Fox And Polygon",
            "type": "PROGRAMMING",
            "points": 2250.0,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "divide and conquer"
            ]
        },
        {
            "contestId": 509,
            "index": "D",
            "name": "Restoring Numbers",
            "type": "PROGRAMMING",
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 509,
            "index": "B",
            "name": "Painting Pebbles",
            "type": "PROGRAMMING",
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 508,
            "index": "C",
            "name": "Anya and Ghosts",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 501,
            "index": "C",
            "name": "Misha and Forest",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "data structures",
                "greedy",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 500,
            "index": "C",
            "name": "New Year Book Reading",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 496,
            "index": "C",
            "name": "Removing Columns",
            "type": "PROGRAMMING",
            "points": 1750.0,
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 496,
            "index": "B",
            "name": "Secret Combination",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 493,
            "index": "D",
            "name": "Vasya and Chess",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "games",
                "math"
            ]
        },
        {
            "contestId": 491,
            "index": "A",
            "name": "Up the hill",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 488,
            "index": "B",
            "name": "Candy Boxes",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 487,
            "index": "C",
            "name": "Prefix Product Sequence",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 484,
            "index": "E",
            "name": "Sign on Fence",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2500,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 484,
            "index": "A",
            "name": "Bits",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1700,
            "tags": [
                "bitmasks",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 482,
            "index": "B",
            "name": "Interesting Array",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "data structures",
                "trees"
            ]
        },
        {
            "contestId": 482,
            "index": "A",
            "name": "Diverse Permutation",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 479,
            "index": "B",
            "name": "Towers",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 478,
            "index": "B",
            "name": "Random Teams",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 476,
            "index": "D",
            "name": "Dreamoon and Sets",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 475,
            "index": "C",
            "name": "Kamal-ol-molk\u0027s Painting",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 472,
            "index": "F",
            "name": "Design Tutorial: Change the Goal",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 472,
            "index": "E",
            "name": "Design Tutorial: Learn from a Game",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 468,
            "index": "C",
            "name": "Hack it!",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2500,
            "tags": [
                "binary search",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 468,
            "index": "A",
            "name": "24 Game",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 467,
            "index": "B",
            "name": "Fedor and New Game",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "bitmasks",
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 460,
            "index": "D",
            "name": "Little Victor and Set",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2300,
            "tags": [
                "brute force",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 459,
            "index": "C",
            "name": "Pashmak and Buses",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 457,
            "index": "E",
            "name": "Flow Optimality",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "flows",
                "math"
            ]
        },
        {
            "contestId": 453,
            "index": "C",
            "name": "Little Pony and Summer Sun Celebration",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 452,
            "index": "B",
            "name": "4-point polyline",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "brute force",
                "constructive algorithms",
                "geometry",
                "trees"
            ]
        },
        {
            "contestId": 449,
            "index": "C",
            "name": "Jzzhu and Apples",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        {
            "contestId": 443,
            "index": "A",
            "name": "Anton and Letters",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 441,
            "index": "D",
            "name": "Valera and Swaps",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "implementation",
                "math",
                "string suffix structures"
            ]
        },
        {
            "contestId": 441,
            "index": "C",
            "name": "Valera and Tubes ",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "implementation"
            ]
        },
        {
            "contestId": 439,
            "index": "C",
            "name": "Devu and Partitioning of the Array",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "number theory"
            ]
        },
        {
            "contestId": 432,
            "index": "E",
            "name": "Square Tiling",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 430,
            "index": "A",
            "name": "Points and Segments (easy)",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 429,
            "index": "C",
            "name": "Guess the Tree",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2300,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 424,
            "index": "D",
            "name": "Biathlon Track",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "binary search",
                "brute force",
                "constructive algorithms",
                "data structures",
                "dp"
            ]
        },
        {
            "contestId": 421,
            "index": "A",
            "name": "Pasha and Hamsters",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 417,
            "index": "E",
            "name": "Square Table",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "math",
                "probabilities"
            ]
        },
        {
            "contestId": 417,
            "index": "C",
            "name": "Football",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 414,
            "index": "A",
            "name": "Mashmokh and Numbers",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "number theory"
            ]
        },
        {
            "contestId": 409,
            "index": "H",
            "name": "A + B Strikes Back",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "*special",
                "brute force",
                "constructive algorithms",
                "dsu",
                "implementation"
            ]
        },
        {
            "contestId": 402,
            "index": "C",
            "name": "Searching for Graph",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "brute force",
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 401,
            "index": "C",
            "name": "Team",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 398,
            "index": "C",
            "name": "Tree and Array",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 398,
            "index": "A",
            "name": "Cards",
            "type": "PROGRAMMING",
            "points": 500.0,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 397,
            "index": "B",
            "name": "On Corruption and Numbers",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 394,
            "index": "C",
            "name": "Dominoes",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 390,
            "index": "D",
            "name": "Inna and Sweet Matrix",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 388,
            "index": "B",
            "name": "Fox and Minimal path",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1900,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "graphs",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 379,
            "index": "B",
            "name": "New Year Present",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 370,
            "index": "D",
            "name": "Broken Monitor",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 370,
            "index": "C",
            "name": "Mittens",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 369,
            "index": "B",
            "name": "Valera and Contest",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 361,
            "index": "B",
            "name": "Levko and Permutation",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 361,
            "index": "A",
            "name": "Levko and Table",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 359,
            "index": "E",
            "name": "Neatness",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dfs and similar"
            ]
        },
        {
            "contestId": 359,
            "index": "B",
            "name": "Permutation",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 359,
            "index": "A",
            "name": "Table",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 358,
            "index": "C",
            "name": "Dima and Containers",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 357,
            "index": "B",
            "name": "Flag Day",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 356,
            "index": "D",
            "name": "Bags and Coins",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2700,
            "tags": [
                "bitmasks",
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 356,
            "index": "C",
            "name": "Compartments",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2100,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 355,
            "index": "A",
            "name": "Vasya and Digital Root",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 354,
            "index": "E",
            "name": "Lucky Number Representation",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp"
            ]
        },
        {
            "contestId": 353,
            "index": "D",
            "name": "Queue",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 353,
            "index": "B",
            "name": "Two Heaps",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "implementation",
                "math",
                "sortings"
            ]
        },
        {
            "contestId": 350,
            "index": "E",
            "name": "Wrong Floyd",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 347,
            "index": "A",
            "name": "Difference Row",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 341,
            "index": "E",
            "name": "Candies Game",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 339,
            "index": "E",
            "name": "Three Swaps",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "greedy"
            ]
        },
        {
            "contestId": 339,
            "index": "C",
            "name": "Xenia and Weights",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "dp",
                "graphs",
                "greedy",
                "shortest paths"
            ]
        },
        {
            "contestId": 335,
            "index": "B",
            "name": "Palindrome",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 335,
            "index": "A",
            "name": "Banana",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1400,
            "tags": [
                "binary search",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 333,
            "index": "C",
            "name": "Lucky Tickets",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2700,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 331,
            "index": "E2",
            "name": "Deja Vu",
            "type": "PROGRAMMING",
            "points": 50.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "dp"
            ]
        },
        {
            "contestId": 331,
            "index": "E1",
            "name": "Deja Vu",
            "type": "PROGRAMMING",
            "points": 50.0,
            "rating": 2900,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 330,
            "index": "B",
            "name": "Road Construction",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 329,
            "index": "D",
            "name": "The Evil Temple and the Moving Rocks",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 329,
            "index": "C",
            "name": "Graph Reconstruction",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 329,
            "index": "A",
            "name": "Purification",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 327,
            "index": "E",
            "name": "Axis Walking",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2300,
            "tags": [
                "bitmasks",
                "combinatorics",
                "constructive algorithms",
                "dp",
                "meet-in-the-middle"
            ]
        },
        {
            "contestId": 327,
            "index": "D",
            "name": "Block Tower",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs"
            ]
        },
        {
            "contestId": 323,
            "index": "B",
            "name": "Tournament-graph",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 323,
            "index": "A",
            "name": "Black-and-White Cube",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "combinatorics",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 321,
            "index": "C",
            "name": "Ciel the Commander",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "divide and conquer",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 317,
            "index": "E",
            "name": "Princess and Her Shadow",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 3100,
            "tags": [
                "constructive algorithms",
                "shortest paths"
            ]
        },
        {
            "contestId": 317,
            "index": "C",
            "name": "Balance",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 316,
            "index": "F3",
            "name": "Suns and Rays",
            "type": "PROGRAMMING",
            "points": 30.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "implementation"
            ]
        },
        {
            "contestId": 313,
            "index": "E",
            "name": "Ilya and Two Numbers",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dsu",
                "greedy"
            ]
        },
        {
            "contestId": 313,
            "index": "C",
            "name": "Ilya and Matrix",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 311,
            "index": "A",
            "name": "The Closest Pair",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 306,
            "index": "D",
            "name": "Polygon",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 305,
            "index": "A",
            "name": "Strange Addition",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 303,
            "index": "A",
            "name": "Lucky Permutation Triple",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 301,
            "index": "C",
            "name": "Yaroslav and Algorithm",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 301,
            "index": "A",
            "name": "Yaroslav and Sequence",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 300,
            "index": "A",
            "name": "Array",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 297,
            "index": "D",
            "name": "Color the Carpet",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 297,
            "index": "C",
            "name": "Splitting the Uniqueness",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 297,
            "index": "B",
            "name": "Fish Weight",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 297,
            "index": "A",
            "name": "Parity Game",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 290,
            "index": "E",
            "name": "HQ",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 286,
            "index": "E",
            "name": "Ladies\u0027 Shop",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms",
                "fft",
                "math"
            ]
        },
        {
            "contestId": 286,
            "index": "A",
            "name": "Lucky Permutation",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 283,
            "index": "A",
            "name": "Cows and Sequence",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 282,
            "index": "C",
            "name": "XOR and OR",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 277,
            "index": "B",
            "name": "Set of Points",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 275,
            "index": "B",
            "name": "Convex Shape",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 272,
            "index": "E",
            "name": "Dima and Horses",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2200,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "graphs"
            ]
        },
        {
            "contestId": 271,
            "index": "E",
            "name": "Three Horses",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 271,
            "index": "C",
            "name": "Secret",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 269,
            "index": "C",
            "name": "Flawed Flow",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "flows",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 268,
            "index": "C",
            "name": "Beautiful Sets of Points",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 266,
            "index": "C",
            "name": "Below the Diagonal",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 266,
            "index": "B",
            "name": "Queue at the School",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "graph matchings",
                "implementation",
                "shortest paths"
            ]
        },
        {
            "contestId": 264,
            "index": "A",
            "name": "Escape from Stones",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "data structures",
                "implementation",
                "two pointers"
            ]
        },
        {
            "contestId": 261,
            "index": "C",
            "name": "Maxim and Matrix",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 260,
            "index": "D",
            "name": "Black and White Tree",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy",
                "trees"
            ]
        },
        {
            "contestId": 260,
            "index": "C",
            "name": "Balls and Boxes",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 254,
            "index": "A",
            "name": "Cards with Numbers",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 246,
            "index": "C",
            "name": "Beauty Pageant",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 246,
            "index": "A",
            "name": "Buggy Sorting",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 245,
            "index": "D",
            "name": "Restoring Table",
            "type": "PROGRAMMING",
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 241,
            "index": "G",
            "name": "Challenging Balloons",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 238,
            "index": "B",
            "name": "Boring Partition",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 238,
            "index": "A",
            "name": "Not Wool Sequences",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 234,
            "index": "H",
            "name": "Merging Two Decks",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 234,
            "index": "G",
            "name": "Practice",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "implementation"
            ]
        },
        {
            "contestId": 232,
            "index": "C",
            "name": "Doe Graphs",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "dp",
                "graphs",
                "shortest paths"
            ]
        },
        {
            "contestId": 232,
            "index": "A",
            "name": "Cycles",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1600,
            "tags": [
                "binary search",
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 231,
            "index": "B",
            "name": "Magic, Wizardry and Wonders",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1500,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 226,
            "index": "D",
            "name": "The table",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 225,
            "index": "A",
            "name": "Dice Tower",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 220,
            "index": "B",
            "name": "Little Elephant and Array",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "data structures"
            ]
        },
        {
            "contestId": 218,
            "index": "A",
            "name": "Mountain Scenery",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 214,
            "index": "B",
            "name": "Hometask",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "brute force",
                "constructive algorithms",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 213,
            "index": "D",
            "name": "Stars",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "geometry"
            ]
        },
        {
            "contestId": 209,
            "index": "C",
            "name": "Trails and Glades",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 209,
            "index": "B",
            "name": "Pixels",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 201,
            "index": "A",
            "name": "Clear Symmetry",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "dp",
                "math"
            ]
        },
        {
            "contestId": 199,
            "index": "A",
            "name": "Hexadecimal\u0027s theorem",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 900,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation",
                "number theory"
            ]
        },
        {
            "contestId": 198,
            "index": "D",
            "name": "Cube Snake",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2700,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 197,
            "index": "A",
            "name": "Plate Game",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "games",
                "math"
            ]
        },
        {
            "contestId": 196,
            "index": "C",
            "name": "Paint Tree",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "divide and conquer",
                "geometry",
                "sortings",
                "trees"
            ]
        },
        {
            "contestId": 193,
            "index": "C",
            "name": "Hamming Distance",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms",
                "greedy",
                "math",
                "matrices"
            ]
        },
        {
            "contestId": 193,
            "index": "A",
            "name": "Cutting Figure",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "graphs",
                "trees"
            ]
        },
        {
            "contestId": 183,
            "index": "A",
            "name": "Headquarters",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 180,
            "index": "F",
            "name": "Mathematical Analysis Rocks!",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 176,
            "index": "C",
            "name": "Playing with Superglue",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 173,
            "index": "D",
            "name": "Deputies",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 171,
            "index": "A",
            "name": "Mysterious numbers - 1",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "*special",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 161,
            "index": "B",
            "name": "Discounts",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 156,
            "index": "B",
            "name": "Suspects",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "data structures",
                "implementation"
            ]
        },
        {
            "contestId": 148,
            "index": "C",
            "name": "Terse princess",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 148,
            "index": "A",
            "name": "Insomnia cure",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 800,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 145,
            "index": "B",
            "name": "Lucky Number 2",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 142,
            "index": "B",
            "name": "Help General",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 141,
            "index": "E",
            "name": "Clearing Up",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "dp",
                "dsu",
                "graphs"
            ]
        },
        {
            "contestId": 141,
            "index": "C",
            "name": "Queue",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1800,
            "tags": [
                "constructive algorithms",
                "greedy",
                "sortings"
            ]
        },
        {
            "contestId": 135,
            "index": "C",
            "name": "Zero-One",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "games",
                "greedy"
            ]
        },
        {
            "contestId": 134,
            "index": "C",
            "name": "Swaps",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 132,
            "index": "D",
            "name": "Constants in the language of Shakespeare",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "dp",
                "greedy"
            ]
        },
        {
            "contestId": 128,
            "index": "D",
            "name": "Numbers",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 128,
            "index": "B",
            "name": "String",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2100,
            "tags": [
                "brute force",
                "constructive algorithms",
                "hashing",
                "implementation",
                "string suffix structures",
                "strings"
            ]
        },
        {
            "contestId": 126,
            "index": "C",
            "name": "E-reader Display",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 125,
            "index": "D",
            "name": "Two progressions",
            "type": "PROGRAMMING",
            "points": 3000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 125,
            "index": "C",
            "name": "Hobbits\u0027 Party",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 119,
            "index": "B",
            "name": "Before Exam",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "implementation",
                "sortings"
            ]
        },
        {
            "contestId": 118,
            "index": "B",
            "name": "Present from Lena",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1000,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 110,
            "index": "B",
            "name": "Lucky String",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1100,
            "tags": [
                "constructive algorithms",
                "strings"
            ]
        },
        {
            "contestId": 109,
            "index": "D",
            "name": "Lucky Sorting",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 103,
            "index": "C",
            "name": "Russian Roulette",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 98,
            "index": "D",
            "name": "Help Monks",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2500,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 97,
            "index": "B",
            "name": "Superset",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "divide and conquer"
            ]
        },
        {
            "contestId": 91,
            "index": "D",
            "name": "Grocer\u0027s Problem",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 86,
            "index": "B",
            "name": "Tetris revisited",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 2200,
            "tags": [
                "constructive algorithms",
                "graph matchings",
                "greedy",
                "math"
            ]
        },
        {
            "contestId": 85,
            "index": "A",
            "name": "Domino",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 82,
            "index": "B",
            "name": "Sets",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "hashing",
                "implementation"
            ]
        },
        {
            "contestId": 81,
            "index": "D",
            "name": "Polycarp\u0027s Picture Gallery",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2100,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 78,
            "index": "B",
            "name": "Easter Eggs",
            "type": "PROGRAMMING",
            "points": 1000.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 74,
            "index": "E",
            "name": "Shift It!",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 66,
            "index": "D",
            "name": "Petya and His Friends",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math",
                "number theory"
            ]
        },
        {
            "contestId": 63,
            "index": "D",
            "name": "Dividing Island",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 59,
            "index": "D",
            "name": "Team Arrangement",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 53,
            "index": "C",
            "name": "Little Frog",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1200,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 49,
            "index": "C",
            "name": "Disposition",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1700,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 48,
            "index": "H",
            "name": "Black and White",
            "type": "PROGRAMMING",
            "rating": 2800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 45,
            "index": "J",
            "name": "Planting Trees",
            "type": "PROGRAMMING",
            "rating": 1800,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 45,
            "index": "E",
            "name": "Director",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 44,
            "index": "J",
            "name": "Triminoes",
            "type": "PROGRAMMING",
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 43,
            "index": "D",
            "name": "Journey",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "brute force",
                "constructive algorithms",
                "implementation"
            ]
        },
        {
            "contestId": 42,
            "index": "D",
            "name": "Strange town",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2300,
            "tags": [
                "constructive algorithms",
                "math"
            ]
        },
        {
            "contestId": 42,
            "index": "C",
            "name": "Safe cracking",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2200,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 41,
            "index": "E",
            "name": "3-cycles",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "graphs",
                "greedy"
            ]
        },
        {
            "contestId": 40,
            "index": "A",
            "name": "Find Color",
            "type": "PROGRAMMING",
            "points": 500.0,
            "rating": 1300,
            "tags": [
                "constructive algorithms",
                "geometry",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 36,
            "index": "E",
            "name": "Two Paths",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2600,
            "tags": [
                "constructive algorithms",
                "dsu",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 30,
            "index": "E",
            "name": "Tricky and Clever Password",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2800,
            "tags": [
                "binary search",
                "constructive algorithms",
                "data structures",
                "greedy",
                "hashing",
                "strings"
            ]
        },
        {
            "contestId": 29,
            "index": "D",
            "name": "Ant on the Tree",
            "type": "PROGRAMMING",
            "points": 2000.0,
            "rating": 2000,
            "tags": [
                "constructive algorithms",
                "dfs and similar",
                "trees"
            ]
        },
        {
            "contestId": 27,
            "index": "C",
            "name": "Unordered Subsequence",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        },
        {
            "contestId": 26,
            "index": "E",
            "name": "Multithreading",
            "type": "PROGRAMMING",
            "points": 2500.0,
            "rating": 2400,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 26,
            "index": "C",
            "name": "Parquet",
            "type": "PROGRAMMING",
            "points": 1500.0,
            "rating": 2000,
            "tags": [
                "combinatorics",
                "constructive algorithms",
                "greedy",
                "implementation"
            ]
        },
        {
            "contestId": 23,
            "index": "C",
            "name": "Oranges and Apples",
            "type": "PROGRAMMING",
            "rating": 2500,
            "tags": [
                "constructive algorithms",
                "sortings"
            ]
        },
        {
            "contestId": 23,
            "index": "B",
            "name": "Party",
            "type": "PROGRAMMING",
            "rating": 1600,
            "tags": [
                "constructive algorithms",
                "graphs",
                "math"
            ]
        },
        {
            "contestId": 14,
            "index": "C",
            "name": "Four Segments",
            "type": "PROGRAMMING",
            "rating": 1700,
            "tags": [
                "brute force",
                "constructive algorithms",
                "geometry",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 12,
            "index": "E",
            "name": "Start of the session",
            "type": "PROGRAMMING",
            "rating": 2100,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 11,
            "index": "A",
            "name": "Increasing Sequence",
            "type": "PROGRAMMING",
            "rating": 900,
            "tags": [
                "constructive algorithms",
                "implementation",
                "math"
            ]
        },
        {
            "contestId": 10,
            "index": "E",
            "name": "Greedy Change",
            "type": "PROGRAMMING",
            "rating": 2600,
            "tags": [
                "constructive algorithms"
            ]
        },
        {
            "contestId": 8,
            "index": "B",
            "name": "Obsession with Robots",
            "type": "PROGRAMMING",
            "rating": 1400,
            "tags": [
                "constructive algorithms",
                "graphs",
                "implementation"
            ]
        },
        {
            "contestId": 7,
            "index": "A",
            "name": "Kalevitch and Chess",
            "type": "PROGRAMMING",
            "rating": 1100,
            "tags": [
                "brute force",
                "constructive algorithms"
            ]
        },
        {
            "contestId": 5,
            "index": "C",
            "name": "Longest Regular Bracket Sequence",
            "type": "PROGRAMMING",
            "rating": 1900,
            "tags": [
                "constructive algorithms",
                "data structures",
                "dp",
                "greedy",
                "sortings",
                "strings"
            ]
        },
        {
            "contestId": 4,
            "index": "B",
            "name": "Before an Exam",
            "type": "PROGRAMMING",
            "rating": 1200,
            "tags": [
                "constructive algorithms",
                "greedy"
            ]
        }
    ],
    "problemStatistics": [
        {
            "contestId": 1702,
            "index": "F",
            "solvedCount": 2951
        },
        {
            "contestId": 1702,
            "index": "A",
            "solvedCount": 18851
        },
        {
            "contestId": 1700,
            "index": "F",
            "solvedCount": 428
        },
        {
            "contestId": 1700,
            "index": "E",
            "solvedCount": 487
        },
        {
            "contestId": 1700,
            "index": "C",
            "solvedCount": 6776
        },
        {
            "contestId": 1700,
            "index": "B",
            "solvedCount": 12881
        },
        {
            "contestId": 1700,
            "index": "A",
            "solvedCount": 17654
        },
        {
            "contestId": 1699,
            "index": "C",
            "solvedCount": 6278
        },
        {
            "contestId": 1699,
            "index": "B",
            "solvedCount": 13799
        },
        {
            "contestId": 1699,
            "index": "A",
            "solvedCount": 18412
        },
        {
            "contestId": 1698,
            "index": "F",
            "solvedCount": 283
        },
        {
            "contestId": 1698,
            "index": "D",
            "solvedCount": 5951
        },
        {
            "contestId": 1698,
            "index": "B",
            "solvedCount": 17152
        },
        {
            "contestId": 1697,
            "index": "F",
            "solvedCount": 212
        },
        {
            "contestId": 1697,
            "index": "E",
            "solvedCount": 762
        },
        {
            "contestId": 1697,
            "index": "D",
            "solvedCount": 3068
        },
        {
            "contestId": 1697,
            "index": "C",
            "solvedCount": 9606
        },
        {
            "contestId": 1696,
            "index": "F",
            "solvedCount": 575
        },
        {
            "contestId": 1696,
            "index": "D",
            "solvedCount": 3723
        },
        {
            "contestId": 1696,
            "index": "C",
            "solvedCount": 8172
        },
        {
            "contestId": 1695,
            "index": "E",
            "solvedCount": 251
        },
        {
            "contestId": 1695,
            "index": "D2",
            "solvedCount": 1205
        },
        {
            "contestId": 1695,
            "index": "D1",
            "solvedCount": 1358
        },
        {
            "contestId": 1694,
            "index": "B",
            "solvedCount": 12723
        },
        {
            "contestId": 1691,
            "index": "D",
            "solvedCount": 3489
        },
        {
            "contestId": 1691,
            "index": "C",
            "solvedCount": 10963
        },
        {
            "contestId": 1691,
            "index": "B",
            "solvedCount": 15913
        },
        {
            "contestId": 1690,
            "index": "A",
            "solvedCount": 25155
        },
        {
            "contestId": 1689,
            "index": "E",
            "solvedCount": 746
        },
        {
            "contestId": 1688,
            "index": "C",
            "solvedCount": 5926
        },
        {
            "contestId": 1688,
            "index": "B",
            "solvedCount": 15017
        },
        {
            "contestId": 1687,
            "index": "E",
            "solvedCount": 98
        },
        {
            "contestId": 1687,
            "index": "B",
            "solvedCount": 2316
        },
        {
            "contestId": 1685,
            "index": "D2",
            "solvedCount": 52
        },
        {
            "contestId": 1685,
            "index": "D1",
            "solvedCount": 258
        },
        {
            "contestId": 1685,
            "index": "C",
            "solvedCount": 522
        },
        {
            "contestId": 1685,
            "index": "A",
            "solvedCount": 12761
        },
        {
            "contestId": 1684,
            "index": "H",
            "solvedCount": 141
        },
        {
            "contestId": 1684,
            "index": "G",
            "solvedCount": 367
        },
        {
            "contestId": 1684,
            "index": "E",
            "solvedCount": 2199
        },
        {
            "contestId": 1684,
            "index": "D",
            "solvedCount": 6807
        },
        {
            "contestId": 1684,
            "index": "C",
            "solvedCount": 9100
        },
        {
            "contestId": 1684,
            "index": "B",
            "solvedCount": 17235
        },
        {
            "contestId": 1684,
            "index": "A",
            "solvedCount": 19471
        },
        {
            "contestId": 1682,
            "index": "E",
            "solvedCount": 347
        },
        {
            "contestId": 1682,
            "index": "D",
            "solvedCount": 2299
        },
        {
            "contestId": 1682,
            "index": "C",
            "solvedCount": 10028
        },
        {
            "contestId": 1682,
            "index": "B",
            "solvedCount": 12694
        },
        {
            "contestId": 1677,
            "index": "C",
            "solvedCount": 2270
        },
        {
            "contestId": 1674,
            "index": "E",
            "solvedCount": 4481
        },
        {
            "contestId": 1674,
            "index": "D",
            "solvedCount": 11039
        },
        {
            "contestId": 1674,
            "index": "A",
            "solvedCount": 20318
        },
        {
            "contestId": 1673,
            "index": "F",
            "solvedCount": 566
        },
        {
            "contestId": 1672,
            "index": "H",
            "solvedCount": 585
        },
        {
            "contestId": 1672,
            "index": "G",
            "solvedCount": 170
        },
        {
            "contestId": 1672,
            "index": "F2",
            "solvedCount": 554
        },
        {
            "contestId": 1672,
            "index": "F1",
            "solvedCount": 2236
        },
        {
            "contestId": 1672,
            "index": "E",
            "solvedCount": 1684
        },
        {
            "contestId": 1672,
            "index": "D",
            "solvedCount": 4549
        },
        {
            "contestId": 1672,
            "index": "C",
            "solvedCount": 10265
        },
        {
            "contestId": 1672,
            "index": "B",
            "solvedCount": 13189
        },
        {
            "contestId": 1671,
            "index": "D",
            "solvedCount": 5071
        },
        {
            "contestId": 1670,
            "index": "E",
            "solvedCount": 1202
        },
        {
            "contestId": 1667,
            "index": "D",
            "solvedCount": 381
        },
        {
            "contestId": 1667,
            "index": "C",
            "solvedCount": 999
        },
        {
            "contestId": 1666,
            "index": "J",
            "solvedCount": 883
        },
        {
            "contestId": 1666,
            "index": "I",
            "solvedCount": 979
        },
        {
            "contestId": 1666,
            "index": "E",
            "solvedCount": 439
        },
        {
            "contestId": 1666,
            "index": "C",
            "solvedCount": 2122
        },
        {
            "contestId": 1665,
            "index": "D",
            "solvedCount": 2587
        },
        {
            "contestId": 1665,
            "index": "B",
            "solvedCount": 14858
        },
        {
            "contestId": 1665,
            "index": "A",
            "solvedCount": 19216
        },
        {
            "contestId": 1663,
            "index": "H",
            "solvedCount": 1017
        },
        {
            "contestId": 1663,
            "index": "G",
            "solvedCount": 122
        },
        {
            "contestId": 1662,
            "index": "M",
            "solvedCount": 1819
        },
        {
            "contestId": 1660,
            "index": "E",
            "solvedCount": 5089
        },
        {
            "contestId": 1659,
            "index": "E",
            "solvedCount": 958
        },
        {
            "contestId": 1659,
            "index": "D",
            "solvedCount": 2771
        },
        {
            "contestId": 1659,
            "index": "B",
            "solvedCount": 7840
        },
        {
            "contestId": 1659,
            "index": "A",
            "solvedCount": 12584
        },
        {
            "contestId": 1658,
            "index": "F",
            "solvedCount": 513
        },
        {
            "contestId": 1658,
            "index": "C",
            "solvedCount": 7487
        },
        {
            "contestId": 1658,
            "index": "A",
            "solvedCount": 18237
        },
        {
            "contestId": 1656,
            "index": "I",
            "solvedCount": 34
        },
        {
            "contestId": 1656,
            "index": "G",
            "solvedCount": 177
        },
        {
            "contestId": 1656,
            "index": "F",
            "solvedCount": 694
        },
        {
            "contestId": 1656,
            "index": "E",
            "solvedCount": 2407
        },
        {
            "contestId": 1656,
            "index": "D",
            "solvedCount": 5025
        },
        {
            "contestId": 1656,
            "index": "C",
            "solvedCount": 13353
        },
        {
            "contestId": 1654,
            "index": "H",
            "solvedCount": 44
        },
        {
            "contestId": 1651,
            "index": "E",
            "solvedCount": 365
        },
        {
            "contestId": 1651,
            "index": "B",
            "solvedCount": 17865
        },
        {
            "contestId": 1650,
            "index": "D",
            "solvedCount": 9990
        },
        {
            "contestId": 1648,
            "index": "B",
            "solvedCount": 4678
        },
        {
            "contestId": 1647,
            "index": "D",
            "solvedCount": 4020
        },
        {
            "contestId": 1647,
            "index": "C",
            "solvedCount": 10193
        },
        {
            "contestId": 1647,
            "index": "B",
            "solvedCount": 12625
        },
        {
            "contestId": 1646,
            "index": "F",
            "solvedCount": 262
        },
        {
            "contestId": 1646,
            "index": "D",
            "solvedCount": 2456
        },
        {
            "contestId": 1646,
            "index": "C",
            "solvedCount": 9415
        },
        {
            "contestId": 1646,
            "index": "B",
            "solvedCount": 17423
        },
        {
            "contestId": 1644,
            "index": "B",
            "solvedCount": 18609
        },
        {
            "contestId": 1641,
            "index": "B",
            "solvedCount": 3112
        },
        {
            "contestId": 1638,
            "index": "D",
            "solvedCount": 3333
        },
        {
            "contestId": 1638,
            "index": "A",
            "solvedCount": 19373
        },
        {
            "contestId": 1637,
            "index": "G",
            "solvedCount": 317
        },
        {
            "contestId": 1637,
            "index": "F",
            "solvedCount": 1278
        },
        {
            "contestId": 1635,
            "index": "E",
            "solvedCount": 1582
        },
        {
            "contestId": 1635,
            "index": "C",
            "solvedCount": 12786
        },
        {
            "contestId": 1634,
            "index": "E",
            "solvedCount": 1191
        },
        {
            "contestId": 1634,
            "index": "D",
            "solvedCount": 3499
        },
        {
            "contestId": 1634,
            "index": "C",
            "solvedCount": 15449
        },
        {
            "contestId": 1632,
            "index": "B",
            "solvedCount": 16689
        },
        {
            "contestId": 1630,
            "index": "D",
            "solvedCount": 1104
        },
        {
            "contestId": 1630,
            "index": "B",
            "solvedCount": 4315
        },
        {
            "contestId": 1630,
            "index": "A",
            "solvedCount": 11145
        },
        {
            "contestId": 1628,
            "index": "C",
            "solvedCount": 2502
        },
        {
            "contestId": 1628,
            "index": "A",
            "solvedCount": 12099
        },
        {
            "contestId": 1627,
            "index": "C",
            "solvedCount": 10662
        },
        {
            "contestId": 1627,
            "index": "A",
            "solvedCount": 21502
        },
        {
            "contestId": 1626,
            "index": "A",
            "solvedCount": 24344
        },
        {
            "contestId": 1624,
            "index": "F",
            "solvedCount": 2463
        },
        {
            "contestId": 1624,
            "index": "E",
            "solvedCount": 3014
        },
        {
            "contestId": 1624,
            "index": "C",
            "solvedCount": 19079
        },
        {
            "contestId": 1622,
            "index": "F",
            "solvedCount": 365
        },
        {
            "contestId": 1621,
            "index": "D",
            "solvedCount": 3378
        },
        {
            "contestId": 1621,
            "index": "A",
            "solvedCount": 21559
        },
        {
            "contestId": 1620,
            "index": "E",
            "solvedCount": 5774
        },
        {
            "contestId": 1620,
            "index": "D",
            "solvedCount": 3094
        },
        {
            "contestId": 1620,
            "index": "A",
            "solvedCount": 18518
        },
        {
            "contestId": 1619,
            "index": "F",
            "solvedCount": 1596
        },
        {
            "contestId": 1619,
            "index": "E",
            "solvedCount": 6512
        },
        {
            "contestId": 1618,
            "index": "F",
            "solvedCount": 3169
        },
        {
            "contestId": 1618,
            "index": "E",
            "solvedCount": 5553
        },
        {
            "contestId": 1617,
            "index": "D2",
            "solvedCount": 1338
        },
        {
            "contestId": 1617,
            "index": "D1",
            "solvedCount": 3675
        },
        {
            "contestId": 1617,
            "index": "B",
            "solvedCount": 16574
        },
        {
            "contestId": 1617,
            "index": "A",
            "solvedCount": 14596
        },
        {
            "contestId": 1615,
            "index": "H",
            "solvedCount": 182
        },
        {
            "contestId": 1615,
            "index": "G",
            "solvedCount": 109
        },
        {
            "contestId": 1614,
            "index": "C",
            "solvedCount": 7805
        },
        {
            "contestId": 1614,
            "index": "B",
            "solvedCount": 14745
        },
        {
            "contestId": 1614,
            "index": "A",
            "solvedCount": 20420
        },
        {
            "contestId": 1612,
            "index": "G",
            "solvedCount": 581
        },
        {
            "contestId": 1612,
            "index": "B",
            "solvedCount": 14047
        },
        {
            "contestId": 1612,
            "index": "A",
            "solvedCount": 15706
        },
        {
            "contestId": 1611,
            "index": "D",
            "solvedCount": 7371
        },
        {
            "contestId": 1611,
            "index": "C",
            "solvedCount": 14761
        },
        {
            "contestId": 1611,
            "index": "B",
            "solvedCount": 21148
        },
        {
            "contestId": 1611,
            "index": "A",
            "solvedCount": 24751
        },
        {
            "contestId": 1610,
            "index": "F",
            "solvedCount": 335
        },
        {
            "contestId": 1608,
            "index": "B",
            "solvedCount": 9277
        },
        {
            "contestId": 1608,
            "index": "A",
            "solvedCount": 16124
        },
        {
            "contestId": 1606,
            "index": "D",
            "solvedCount": 1159
        },
        {
            "contestId": 1605,
            "index": "D",
            "solvedCount": 2307
        },
        {
            "contestId": 1603,
            "index": "B",
            "solvedCount": 10077
        },
        {
            "contestId": 1603,
            "index": "A",
            "solvedCount": 13046
        },
        {
            "contestId": 1602,
            "index": "B",
            "solvedCount": 11818
        },
        {
            "contestId": 1599,
            "index": "A",
            "solvedCount": 419
        },
        {
            "contestId": 1594,
            "index": "F",
            "solvedCount": 1001
        },
        {
            "contestId": 1594,
            "index": "D",
            "solvedCount": 5315
        },
        {
            "contestId": 1593,
            "index": "G",
            "solvedCount": 1299
        },
        {
            "contestId": 1592,
            "index": "F2",
            "solvedCount": 309
        },
        {
            "contestId": 1592,
            "index": "F1",
            "solvedCount": 486
        },
        {
            "contestId": 1592,
            "index": "C",
            "solvedCount": 5730
        },
        {
            "contestId": 1592,
            "index": "B",
            "solvedCount": 12708
        },
        {
            "contestId": 1586,
            "index": "I",
            "solvedCount": 78
        },
        {
            "contestId": 1583,
            "index": "F",
            "solvedCount": 898
        },
        {
            "contestId": 1583,
            "index": "E",
            "solvedCount": 1819
        },
        {
            "contestId": 1583,
            "index": "D",
            "solvedCount": 4422
        },
        {
            "contestId": 1583,
            "index": "B",
            "solvedCount": 10056
        },
        {
            "contestId": 1582,
            "index": "D",
            "solvedCount": 7825
        },
        {
            "contestId": 1581,
            "index": "B",
            "solvedCount": 9039
        },
        {
            "contestId": 1580,
            "index": "E",
            "solvedCount": 40
        },
        {
            "contestId": 1579,
            "index": "E1",
            "solvedCount": 17009
        },
        {
            "contestId": 1579,
            "index": "D",
            "solvedCount": 11494
        },
        {
            "contestId": 1578,
            "index": "M",
            "solvedCount": 364
        },
        {
            "contestId": 1578,
            "index": "A",
            "solvedCount": 261
        },
        {
            "contestId": 1574,
            "index": "E",
            "solvedCount": 713
        },
        {
            "contestId": 1574,
            "index": "A",
            "solvedCount": 19386
        },
        {
            "contestId": 1572,
            "index": "B",
            "solvedCount": 1287
        },
        {
            "contestId": 1571,
            "index": "F",
            "solvedCount": 125
        },
        {
            "contestId": 1571,
            "index": "D",
            "solvedCount": 244
        },
        {
            "contestId": 1569,
            "index": "B",
            "solvedCount": 16413
        },
        {
            "contestId": 1567,
            "index": "F",
            "solvedCount": 581
        },
        {
            "contestId": 1567,
            "index": "D",
            "solvedCount": 3888
        },
        {
            "contestId": 1566,
            "index": "H",
            "solvedCount": 74
        },
        {
            "contestId": 1566,
            "index": "G",
            "solvedCount": 239
        },
        {
            "contestId": 1566,
            "index": "E",
            "solvedCount": 3406
        },
        {
            "contestId": 1566,
            "index": "C",
            "solvedCount": 14576
        },
        {
            "contestId": 1566,
            "index": "B",
            "solvedCount": 16679
        },
        {
            "contestId": 1562,
            "index": "C",
            "solvedCount": 10816
        },
        {
            "contestId": 1562,
            "index": "B",
            "solvedCount": 16742
        },
        {
            "contestId": 1560,
            "index": "F2",
            "solvedCount": 3358
        },
        {
            "contestId": 1560,
            "index": "F1",
            "solvedCount": 4743
        },
        {
            "contestId": 1559,
            "index": "D2",
            "solvedCount": 1990
        },
        {
            "contestId": 1559,
            "index": "D1",
            "solvedCount": 10677
        },
        {
            "contestId": 1559,
            "index": "C",
            "solvedCount": 15717
        },
        {
            "contestId": 1559,
            "index": "A",
            "solvedCount": 21008
        },
        {
            "contestId": 1558,
            "index": "C",
            "solvedCount": 2585
        },
        {
            "contestId": 1557,
            "index": "E",
            "solvedCount": 593
        },
        {
            "contestId": 1556,
            "index": "D",
            "solvedCount": 5003
        },
        {
            "contestId": 1555,
            "index": "D",
            "solvedCount": 9130
        },
        {
            "contestId": 1555,
            "index": "C",
            "solvedCount": 15939
        },
        {
            "contestId": 1554,
            "index": "D",
            "solvedCount": 7178
        },
        {
            "contestId": 1553,
            "index": "G",
            "solvedCount": 779
        },
        {
            "contestId": 1553,
            "index": "E",
            "solvedCount": 2775
        },
        {
            "contestId": 1552,
            "index": "E",
            "solvedCount": 1535
        },
        {
            "contestId": 1552,
            "index": "D",
            "solvedCount": 5408
        },
        {
            "contestId": 1552,
            "index": "C",
            "solvedCount": 5116
        },
        {
            "contestId": 1551,
            "index": "D2",
            "solvedCount": 2209
        },
        {
            "contestId": 1551,
            "index": "D1",
            "solvedCount": 5644
        },
        {
            "contestId": 1551,
            "index": "B2",
            "solvedCount": 12398
        },
        {
            "contestId": 1550,
            "index": "D",
            "solvedCount": 1509
        },
        {
            "contestId": 1547,
            "index": "D",
            "solvedCount": 13090
        },
        {
            "contestId": 1545,
            "index": "D",
            "solvedCount": 302
        },
        {
            "contestId": 1545,
            "index": "C",
            "solvedCount": 456
        },
        {
            "contestId": 1543,
            "index": "E",
            "solvedCount": 331
        },
        {
            "contestId": 1543,
            "index": "D2",
            "solvedCount": 1706
        },
        {
            "contestId": 1543,
            "index": "D1",
            "solvedCount": 6629
        },
        {
            "contestId": 1542,
            "index": "B",
            "solvedCount": 16174
        },
        {
            "contestId": 1541,
            "index": "A",
            "solvedCount": 25007
        },
        {
            "contestId": 1540,
            "index": "A",
            "solvedCount": 11736
        },
        {
            "contestId": 1539,
            "index": "E",
            "solvedCount": 738
        },
        {
            "contestId": 1538,
            "index": "D",
            "solvedCount": 10329
        },
        {
            "contestId": 1537,
            "index": "F",
            "solvedCount": 1953
        },
        {
            "contestId": 1537,
            "index": "C",
            "solvedCount": 19256
        },
        {
            "contestId": 1537,
            "index": "B",
            "solvedCount": 22312
        },
        {
            "contestId": 1536,
            "index": "F",
            "solvedCount": 734
        },
        {
            "contestId": 1536,
            "index": "B",
            "solvedCount": 15030
        },
        {
            "contestId": 1536,
            "index": "A",
            "solvedCount": 18723
        },
        {
            "contestId": 1534,
            "index": "H",
            "solvedCount": 106
        },
        {
            "contestId": 1534,
            "index": "D",
            "solvedCount": 4712
        },
        {
            "contestId": 1533,
            "index": "I",
            "solvedCount": 35
        },
        {
            "contestId": 1533,
            "index": "G",
            "solvedCount": 74
        },
        {
            "contestId": 1531,
            "index": "C",
            "solvedCount": 620
        },
        {
            "contestId": 1530,
            "index": "G",
            "solvedCount": 92
        },
        {
            "contestId": 1530,
            "index": "E",
            "solvedCount": 2493
        },
        {
            "contestId": 1530,
            "index": "D",
            "solvedCount": 7399
        },
        {
            "contestId": 1530,
            "index": "B",
            "solvedCount": 14794
        },
        {
            "contestId": 1529,
            "index": "A",
            "solvedCount": 25959
        },
        {
            "contestId": 1528,
            "index": "D",
            "solvedCount": 1060
        },
        {
            "contestId": 1527,
            "index": "B2",
            "solvedCount": 6277
        },
        {
            "contestId": 1527,
            "index": "B1",
            "solvedCount": 18585
        },
        {
            "contestId": 1526,
            "index": "F",
            "solvedCount": 159
        },
        {
            "contestId": 1526,
            "index": "E",
            "solvedCount": 813
        },
        {
            "contestId": 1526,
            "index": "D",
            "solvedCount": 2070
        },
        {
            "contestId": 1526,
            "index": "A",
            "solvedCount": 21637
        },
        {
            "contestId": 1525,
            "index": "B",
            "solvedCount": 20479
        },
        {
            "contestId": 1523,
            "index": "B",
            "solvedCount": 10930
        },
        {
            "contestId": 1521,
            "index": "E",
            "solvedCount": 527
        },
        {
            "contestId": 1521,
            "index": "D",
            "solvedCount": 1372
        },
        {
            "contestId": 1521,
            "index": "C",
            "solvedCount": 3818
        },
        {
            "contestId": 1521,
            "index": "B",
            "solvedCount": 16546
        },
        {
            "contestId": 1521,
            "index": "A",
            "solvedCount": 25881
        },
        {
            "contestId": 1520,
            "index": "F2",
            "solvedCount": 2445
        },
        {
            "contestId": 1520,
            "index": "C",
            "solvedCount": 24227
        },
        {
            "contestId": 1519,
            "index": "E",
            "solvedCount": 676
        },
        {
            "contestId": 1517,
            "index": "G",
            "solvedCount": 241
        },
        {
            "contestId": 1517,
            "index": "C",
            "solvedCount": 11018
        },
        {
            "contestId": 1517,
            "index": "B",
            "solvedCount": 11849
        },
        {
            "contestId": 1516,
            "index": "C",
            "solvedCount": 9190
        },
        {
            "contestId": 1515,
            "index": "F",
            "solvedCount": 1231
        },
        {
            "contestId": 1515,
            "index": "C",
            "solvedCount": 13146
        },
        {
            "contestId": 1515,
            "index": "A",
            "solvedCount": 18776
        },
        {
            "contestId": 1513,
            "index": "F",
            "solvedCount": 748
        },
        {
            "contestId": 1513,
            "index": "E",
            "solvedCount": 1206
        },
        {
            "contestId": 1513,
            "index": "D",
            "solvedCount": 3710
        },
        {
            "contestId": 1513,
            "index": "B",
            "solvedCount": 10905
        },
        {
            "contestId": 1513,
            "index": "A",
            "solvedCount": 17947
        },
        {
            "contestId": 1512,
            "index": "D",
            "solvedCount": 16557
        },
        {
            "contestId": 1512,
            "index": "C",
            "solvedCount": 15870
        },
        {
            "contestId": 1511,
            "index": "D",
            "solvedCount": 9002
        },
        {
            "contestId": 1511,
            "index": "B",
            "solvedCount": 18127
        },
        {
            "contestId": 1510,
            "index": "J",
            "solvedCount": 299
        },
        {
            "contestId": 1509,
            "index": "A",
            "solvedCount": 22625
        },
        {
            "contestId": 1508,
            "index": "E",
            "solvedCount": 240
        },
        {
            "contestId": 1508,
            "index": "D",
            "solvedCount": 321
        },
        {
            "contestId": 1508,
            "index": "B",
            "solvedCount": 3183
        },
        {
            "contestId": 1508,
            "index": "A",
            "solvedCount": 5175
        },
        {
            "contestId": 1506,
            "index": "F",
            "solvedCount": 2654
        },
        {
            "contestId": 1506,
            "index": "E",
            "solvedCount": 10308
        },
        {
            "contestId": 1506,
            "index": "D",
            "solvedCount": 15460
        },
        {
            "contestId": 1504,
            "index": "B",
            "solvedCount": 14387
        },
        {
            "contestId": 1504,
            "index": "A",
            "solvedCount": 19174
        },
        {
            "contestId": 1503,
            "index": "F",
            "solvedCount": 85
        },
        {
            "contestId": 1503,
            "index": "D",
            "solvedCount": 776
        },
        {
            "contestId": 1503,
            "index": "B",
            "solvedCount": 6001
        },
        {
            "contestId": 1503,
            "index": "A",
            "solvedCount": 10938
        },
        {
            "contestId": 1500,
            "index": "C",
            "solvedCount": 559
        },
        {
            "contestId": 1499,
            "index": "A",
            "solvedCount": 19642
        },
        {
            "contestId": 1497,
            "index": "C2",
            "solvedCount": 12723
        },
        {
            "contestId": 1497,
            "index": "C1",
            "solvedCount": 18115
        },
        {
            "contestId": 1497,
            "index": "B",
            "solvedCount": 15371
        },
        {
            "contestId": 1496,
            "index": "A",
            "solvedCount": 17784
        },
        {
            "contestId": 1495,
            "index": "F",
            "solvedCount": 159
        },
        {
            "contestId": 1495,
            "index": "C",
            "solvedCount": 2128
        },
        {
            "contestId": 1494,
            "index": "F",
            "solvedCount": 278
        },
        {
            "contestId": 1494,
            "index": "E",
            "solvedCount": 1357
        },
        {
            "contestId": 1494,
            "index": "D",
            "solvedCount": 2129
        },
        {
            "contestId": 1493,
            "index": "E",
            "solvedCount": 690
        },
        {
            "contestId": 1493,
            "index": "C",
            "solvedCount": 3902
        },
        {
            "contestId": 1493,
            "index": "A",
            "solvedCount": 17841
        },
        {
            "contestId": 1492,
            "index": "E",
            "solvedCount": 1052
        },
        {
            "contestId": 1492,
            "index": "D",
            "solvedCount": 5249
        },
        {
            "contestId": 1491,
            "index": "G",
            "solvedCount": 532
        },
        {
            "contestId": 1491,
            "index": "F",
            "solvedCount": 721
        },
        {
            "contestId": 1491,
            "index": "D",
            "solvedCount": 5752
        },
        {
            "contestId": 1490,
            "index": "B",
            "solvedCount": 21611
        },
        {
            "contestId": 1487,
            "index": "C",
            "solvedCount": 11076
        },
        {
            "contestId": 1486,
            "index": "E",
            "solvedCount": 2332
        },
        {
            "contestId": 1485,
            "index": "D",
            "solvedCount": 4118
        },
        {
            "contestId": 1482,
            "index": "C",
            "solvedCount": 7850
        },
        {
            "contestId": 1481,
            "index": "D",
            "solvedCount": 3817
        },
        {
            "contestId": 1481,
            "index": "C",
            "solvedCount": 9485
        },
        {
            "contestId": 1479,
            "index": "C",
            "solvedCount": 1053
        },
        {
            "contestId": 1479,
            "index": "B2",
            "solvedCount": 3278
        },
        {
            "contestId": 1479,
            "index": "B1",
            "solvedCount": 5756
        },
        {
            "contestId": 1477,
            "index": "D",
            "solvedCount": 370
        },
        {
            "contestId": 1477,
            "index": "C",
            "solvedCount": 1899
        },
        {
            "contestId": 1477,
            "index": "A",
            "solvedCount": 4911
        },
        {
            "contestId": 1476,
            "index": "A",
            "solvedCount": 24795
        },
        {
            "contestId": 1475,
            "index": "F",
            "solvedCount": 4219
        },
        {
            "contestId": 1474,
            "index": "E",
            "solvedCount": 1125
        },
        {
            "contestId": 1474,
            "index": "C",
            "solvedCount": 9873
        },
        {
            "contestId": 1474,
            "index": "B",
            "solvedCount": 20523
        },
        {
            "contestId": 1473,
            "index": "C",
            "solvedCount": 10906
        },
        {
            "contestId": 1470,
            "index": "D",
            "solvedCount": 2787
        },
        {
            "contestId": 1470,
            "index": "C",
            "solvedCount": 1116
        },
        {
            "contestId": 1469,
            "index": "D",
            "solvedCount": 7716
        },
        {
            "contestId": 1469,
            "index": "A",
            "solvedCount": 21719
        },
        {
            "contestId": 1468,
            "index": "H",
            "solvedCount": 1417
        },
        {
            "contestId": 1467,
            "index": "C",
            "solvedCount": 5417
        },
        {
            "contestId": 1467,
            "index": "A",
            "solvedCount": 21311
        },
        {
            "contestId": 1463,
            "index": "E",
            "solvedCount": 1187
        },
        {
            "contestId": 1463,
            "index": "D",
            "solvedCount": 3599
        },
        {
            "contestId": 1463,
            "index": "B",
            "solvedCount": 14665
        },
        {
            "contestId": 1461,
            "index": "F",
            "solvedCount": 414
        },
        {
            "contestId": 1461,
            "index": "A",
            "solvedCount": 17476
        },
        {
            "contestId": 1455,
            "index": "E",
            "solvedCount": 1241
        },
        {
            "contestId": 1455,
            "index": "C",
            "solvedCount": 17159
        },
        {
            "contestId": 1455,
            "index": "B",
            "solvedCount": 17758
        },
        {
            "contestId": 1454,
            "index": "D",
            "solvedCount": 16037
        },
        {
            "contestId": 1454,
            "index": "A",
            "solvedCount": 31942
        },
        {
            "contestId": 1453,
            "index": "D",
            "solvedCount": 3647
        },
        {
            "contestId": 1453,
            "index": "B",
            "solvedCount": 11466
        },
        {
            "contestId": 1452,
            "index": "F",
            "solvedCount": 215
        },
        {
            "contestId": 1451,
            "index": "F",
            "solvedCount": 706
        },
        {
            "contestId": 1451,
            "index": "E2",
            "solvedCount": 2349
        },
        {
            "contestId": 1451,
            "index": "E1",
            "solvedCount": 3540
        },
        {
            "contestId": 1450,
            "index": "F",
            "solvedCount": 1125
        },
        {
            "contestId": 1450,
            "index": "E",
            "solvedCount": 746
        },
        {
            "contestId": 1450,
            "index": "C2",
            "solvedCount": 2841
        },
        {
            "contestId": 1450,
            "index": "C1",
            "solvedCount": 4626
        },
        {
            "contestId": 1450,
            "index": "A",
            "solvedCount": 16433
        },
        {
            "contestId": 1447,
            "index": "A",
            "solvedCount": 12841
        },
        {
            "contestId": 1446,
            "index": "E",
            "solvedCount": 48
        },
        {
            "contestId": 1446,
            "index": "A",
            "solvedCount": 12391
        },
        {
            "contestId": 1444,
            "index": "D",
            "solvedCount": 339
        },
        {
            "contestId": 1443,
            "index": "A",
            "solvedCount": 15335
        },
        {
            "contestId": 1442,
            "index": "E",
            "solvedCount": 344
        },
        {
            "contestId": 1442,
            "index": "A",
            "solvedCount": 7126
        },
        {
            "contestId": 1439,
            "index": "B",
            "solvedCount": 1093
        },
        {
            "contestId": 1439,
            "index": "A2",
            "solvedCount": 4399
        },
        {
            "contestId": 1439,
            "index": "A1",
            "solvedCount": 8282
        },
        {
            "contestId": 1438,
            "index": "E",
            "solvedCount": 1031
        },
        {
            "contestId": 1438,
            "index": "D",
            "solvedCount": 3542
        },
        {
            "contestId": 1438,
            "index": "C",
            "solvedCount": 8477
        },
        {
            "contestId": 1438,
            "index": "B",
            "solvedCount": 15940
        },
        {
            "contestId": 1438,
            "index": "A",
            "solvedCount": 18081
        },
        {
            "contestId": 1437,
            "index": "E",
            "solvedCount": 2832
        },
        {
            "contestId": 1437,
            "index": "B",
            "solvedCount": 16126
        },
        {
            "contestId": 1437,
            "index": "A",
            "solvedCount": 17019
        },
        {
            "contestId": 1436,
            "index": "B",
            "solvedCount": 17815
        },
        {
            "contestId": 1433,
            "index": "D",
            "solvedCount": 17833
        },
        {
            "contestId": 1433,
            "index": "C",
            "solvedCount": 22585
        },
        {
            "contestId": 1430,
            "index": "C",
            "solvedCount": 17895
        },
        {
            "contestId": 1430,
            "index": "A",
            "solvedCount": 18201
        },
        {
            "contestId": 1428,
            "index": "D",
            "solvedCount": 3929
        },
        {
            "contestId": 1427,
            "index": "E",
            "solvedCount": 1024
        },
        {
            "contestId": 1427,
            "index": "D",
            "solvedCount": 3071
        },
        {
            "contestId": 1426,
            "index": "E",
            "solvedCount": 6157
        },
        {
            "contestId": 1426,
            "index": "D",
            "solvedCount": 12431
        },
        {
            "contestId": 1426,
            "index": "C",
            "solvedCount": 16697
        },
        {
            "contestId": 1425,
            "index": "H",
            "solvedCount": 3556
        },
        {
            "contestId": 1423,
            "index": "J",
            "solvedCount": 604
        },
        {
            "contestId": 1421,
            "index": "D",
            "solvedCount": 3721
        },
        {
            "contestId": 1421,
            "index": "C",
            "solvedCount": 10923
        },
        {
            "contestId": 1421,
            "index": "B",
            "solvedCount": 12142
        },
        {
            "contestId": 1420,
            "index": "C1",
            "solvedCount": 14335
        },
        {
            "contestId": 1419,
            "index": "E",
            "solvedCount": 2816
        },
        {
            "contestId": 1419,
            "index": "D2",
            "solvedCount": 12126
        },
        {
            "contestId": 1419,
            "index": "D1",
            "solvedCount": 19023
        },
        {
            "contestId": 1419,
            "index": "B",
            "solvedCount": 14404
        },
        {
            "contestId": 1416,
            "index": "B",
            "solvedCount": 5037
        },
        {
            "contestId": 1415,
            "index": "E",
            "solvedCount": 2097
        },
        {
            "contestId": 1415,
            "index": "D",
            "solvedCount": 4194
        },
        {
            "contestId": 1413,
            "index": "A",
            "solvedCount": 13876
        },
        {
            "contestId": 1408,
            "index": "F",
            "solvedCount": 1945
        },
        {
            "contestId": 1408,
            "index": "B",
            "solvedCount": 8675
        },
        {
            "contestId": 1408,
            "index": "A",
            "solvedCount": 11938
        },
        {
            "contestId": 1407,
            "index": "E",
            "solvedCount": 1297
        },
        {
            "contestId": 1407,
            "index": "C",
            "solvedCount": 9746
        },
        {
            "contestId": 1407,
            "index": "A",
            "solvedCount": 18096
        },
        {
            "contestId": 1406,
            "index": "D",
            "solvedCount": 2974
        },
        {
            "contestId": 1406,
            "index": "C",
            "solvedCount": 8205
        },
        {
            "contestId": 1405,
            "index": "B",
            "solvedCount": 18526
        },
        {
            "contestId": 1405,
            "index": "A",
            "solvedCount": 20207
        },
        {
            "contestId": 1404,
            "index": "D",
            "solvedCount": 724
        },
        {
            "contestId": 1404,
            "index": "C",
            "solvedCount": 2125
        },
        {
            "contestId": 1401,
            "index": "C",
            "solvedCount": 19423
        },
        {
            "contestId": 1401,
            "index": "B",
            "solvedCount": 19185
        },
        {
            "contestId": 1401,
            "index": "A",
            "solvedCount": 23581
        },
        {
            "contestId": 1400,
            "index": "C",
            "solvedCount": 14517
        },
        {
            "contestId": 1400,
            "index": "A",
            "solvedCount": 24463
        },
        {
            "contestId": 1399,
            "index": "D",
            "solvedCount": 15000
        },
        {
            "contestId": 1396,
            "index": "E",
            "solvedCount": 241
        },
        {
            "contestId": 1396,
            "index": "B",
            "solvedCount": 9031
        },
        {
            "contestId": 1396,
            "index": "A",
            "solvedCount": 12672
        },
        {
            "contestId": 1395,
            "index": "B",
            "solvedCount": 15028
        },
        {
            "contestId": 1393,
            "index": "C",
            "solvedCount": 9130
        },
        {
            "contestId": 1393,
            "index": "B",
            "solvedCount": 14337
        },
        {
            "contestId": 1392,
            "index": "F",
            "solvedCount": 1711
        },
        {
            "contestId": 1392,
            "index": "E",
            "solvedCount": 2883
        },
        {
            "contestId": 1391,
            "index": "E",
            "solvedCount": 1078
        },
        {
            "contestId": 1391,
            "index": "D",
            "solvedCount": 4186
        },
        {
            "contestId": 1391,
            "index": "A",
            "solvedCount": 22593
        },
        {
            "contestId": 1389,
            "index": "A",
            "solvedCount": 29123
        },
        {
            "contestId": 1386,
            "index": "A",
            "solvedCount": 192
        },
        {
            "contestId": 1385,
            "index": "E",
            "solvedCount": 5299
        },
        {
            "contestId": 1384,
            "index": "B2",
            "solvedCount": 2199
        },
        {
            "contestId": 1384,
            "index": "A",
            "solvedCount": 16600
        },
        {
            "contestId": 1383,
            "index": "D",
            "solvedCount": 480
        },
        {
            "contestId": 1383,
            "index": "B",
            "solvedCount": 4179
        },
        {
            "contestId": 1381,
            "index": "C",
            "solvedCount": 1249
        },
        {
            "contestId": 1381,
            "index": "A2",
            "solvedCount": 11179
        },
        {
            "contestId": 1381,
            "index": "A1",
            "solvedCount": 17605
        },
        {
            "contestId": 1380,
            "index": "D",
            "solvedCount": 4021
        },
        {
            "contestId": 1379,
            "index": "E",
            "solvedCount": 263
        },
        {
            "contestId": 1375,
            "index": "H",
            "solvedCount": 270
        },
        {
            "contestId": 1375,
            "index": "G",
            "solvedCount": 1308
        },
        {
            "contestId": 1375,
            "index": "F",
            "solvedCount": 1606
        },
        {
            "contestId": 1375,
            "index": "E",
            "solvedCount": 2174
        },
        {
            "contestId": 1375,
            "index": "D",
            "solvedCount": 7505
        },
        {
            "contestId": 1375,
            "index": "C",
            "solvedCount": 16994
        },
        {
            "contestId": 1375,
            "index": "B",
            "solvedCount": 15658
        },
        {
            "contestId": 1375,
            "index": "A",
            "solvedCount": 16947
        },
        {
            "contestId": 1374,
            "index": "F",
            "solvedCount": 1118
        },
        {
            "contestId": 1373,
            "index": "F",
            "solvedCount": 1396
        },
        {
            "contestId": 1373,
            "index": "E",
            "solvedCount": 2446
        },
        {
            "contestId": 1372,
            "index": "C",
            "solvedCount": 14923
        },
        {
            "contestId": 1372,
            "index": "A",
            "solvedCount": 27952
        },
        {
            "contestId": 1371,
            "index": "D",
            "solvedCount": 11611
        },
        {
            "contestId": 1370,
            "index": "E",
            "solvedCount": 4159
        },
        {
            "contestId": 1370,
            "index": "B",
            "solvedCount": 20616
        },
        {
            "contestId": 1368,
            "index": "E",
            "solvedCount": 1651
        },
        {
            "contestId": 1368,
            "index": "C",
            "solvedCount": 11887
        },
        {
            "contestId": 1368,
            "index": "B",
            "solvedCount": 15967
        },
        {
            "contestId": 1367,
            "index": "D",
            "solvedCount": 7196
        },
        {
            "contestId": 1367,
            "index": "C",
            "solvedCount": 19642
        },
        {
            "contestId": 1366,
            "index": "E",
            "solvedCount": 3422
        },
        {
            "contestId": 1366,
            "index": "D",
            "solvedCount": 7823
        },
        {
            "contestId": 1365,
            "index": "G",
            "solvedCount": 642
        },
        {
            "contestId": 1365,
            "index": "F",
            "solvedCount": 3781
        },
        {
            "contestId": 1365,
            "index": "E",
            "solvedCount": 6619
        },
        {
            "contestId": 1365,
            "index": "D",
            "solvedCount": 12288
        },
        {
            "contestId": 1365,
            "index": "C",
            "solvedCount": 18476
        },
        {
            "contestId": 1365,
            "index": "B",
            "solvedCount": 21510
        },
        {
            "contestId": 1364,
            "index": "E",
            "solvedCount": 852
        },
        {
            "contestId": 1364,
            "index": "D",
            "solvedCount": 3291
        },
        {
            "contestId": 1364,
            "index": "C",
            "solvedCount": 11020
        },
        {
            "contestId": 1361,
            "index": "C",
            "solvedCount": 1168
        },
        {
            "contestId": 1361,
            "index": "A",
            "solvedCount": 7462
        },
        {
            "contestId": 1360,
            "index": "H",
            "solvedCount": 3800
        },
        {
            "contestId": 1360,
            "index": "G",
            "solvedCount": 6487
        },
        {
            "contestId": 1360,
            "index": "F",
            "solvedCount": 10111
        },
        {
            "contestId": 1360,
            "index": "C",
            "solvedCount": 26101
        },
        {
            "contestId": 1358,
            "index": "F",
            "solvedCount": 373
        },
        {
            "contestId": 1358,
            "index": "E",
            "solvedCount": 1788
        },
        {
            "contestId": 1355,
            "index": "F",
            "solvedCount": 619
        },
        {
            "contestId": 1355,
            "index": "D",
            "solvedCount": 15002
        },
        {
            "contestId": 1354,
            "index": "F",
            "solvedCount": 829
        },
        {
            "contestId": 1353,
            "index": "D",
            "solvedCount": 14523
        },
        {
            "contestId": 1353,
            "index": "A",
            "solvedCount": 32433
        },
        {
            "contestId": 1352,
            "index": "G",
            "solvedCount": 14933
        },
        {
            "contestId": 1352,
            "index": "F",
            "solvedCount": 12780
        },
        {
            "contestId": 1352,
            "index": "B",
            "solvedCount": 25821
        },
        {
            "contestId": 1349,
            "index": "E",
            "solvedCount": 64
        },
        {
            "contestId": 1349,
            "index": "B",
            "solvedCount": 6504
        },
        {
            "contestId": 1348,
            "index": "D",
            "solvedCount": 7497
        },
        {
            "contestId": 1348,
            "index": "C",
            "solvedCount": 12689
        },
        {
            "contestId": 1348,
            "index": "B",
            "solvedCount": 20467
        },
        {
            "contestId": 1344,
            "index": "B",
            "solvedCount": 5257
        },
        {
            "contestId": 1343,
            "index": "F",
            "solvedCount": 1107
        },
        {
            "contestId": 1343,
            "index": "B",
            "solvedCount": 40490
        },
        {
            "contestId": 1342,
            "index": "D",
            "solvedCount": 5377
        },
        {
            "contestId": 1342,
            "index": "B",
            "solvedCount": 21059
        },
        {
            "contestId": 1340,
            "index": "D",
            "solvedCount": 687
        },
        {
            "contestId": 1339,
            "index": "B",
            "solvedCount": 21565
        },
        {
            "contestId": 1338,
            "index": "D",
            "solvedCount": 617
        },
        {
            "contestId": 1338,
            "index": "C",
            "solvedCount": 2632
        },
        {
            "contestId": 1338,
            "index": "B",
            "solvedCount": 7034
        },
        {
            "contestId": 1337,
            "index": "A",
            "solvedCount": 28613
        },
        {
            "contestId": 1336,
            "index": "D",
            "solvedCount": 393
        },
        {
            "contestId": 1335,
            "index": "D",
            "solvedCount": 22752
        },
        {
            "contestId": 1335,
            "index": "B",
            "solvedCount": 30410
        },
        {
            "contestId": 1334,
            "index": "D",
            "solvedCount": 6276
        },
        {
            "contestId": 1334,
            "index": "C",
            "solvedCount": 13744
        },
        {
            "contestId": 1333,
            "index": "E",
            "solvedCount": 1182
        },
        {
            "contestId": 1333,
            "index": "D",
            "solvedCount": 3390
        },
        {
            "contestId": 1333,
            "index": "A",
            "solvedCount": 21918
        },
        {
            "contestId": 1332,
            "index": "E",
            "solvedCount": 3087
        },
        {
            "contestId": 1332,
            "index": "D",
            "solvedCount": 7315
        },
        {
            "contestId": 1332,
            "index": "B",
            "solvedCount": 14971
        },
        {
            "contestId": 1329,
            "index": "D",
            "solvedCount": 248
        },
        {
            "contestId": 1329,
            "index": "C",
            "solvedCount": 1373
        },
        {
            "contestId": 1329,
            "index": "A",
            "solvedCount": 7881
        },
        {
            "contestId": 1328,
            "index": "D",
            "solvedCount": 10423
        },
        {
            "contestId": 1327,
            "index": "C",
            "solvedCount": 11729
        },
        {
            "contestId": 1326,
            "index": "A",
            "solvedCount": 24180
        },
        {
            "contestId": 1325,
            "index": "F",
            "solvedCount": 1310
        },
        {
            "contestId": 1325,
            "index": "D",
            "solvedCount": 9599
        },
        {
            "contestId": 1325,
            "index": "C",
            "solvedCount": 11466
        },
        {
            "contestId": 1325,
            "index": "A",
            "solvedCount": 29821
        },
        {
            "contestId": 1322,
            "index": "B",
            "solvedCount": 3182
        },
        {
            "contestId": 1321,
            "index": "C",
            "solvedCount": 8333
        },
        {
            "contestId": 1316,
            "index": "D",
            "solvedCount": 2885
        },
        {
            "contestId": 1316,
            "index": "C",
            "solvedCount": 6393
        },
        {
            "contestId": 1316,
            "index": "B",
            "solvedCount": 9905
        },
        {
            "contestId": 1313,
            "index": "B",
            "solvedCount": 5929
        },
        {
            "contestId": 1312,
            "index": "B",
            "solvedCount": 20124
        },
        {
            "contestId": 1311,
            "index": "E",
            "solvedCount": 1722
        },
        {
            "contestId": 1305,
            "index": "E",
            "solvedCount": 2519
        },
        {
            "contestId": 1305,
            "index": "D",
            "solvedCount": 4150
        },
        {
            "contestId": 1305,
            "index": "B",
            "solvedCount": 10188
        },
        {
            "contestId": 1305,
            "index": "A",
            "solvedCount": 12949
        },
        {
            "contestId": 1304,
            "index": "D",
            "solvedCount": 5332
        },
        {
            "contestId": 1304,
            "index": "B",
            "solvedCount": 15963
        },
        {
            "contestId": 1302,
            "index": "B",
            "solvedCount": 141
        },
        {
            "contestId": 1301,
            "index": "D",
            "solvedCount": 3446
        },
        {
            "contestId": 1296,
            "index": "F",
            "solvedCount": 2253
        },
        {
            "contestId": 1296,
            "index": "E1",
            "solvedCount": 5926
        },
        {
            "contestId": 1292,
            "index": "E",
            "solvedCount": 194
        },
        {
            "contestId": 1292,
            "index": "B",
            "solvedCount": 5167
        },
        {
            "contestId": 1290,
            "index": "D",
            "solvedCount": 387
        },
        {
            "contestId": 1290,
            "index": "B",
            "solvedCount": 4104
        },
        {
            "contestId": 1288,
            "index": "F",
            "solvedCount": 313
        },
        {
            "contestId": 1286,
            "index": "F",
            "solvedCount": 163
        },
        {
            "contestId": 1286,
            "index": "C2",
            "solvedCount": 477
        },
        {
            "contestId": 1286,
            "index": "C1",
            "solvedCount": 1009
        },
        {
            "contestId": 1286,
            "index": "B",
            "solvedCount": 3867
        },
        {
            "contestId": 1285,
            "index": "E",
            "solvedCount": 1414
        },
        {
            "contestId": 1283,
            "index": "F",
            "solvedCount": 1269
        },
        {
            "contestId": 1283,
            "index": "C",
            "solvedCount": 11100
        },
        {
            "contestId": 1282,
            "index": "E",
            "solvedCount": 826
        },
        {
            "contestId": 1282,
            "index": "D",
            "solvedCount": 1783
        },
        {
            "contestId": 1280,
            "index": "F",
            "solvedCount": 43
        },
        {
            "contestId": 1278,
            "index": "E",
            "solvedCount": 1441
        },
        {
            "contestId": 1276,
            "index": "E",
            "solvedCount": 59
        },
        {
            "contestId": 1276,
            "index": "C",
            "solvedCount": 1238
        },
        {
            "contestId": 1272,
            "index": "B",
            "solvedCount": 11935
        },
        {
            "contestId": 1270,
            "index": "I",
            "solvedCount": 158
        },
        {
            "contestId": 1270,
            "index": "G",
            "solvedCount": 1225
        },
        {
            "contestId": 1270,
            "index": "E",
            "solvedCount": 1878
        },
        {
            "contestId": 1270,
            "index": "D",
            "solvedCount": 3924
        },
        {
            "contestId": 1270,
            "index": "C",
            "solvedCount": 11726
        },
        {
            "contestId": 1270,
            "index": "B",
            "solvedCount": 13996
        },
        {
            "contestId": 1268,
            "index": "A",
            "solvedCount": 7529
        },
        {
            "contestId": 1267,
            "index": "L",
            "solvedCount": 2363
        },
        {
            "contestId": 1267,
            "index": "I",
            "solvedCount": 553
        },
        {
            "contestId": 1267,
            "index": "H",
            "solvedCount": 62
        },
        {
            "contestId": 1267,
            "index": "D",
            "solvedCount": 166
        },
        {
            "contestId": 1267,
            "index": "C",
            "solvedCount": 364
        },
        {
            "contestId": 1266,
            "index": "D",
            "solvedCount": 3099
        },
        {
            "contestId": 1266,
            "index": "C",
            "solvedCount": 8556
        },
        {
            "contestId": 1266,
            "index": "B",
            "solvedCount": 12065
        },
        {
            "contestId": 1265,
            "index": "A",
            "solvedCount": 13186
        },
        {
            "contestId": 1264,
            "index": "F",
            "solvedCount": 267
        },
        {
            "contestId": 1264,
            "index": "E",
            "solvedCount": 446
        },
        {
            "contestId": 1264,
            "index": "B",
            "solvedCount": 5080
        },
        {
            "contestId": 1256,
            "index": "F",
            "solvedCount": 2613
        },
        {
            "contestId": 1255,
            "index": "C",
            "solvedCount": 5909
        },
        {
            "contestId": 1254,
            "index": "C",
            "solvedCount": 1070
        },
        {
            "contestId": 1254,
            "index": "B2",
            "solvedCount": 2498
        },
        {
            "contestId": 1254,
            "index": "B1",
            "solvedCount": 3775
        },
        {
            "contestId": 1254,
            "index": "A",
            "solvedCount": 4563
        },
        {
            "contestId": 1253,
            "index": "D",
            "solvedCount": 7399
        },
        {
            "contestId": 1250,
            "index": "M",
            "solvedCount": 307
        },
        {
            "contestId": 1250,
            "index": "B",
            "solvedCount": 2233
        },
        {
            "contestId": 1245,
            "index": "B",
            "solvedCount": 12160
        },
        {
            "contestId": 1244,
            "index": "G",
            "solvedCount": 1117
        },
        {
            "contestId": 1244,
            "index": "F",
            "solvedCount": 1203
        },
        {
            "contestId": 1244,
            "index": "E",
            "solvedCount": 3893
        },
        {
            "contestId": 1244,
            "index": "D",
            "solvedCount": 6162
        },
        {
            "contestId": 1242,
            "index": "E",
            "solvedCount": 114
        },
        {
            "contestId": 1242,
            "index": "A",
            "solvedCount": 11008
        },
        {
            "contestId": 1237,
            "index": "H",
            "solvedCount": 185
        },
        {
            "contestId": 1237,
            "index": "C2",
            "solvedCount": 3695
        },
        {
            "contestId": 1237,
            "index": "C1",
            "solvedCount": 5380
        },
        {
            "contestId": 1236,
            "index": "C",
            "solvedCount": 8877
        },
        {
            "contestId": 1231,
            "index": "E",
            "solvedCount": 532
        },
        {
            "contestId": 1228,
            "index": "F",
            "solvedCount": 368
        },
        {
            "contestId": 1228,
            "index": "D",
            "solvedCount": 4592
        },
        {
            "contestId": 1227,
            "index": "G",
            "solvedCount": 650
        },
        {
            "contestId": 1227,
            "index": "C",
            "solvedCount": 4913
        },
        {
            "contestId": 1227,
            "index": "B",
            "solvedCount": 8208
        },
        {
            "contestId": 1225,
            "index": "G",
            "solvedCount": 270
        },
        {
            "contestId": 1225,
            "index": "F",
            "solvedCount": 720
        },
        {
            "contestId": 1221,
            "index": "B",
            "solvedCount": 10605
        },
        {
            "contestId": 1218,
            "index": "G",
            "solvedCount": 31
        },
        {
            "contestId": 1217,
            "index": "D",
            "solvedCount": 4150
        },
        {
            "contestId": 1215,
            "index": "C",
            "solvedCount": 9246
        },
        {
            "contestId": 1214,
            "index": "H",
            "solvedCount": 322
        },
        {
            "contestId": 1214,
            "index": "E",
            "solvedCount": 2229
        },
        {
            "contestId": 1213,
            "index": "E",
            "solvedCount": 4295
        },
        {
            "contestId": 1209,
            "index": "C",
            "solvedCount": 6609
        },
        {
            "contestId": 1208,
            "index": "C",
            "solvedCount": 5282
        },
        {
            "contestId": 1207,
            "index": "B",
            "solvedCount": 11823
        },
        {
            "contestId": 1205,
            "index": "F",
            "solvedCount": 92
        },
        {
            "contestId": 1205,
            "index": "D",
            "solvedCount": 500
        },
        {
            "contestId": 1205,
            "index": "A",
            "solvedCount": 12617
        },
        {
            "contestId": 1202,
            "index": "D",
            "solvedCount": 4162
        },
        {
            "contestId": 1198,
            "index": "C",
            "solvedCount": 2676
        },
        {
            "contestId": 1196,
            "index": "F",
            "solvedCount": 1905
        },
        {
            "contestId": 1196,
            "index": "E",
            "solvedCount": 3138
        },
        {
            "contestId": 1196,
            "index": "B",
            "solvedCount": 13969
        },
        {
            "contestId": 1196,
            "index": "A",
            "solvedCount": 23946
        },
        {
            "contestId": 1193,
            "index": "C",
            "solvedCount": 28
        },
        {
            "contestId": 1188,
            "index": "A2",
            "solvedCount": 941
        },
        {
            "contestId": 1187,
            "index": "C",
            "solvedCount": 5427
        },
        {
            "contestId": 1186,
            "index": "D",
            "solvedCount": 7884
        },
        {
            "contestId": 1182,
            "index": "D",
            "solvedCount": 659
        },
        {
            "contestId": 1179,
            "index": "B",
            "solvedCount": 3866
        },
        {
            "contestId": 1178,
            "index": "E",
            "solvedCount": 3726
        },
        {
            "contestId": 1178,
            "index": "D",
            "solvedCount": 6424
        },
        {
            "contestId": 1174,
            "index": "F",
            "solvedCount": 1032
        },
        {
            "contestId": 1174,
            "index": "D",
            "solvedCount": 4053
        },
        {
            "contestId": 1174,
            "index": "C",
            "solvedCount": 10682
        },
        {
            "contestId": 1174,
            "index": "A",
            "solvedCount": 14386
        },
        {
            "contestId": 1173,
            "index": "B",
            "solvedCount": 8070
        },
        {
            "contestId": 1172,
            "index": "D",
            "solvedCount": 372
        },
        {
            "contestId": 1170,
            "index": "H",
            "solvedCount": 35
        },
        {
            "contestId": 1168,
            "index": "E",
            "solvedCount": 185
        },
        {
            "contestId": 1167,
            "index": "D",
            "solvedCount": 6152
        },
        {
            "contestId": 1166,
            "index": "E",
            "solvedCount": 2341
        },
        {
            "contestId": 1166,
            "index": "B",
            "solvedCount": 10317
        },
        {
            "contestId": 1163,
            "index": "E",
            "solvedCount": 509
        },
        {
            "contestId": 1158,
            "index": "D",
            "solvedCount": 536
        },
        {
            "contestId": 1158,
            "index": "C",
            "solvedCount": 1439
        },
        {
            "contestId": 1158,
            "index": "B",
            "solvedCount": 1842
        },
        {
            "contestId": 1158,
            "index": "A",
            "solvedCount": 5812
        },
        {
            "contestId": 1157,
            "index": "G",
            "solvedCount": 723
        },
        {
            "contestId": 1157,
            "index": "F",
            "solvedCount": 1822
        },
        {
            "contestId": 1157,
            "index": "D",
            "solvedCount": 2885
        },
        {
            "contestId": 1153,
            "index": "B",
            "solvedCount": 8048
        },
        {
            "contestId": 1152,
            "index": "E",
            "solvedCount": 823
        },
        {
            "contestId": 1152,
            "index": "B",
            "solvedCount": 7930
        },
        {
            "contestId": 1151,
            "index": "C",
            "solvedCount": 4467
        },
        {
            "contestId": 1151,
            "index": "B",
            "solvedCount": 8455
        },
        {
            "contestId": 1149,
            "index": "A",
            "solvedCount": 12456
        },
        {
            "contestId": 1148,
            "index": "G",
            "solvedCount": 183
        },
        {
            "contestId": 1148,
            "index": "F",
            "solvedCount": 802
        },
        {
            "contestId": 1148,
            "index": "E",
            "solvedCount": 1498
        },
        {
            "contestId": 1148,
            "index": "C",
            "solvedCount": 4609
        },
        {
            "contestId": 1144,
            "index": "D",
            "solvedCount": 8918
        },
        {
            "contestId": 1144,
            "index": "C",
            "solvedCount": 12952
        },
        {
            "contestId": 1141,
            "index": "G",
            "solvedCount": 1861
        },
        {
            "contestId": 1137,
            "index": "D",
            "solvedCount": 994
        },
        {
            "contestId": 1136,
            "index": "C",
            "solvedCount": 6903
        },
        {
            "contestId": 1136,
            "index": "B",
            "solvedCount": 10654
        },
        {
            "contestId": 1133,
            "index": "F2",
            "solvedCount": 2321
        },
        {
            "contestId": 1131,
            "index": "F",
            "solvedCount": 5132
        },
        {
            "contestId": 1129,
            "index": "B",
            "solvedCount": 1920
        },
        {
            "contestId": 1120,
            "index": "B",
            "solvedCount": 353
        },
        {
            "contestId": 1119,
            "index": "G",
            "solvedCount": 301
        },
        {
            "contestId": 1119,
            "index": "C",
            "solvedCount": 6180
        },
        {
            "contestId": 1118,
            "index": "E",
            "solvedCount": 3374
        },
        {
            "contestId": 1118,
            "index": "C",
            "solvedCount": 4908
        },
        {
            "contestId": 1117,
            "index": "E",
            "solvedCount": 1271
        },
        {
            "contestId": 1114,
            "index": "B",
            "solvedCount": 8287
        },
        {
            "contestId": 1110,
            "index": "G",
            "solvedCount": 414
        },
        {
            "contestId": 1110,
            "index": "E",
            "solvedCount": 3310
        },
        {
            "contestId": 1110,
            "index": "C",
            "solvedCount": 7923
        },
        {
            "contestId": 1109,
            "index": "B",
            "solvedCount": 3877
        },
        {
            "contestId": 1108,
            "index": "D",
            "solvedCount": 12889
        },
        {
            "contestId": 1107,
            "index": "G",
            "solvedCount": 817
        },
        {
            "contestId": 1104,
            "index": "A",
            "solvedCount": 14300
        },
        {
            "contestId": 1103,
            "index": "C",
            "solvedCount": 631
        },
        {
            "contestId": 1103,
            "index": "B",
            "solvedCount": 2923
        },
        {
            "contestId": 1103,
            "index": "A",
            "solvedCount": 8709
        },
        {
            "contestId": 1100,
            "index": "D",
            "solvedCount": 765
        },
        {
            "contestId": 1099,
            "index": "C",
            "solvedCount": 7864
        },
        {
            "contestId": 1099,
            "index": "B",
            "solvedCount": 9780
        },
        {
            "contestId": 1098,
            "index": "C",
            "solvedCount": 769
        },
        {
            "contestId": 1098,
            "index": "B",
            "solvedCount": 1302
        },
        {
            "contestId": 1098,
            "index": "A",
            "solvedCount": 7355
        },
        {
            "contestId": 1097,
            "index": "E",
            "solvedCount": 368
        },
        {
            "contestId": 1093,
            "index": "B",
            "solvedCount": 13734
        },
        {
            "contestId": 1092,
            "index": "E",
            "solvedCount": 1317
        },
        {
            "contestId": 1091,
            "index": "F",
            "solvedCount": 705
        },
        {
            "contestId": 1091,
            "index": "B",
            "solvedCount": 9621
        },
        {
            "contestId": 1090,
            "index": "F",
            "solvedCount": 208
        },
        {
            "contestId": 1090,
            "index": "D",
            "solvedCount": 1554
        },
        {
            "contestId": 1090,
            "index": "C",
            "solvedCount": 380
        },
        {
            "contestId": 1089,
            "index": "M",
            "solvedCount": 480
        },
        {
            "contestId": 1089,
            "index": "E",
            "solvedCount": 1704
        },
        {
            "contestId": 1088,
            "index": "D",
            "solvedCount": 2319
        },
        {
            "contestId": 1088,
            "index": "C",
            "solvedCount": 7276
        },
        {
            "contestId": 1088,
            "index": "A",
            "solvedCount": 14765
        },
        {
            "contestId": 1085,
            "index": "D",
            "solvedCount": 4845
        },
        {
            "contestId": 1082,
            "index": "D",
            "solvedCount": 3207
        },
        {
            "contestId": 1081,
            "index": "F",
            "solvedCount": 377
        },
        {
            "contestId": 1081,
            "index": "E",
            "solvedCount": 2184
        },
        {
            "contestId": 1081,
            "index": "B",
            "solvedCount": 4065
        },
        {
            "contestId": 1081,
            "index": "A",
            "solvedCount": 10656
        },
        {
            "contestId": 1080,
            "index": "D",
            "solvedCount": 1393
        },
        {
            "contestId": 1078,
            "index": "E",
            "solvedCount": 72
        },
        {
            "contestId": 1070,
            "index": "M",
            "solvedCount": 51
        },
        {
            "contestId": 1070,
            "index": "L",
            "solvedCount": 179
        },
        {
            "contestId": 1068,
            "index": "C",
            "solvedCount": 2839
        },
        {
            "contestId": 1067,
            "index": "C",
            "solvedCount": 543
        },
        {
            "contestId": 1065,
            "index": "B",
            "solvedCount": 9711
        },
        {
            "contestId": 1063,
            "index": "E",
            "solvedCount": 264
        },
        {
            "contestId": 1063,
            "index": "C",
            "solvedCount": 2431
        },
        {
            "contestId": 1063,
            "index": "A",
            "solvedCount": 9369
        },
        {
            "contestId": 1060,
            "index": "H",
            "solvedCount": 156
        },
        {
            "contestId": 1059,
            "index": "C",
            "solvedCount": 6376
        },
        {
            "contestId": 1056,
            "index": "D",
            "solvedCount": 4724
        },
        {
            "contestId": 1054,
            "index": "G",
            "solvedCount": 146
        },
        {
            "contestId": 1054,
            "index": "E",
            "solvedCount": 437
        },
        {
            "contestId": 1054,
            "index": "C",
            "solvedCount": 3967
        },
        {
            "contestId": 1053,
            "index": "E",
            "solvedCount": 151
        },
        {
            "contestId": 1045,
            "index": "E",
            "solvedCount": 102
        },
        {
            "contestId": 1043,
            "index": "E",
            "solvedCount": 2505
        },
        {
            "contestId": 1043,
            "index": "C",
            "solvedCount": 6139
        },
        {
            "contestId": 1042,
            "index": "C",
            "solvedCount": 4255
        },
        {
            "contestId": 1041,
            "index": "E",
            "solvedCount": 3115
        },
        {
            "contestId": 1039,
            "index": "A",
            "solvedCount": 703
        },
        {
            "contestId": 1038,
            "index": "B",
            "solvedCount": 11287
        },
        {
            "contestId": 1037,
            "index": "A",
            "solvedCount": 9835
        },
        {
            "contestId": 1034,
            "index": "B",
            "solvedCount": 1880
        },
        {
            "contestId": 1033,
            "index": "E",
            "solvedCount": 396
        },
        {
            "contestId": 1032,
            "index": "C",
            "solvedCount": 3281
        },
        {
            "contestId": 1031,
            "index": "E",
            "solvedCount": 382
        },
        {
            "contestId": 1028,
            "index": "E",
            "solvedCount": 1038
        },
        {
            "contestId": 1028,
            "index": "B",
            "solvedCount": 7474
        },
        {
            "contestId": 1025,
            "index": "G",
            "solvedCount": 381
        },
        {
            "contestId": 1025,
            "index": "E",
            "solvedCount": 468
        },
        {
            "contestId": 1025,
            "index": "C",
            "solvedCount": 5424
        },
        {
            "contestId": 1023,
            "index": "E",
            "solvedCount": 1715
        },
        {
            "contestId": 1023,
            "index": "D",
            "solvedCount": 3632
        },
        {
            "contestId": 1019,
            "index": "C",
            "solvedCount": 796
        },
        {
            "contestId": 1017,
            "index": "C",
            "solvedCount": 5441
        },
        {
            "contestId": 1016,
            "index": "D",
            "solvedCount": 3957
        },
        {
            "contestId": 1015,
            "index": "D",
            "solvedCount": 6624
        },
        {
            "contestId": 1012,
            "index": "D",
            "solvedCount": 244
        },
        {
            "contestId": 1012,
            "index": "B",
            "solvedCount": 3221
        },
        {
            "contestId": 1009,
            "index": "D",
            "solvedCount": 5499
        },
        {
            "contestId": 1004,
            "index": "D",
            "solvedCount": 1261
        },
        {
            "contestId": 1004,
            "index": "C",
            "solvedCount": 6816
        },
        {
            "contestId": 1004,
            "index": "B",
            "solvedCount": 8392
        },
        {
            "contestId": 1003,
            "index": "E",
            "solvedCount": 2041
        },
        {
            "contestId": 1003,
            "index": "B",
            "solvedCount": 9362
        },
        {
            "contestId": 998,
            "index": "A",
            "solvedCount": 8439
        },
        {
            "contestId": 995,
            "index": "A",
            "solvedCount": 1388
        },
        {
            "contestId": 990,
            "index": "D",
            "solvedCount": 3464
        },
        {
            "contestId": 989,
            "index": "C",
            "solvedCount": 3291
        },
        {
            "contestId": 989,
            "index": "B",
            "solvedCount": 6512
        },
        {
            "contestId": 985,
            "index": "D",
            "solvedCount": 1956
        },
        {
            "contestId": 982,
            "index": "A",
            "solvedCount": 8129
        },
        {
            "contestId": 980,
            "index": "B",
            "solvedCount": 4299
        },
        {
            "contestId": 976,
            "index": "D",
            "solvedCount": 583
        },
        {
            "contestId": 963,
            "index": "B",
            "solvedCount": 2270
        },
        {
            "contestId": 962,
            "index": "E",
            "solvedCount": 940
        },
        {
            "contestId": 962,
            "index": "B",
            "solvedCount": 6939
        },
        {
            "contestId": 960,
            "index": "C",
            "solvedCount": 3503
        },
        {
            "contestId": 959,
            "index": "D",
            "solvedCount": 2675
        },
        {
            "contestId": 959,
            "index": "C",
            "solvedCount": 5114
        },
        {
            "contestId": 952,
            "index": "G",
            "solvedCount": 183
        },
        {
            "contestId": 949,
            "index": "B",
            "solvedCount": 3447
        },
        {
            "contestId": 940,
            "index": "C",
            "solvedCount": 5178
        },
        {
            "contestId": 938,
            "index": "C",
            "solvedCount": 2984
        },
        {
            "contestId": 936,
            "index": "C",
            "solvedCount": 1023
        },
        {
            "contestId": 934,
            "index": "B",
            "solvedCount": 7731
        },
        {
            "contestId": 933,
            "index": "E",
            "solvedCount": 130
        },
        {
            "contestId": 932,
            "index": "C",
            "solvedCount": 3713
        },
        {
            "contestId": 932,
            "index": "A",
            "solvedCount": 9311
        },
        {
            "contestId": 931,
            "index": "B",
            "solvedCount": 6352
        },
        {
            "contestId": 926,
            "index": "E",
            "solvedCount": 801
        },
        {
            "contestId": 925,
            "index": "D",
            "solvedCount": 422
        },
        {
            "contestId": 925,
            "index": "C",
            "solvedCount": 1120
        },
        {
            "contestId": 923,
            "index": "F",
            "solvedCount": 57
        },
        {
            "contestId": 923,
            "index": "D",
            "solvedCount": 1006
        },
        {
            "contestId": 922,
            "index": "F",
            "solvedCount": 528
        },
        {
            "contestId": 916,
            "index": "C",
            "solvedCount": 4406
        },
        {
            "contestId": 912,
            "index": "B",
            "solvedCount": 9035
        },
        {
            "contestId": 911,
            "index": "F",
            "solvedCount": 1090
        },
        {
            "contestId": 911,
            "index": "E",
            "solvedCount": 2138
        },
        {
            "contestId": 911,
            "index": "C",
            "solvedCount": 6420
        },
        {
            "contestId": 910,
            "index": "C",
            "solvedCount": 1459
        },
        {
            "contestId": 909,
            "index": "F",
            "solvedCount": 457
        },
        {
            "contestId": 909,
            "index": "B",
            "solvedCount": 5743
        },
        {
            "contestId": 906,
            "index": "B",
            "solvedCount": 1039
        },
        {
            "contestId": 901,
            "index": "D",
            "solvedCount": 343
        },
        {
            "contestId": 901,
            "index": "B",
            "solvedCount": 1309
        },
        {
            "contestId": 901,
            "index": "A",
            "solvedCount": 4688
        },
        {
            "contestId": 899,
            "index": "D",
            "solvedCount": 2215
        },
        {
            "contestId": 899,
            "index": "C",
            "solvedCount": 7213
        },
        {
            "contestId": 899,
            "index": "A",
            "solvedCount": 9018
        },
        {
            "contestId": 898,
            "index": "E",
            "solvedCount": 4014
        },
        {
            "contestId": 896,
            "index": "B",
            "solvedCount": 1799
        },
        {
            "contestId": 894,
            "index": "C",
            "solvedCount": 3859
        },
        {
            "contestId": 894,
            "index": "B",
            "solvedCount": 3969
        },
        {
            "contestId": 891,
            "index": "B",
            "solvedCount": 2601
        },
        {
            "contestId": 888,
            "index": "G",
            "solvedCount": 2327
        },
        {
            "contestId": 886,
            "index": "D",
            "solvedCount": 1621
        },
        {
            "contestId": 883,
            "index": "K",
            "solvedCount": 927
        },
        {
            "contestId": 883,
            "index": "J",
            "solvedCount": 485
        },
        {
            "contestId": 883,
            "index": "B",
            "solvedCount": 283
        },
        {
            "contestId": 878,
            "index": "A",
            "solvedCount": 4797
        },
        {
            "contestId": 877,
            "index": "C",
            "solvedCount": 5142
        },
        {
            "contestId": 873,
            "index": "D",
            "solvedCount": 2441
        },
        {
            "contestId": 868,
            "index": "C",
            "solvedCount": 3991
        },
        {
            "contestId": 865,
            "index": "D",
            "solvedCount": 2763
        },
        {
            "contestId": 865,
            "index": "A",
            "solvedCount": 3902
        },
        {
            "contestId": 862,
            "index": "C",
            "solvedCount": 3442
        },
        {
            "contestId": 858,
            "index": "F",
            "solvedCount": 1080
        },
        {
            "contestId": 856,
            "index": "A",
            "solvedCount": 1209
        },
        {
            "contestId": 854,
            "index": "B",
            "solvedCount": 7666
        },
        {
            "contestId": 854,
            "index": "A",
            "solvedCount": 11760
        },
        {
            "contestId": 850,
            "index": "D",
            "solvedCount": 277
        },
        {
            "contestId": 848,
            "index": "B",
            "solvedCount": 1636
        },
        {
            "contestId": 848,
            "index": "A",
            "solvedCount": 4709
        },
        {
            "contestId": 847,
            "index": "L",
            "solvedCount": 274
        },
        {
            "contestId": 847,
            "index": "D",
            "solvedCount": 851
        },
        {
            "contestId": 847,
            "index": "C",
            "solvedCount": 2104
        },
        {
            "contestId": 843,
            "index": "C",
            "solvedCount": 303
        },
        {
            "contestId": 840,
            "index": "B",
            "solvedCount": 1923
        },
        {
            "contestId": 835,
            "index": "E",
            "solvedCount": 839
        },
        {
            "contestId": 831,
            "index": "C",
            "solvedCount": 3586
        },
        {
            "contestId": 830,
            "index": "E",
            "solvedCount": 158
        },
        {
            "contestId": 827,
            "index": "B",
            "solvedCount": 3168
        },
        {
            "contestId": 822,
            "index": "F",
            "solvedCount": 236
        },
        {
            "contestId": 820,
            "index": "B",
            "solvedCount": 4819
        },
        {
            "contestId": 819,
            "index": "E",
            "solvedCount": 322
        },
        {
            "contestId": 815,
            "index": "E",
            "solvedCount": 185
        },
        {
            "contestId": 815,
            "index": "B",
            "solvedCount": 1254
        },
        {
            "contestId": 814,
            "index": "B",
            "solvedCount": 5246
        },
        {
            "contestId": 814,
            "index": "A",
            "solvedCount": 9166
        },
        {
            "contestId": 811,
            "index": "D",
            "solvedCount": 1312
        },
        {
            "contestId": 808,
            "index": "C",
            "solvedCount": 5148
        },
        {
            "contestId": 805,
            "index": "B",
            "solvedCount": 13045
        },
        {
            "contestId": 804,
            "index": "E",
            "solvedCount": 347
        },
        {
            "contestId": 804,
            "index": "C",
            "solvedCount": 1523
        },
        {
            "contestId": 804,
            "index": "A",
            "solvedCount": 13234
        },
        {
            "contestId": 803,
            "index": "C",
            "solvedCount": 3954
        },
        {
            "contestId": 803,
            "index": "B",
            "solvedCount": 5385
        },
        {
            "contestId": 803,
            "index": "A",
            "solvedCount": 3967
        },
        {
            "contestId": 802,
            "index": "H",
            "solvedCount": 349
        },
        {
            "contestId": 801,
            "index": "B",
            "solvedCount": 8808
        },
        {
            "contestId": 798,
            "index": "E",
            "solvedCount": 308
        },
        {
            "contestId": 798,
            "index": "D",
            "solvedCount": 1558
        },
        {
            "contestId": 798,
            "index": "A",
            "solvedCount": 16850
        },
        {
            "contestId": 796,
            "index": "D",
            "solvedCount": 3767
        },
        {
            "contestId": 796,
            "index": "C",
            "solvedCount": 2705
        },
        {
            "contestId": 793,
            "index": "E",
            "solvedCount": 199
        },
        {
            "contestId": 788,
            "index": "D",
            "solvedCount": 243
        },
        {
            "contestId": 788,
            "index": "B",
            "solvedCount": 2009
        },
        {
            "contestId": 780,
            "index": "E",
            "solvedCount": 2066
        },
        {
            "contestId": 779,
            "index": "C",
            "solvedCount": 9965
        },
        {
            "contestId": 779,
            "index": "A",
            "solvedCount": 8315
        },
        {
            "contestId": 778,
            "index": "D",
            "solvedCount": 398
        },
        {
            "contestId": 777,
            "index": "A",
            "solvedCount": 8784
        },
        {
            "contestId": 776,
            "index": "F",
            "solvedCount": 337
        },
        {
            "contestId": 776,
            "index": "B",
            "solvedCount": 13850
        },
        {
            "contestId": 774,
            "index": "H",
            "solvedCount": 217
        },
        {
            "contestId": 774,
            "index": "D",
            "solvedCount": 1754
        },
        {
            "contestId": 774,
            "index": "C",
            "solvedCount": 3092
        },
        {
            "contestId": 773,
            "index": "C",
            "solvedCount": 893
        },
        {
            "contestId": 772,
            "index": "C",
            "solvedCount": 1032
        },
        {
            "contestId": 771,
            "index": "B",
            "solvedCount": 6155
        },
        {
            "contestId": 768,
            "index": "B",
            "solvedCount": 5166
        },
        {
            "contestId": 768,
            "index": "A",
            "solvedCount": 18719
        },
        {
            "contestId": 766,
            "index": "E",
            "solvedCount": 2275
        },
        {
            "contestId": 766,
            "index": "B",
            "solvedCount": 22150
        },
        {
            "contestId": 766,
            "index": "A",
            "solvedCount": 20638
        },
        {
            "contestId": 765,
            "index": "D",
            "solvedCount": 2279
        },
        {
            "contestId": 764,
            "index": "B",
            "solvedCount": 10078
        },
        {
            "contestId": 763,
            "index": "B",
            "solvedCount": 2390
        },
        {
            "contestId": 761,
            "index": "E",
            "solvedCount": 1704
        },
        {
            "contestId": 761,
            "index": "D",
            "solvedCount": 3336
        },
        {
            "contestId": 761,
            "index": "A",
            "solvedCount": 12695
        },
        {
            "contestId": 758,
            "index": "D",
            "solvedCount": 2475
        },
        {
            "contestId": 758,
            "index": "C",
            "solvedCount": 3567
        },
        {
            "contestId": 756,
            "index": "A",
            "solvedCount": 2848
        },
        {
            "contestId": 755,
            "index": "E",
            "solvedCount": 714
        },
        {
            "contestId": 754,
            "index": "C",
            "solvedCount": 829
        },
        {
            "contestId": 754,
            "index": "A",
            "solvedCount": 7457
        },
        {
            "contestId": 753,
            "index": "C",
            "solvedCount": 239
        },
        {
            "contestId": 753,
            "index": "B",
            "solvedCount": 1047
        },
        {
            "contestId": 750,
            "index": "F",
            "solvedCount": 373
        },
        {
            "contestId": 749,
            "index": "B",
            "solvedCount": 7318
        },
        {
            "contestId": 748,
            "index": "F",
            "solvedCount": 556
        },
        {
            "contestId": 748,
            "index": "D",
            "solvedCount": 1629
        },
        {
            "contestId": 748,
            "index": "C",
            "solvedCount": 4332
        },
        {
            "contestId": 746,
            "index": "G",
            "solvedCount": 1150
        },
        {
            "contestId": 746,
            "index": "D",
            "solvedCount": 4437
        },
        {
            "contestId": 746,
            "index": "C",
            "solvedCount": 3459
        },
        {
            "contestId": 743,
            "index": "C",
            "solvedCount": 9592
        },
        {
            "contestId": 743,
            "index": "B",
            "solvedCount": 12002
        },
        {
            "contestId": 743,
            "index": "A",
            "solvedCount": 9671
        },
        {
            "contestId": 741,
            "index": "C",
            "solvedCount": 1878
        },
        {
            "contestId": 740,
            "index": "B",
            "solvedCount": 7157
        },
        {
            "contestId": 739,
            "index": "A",
            "solvedCount": 6720
        },
        {
            "contestId": 737,
            "index": "F",
            "solvedCount": 55
        },
        {
            "contestId": 736,
            "index": "E",
            "solvedCount": 153
        },
        {
            "contestId": 735,
            "index": "C",
            "solvedCount": 6703
        },
        {
            "contestId": 734,
            "index": "F",
            "solvedCount": 1079
        },
        {
            "contestId": 733,
            "index": "E",
            "solvedCount": 559
        },
        {
            "contestId": 733,
            "index": "C",
            "solvedCount": 3098
        },
        {
            "contestId": 732,
            "index": "C",
            "solvedCount": 8332
        },
        {
            "contestId": 732,
            "index": "A",
            "solvedCount": 45287
        },
        {
            "contestId": 731,
            "index": "B",
            "solvedCount": 7059
        },
        {
            "contestId": 730,
            "index": "H",
            "solvedCount": 2696
        },
        {
            "contestId": 730,
            "index": "B",
            "solvedCount": 2140
        },
        {
            "contestId": 729,
            "index": "E",
            "solvedCount": 1979
        },
        {
            "contestId": 729,
            "index": "D",
            "solvedCount": 3218
        },
        {
            "contestId": 727,
            "index": "D",
            "solvedCount": 1613
        },
        {
            "contestId": 727,
            "index": "C",
            "solvedCount": 5289
        },
        {
            "contestId": 725,
            "index": "C",
            "solvedCount": 2432
        },
        {
            "contestId": 723,
            "index": "E",
            "solvedCount": 1572
        },
        {
            "contestId": 721,
            "index": "D",
            "solvedCount": 2126
        },
        {
            "contestId": 720,
            "index": "C",
            "solvedCount": 78
        },
        {
            "contestId": 715,
            "index": "D",
            "solvedCount": 189
        },
        {
            "contestId": 715,
            "index": "B",
            "solvedCount": 2122
        },
        {
            "contestId": 715,
            "index": "A",
            "solvedCount": 5244
        },
        {
            "contestId": 713,
            "index": "B",
            "solvedCount": 1340
        },
        {
            "contestId": 711,
            "index": "B",
            "solvedCount": 7608
        },
        {
            "contestId": 710,
            "index": "C",
            "solvedCount": 4409
        },
        {
            "contestId": 708,
            "index": "B",
            "solvedCount": 2902
        },
        {
            "contestId": 708,
            "index": "A",
            "solvedCount": 7850
        },
        {
            "contestId": 698,
            "index": "B",
            "solvedCount": 4926
        },
        {
            "contestId": 690,
            "index": "F2",
            "solvedCount": 61
        },
        {
            "contestId": 689,
            "index": "A",
            "solvedCount": 4911
        },
        {
            "contestId": 688,
            "index": "B",
            "solvedCount": 22359
        },
        {
            "contestId": 686,
            "index": "B",
            "solvedCount": 6916
        },
        {
            "contestId": 686,
            "index": "A",
            "solvedCount": 25158
        },
        {
            "contestId": 682,
            "index": "A",
            "solvedCount": 15724
        },
        {
            "contestId": 681,
            "index": "D",
            "solvedCount": 1600
        },
        {
            "contestId": 681,
            "index": "C",
            "solvedCount": 5586
        },
        {
            "contestId": 680,
            "index": "B",
            "solvedCount": 18208
        },
        {
            "contestId": 680,
            "index": "A",
            "solvedCount": 10926
        },
        {
            "contestId": 679,
            "index": "A",
            "solvedCount": 9800
        },
        {
            "contestId": 676,
            "index": "A",
            "solvedCount": 11987
        },
        {
            "contestId": 675,
            "index": "C",
            "solvedCount": 3195
        },
        {
            "contestId": 675,
            "index": "B",
            "solvedCount": 6707
        },
        {
            "contestId": 672,
            "index": "B",
            "solvedCount": 14455
        },
        {
            "contestId": 670,
            "index": "F",
            "solvedCount": 803
        },
        {
            "contestId": 670,
            "index": "A",
            "solvedCount": 13767
        },
        {
            "contestId": 667,
            "index": "B",
            "solvedCount": 5117
        },
        {
            "contestId": 665,
            "index": "D",
            "solvedCount": 2544
        },
        {
            "contestId": 663,
            "index": "A",
            "solvedCount": 2903
        },
        {
            "contestId": 662,
            "index": "D",
            "solvedCount": 1537
        },
        {
            "contestId": 659,
            "index": "B",
            "solvedCount": 5753
        },
        {
            "contestId": 652,
            "index": "F",
            "solvedCount": 324
        },
        {
            "contestId": 645,
            "index": "A",
            "solvedCount": 2947
        },
        {
            "contestId": 644,
            "index": "B",
            "solvedCount": 2436
        },
        {
            "contestId": 644,
            "index": "A",
            "solvedCount": 4042
        },
        {
            "contestId": 643,
            "index": "B",
            "solvedCount": 2953
        },
        {
            "contestId": 641,
            "index": "C",
            "solvedCount": 2685
        },
        {
            "contestId": 639,
            "index": "B",
            "solvedCount": 5877
        },
        {
            "contestId": 638,
            "index": "A",
            "solvedCount": 3355
        },
        {
            "contestId": 637,
            "index": "C",
            "solvedCount": 2338
        },
        {
            "contestId": 637,
            "index": "B",
            "solvedCount": 9699
        },
        {
            "contestId": 637,
            "index": "A",
            "solvedCount": 4664
        },
        {
            "contestId": 634,
            "index": "A",
            "solvedCount": 2918
        },
        {
            "contestId": 633,
            "index": "E",
            "solvedCount": 518
        },
        {
            "contestId": 633,
            "index": "B",
            "solvedCount": 5835
        },
        {
            "contestId": 632,
            "index": "B",
            "solvedCount": 3460
        },
        {
            "contestId": 631,
            "index": "B",
            "solvedCount": 6453
        },
        {
            "contestId": 629,
            "index": "A",
            "solvedCount": 11152
        },
        {
            "contestId": 626,
            "index": "B",
            "solvedCount": 6008
        },
        {
            "contestId": 625,
            "index": "D",
            "solvedCount": 582
        },
        {
            "contestId": 625,
            "index": "C",
            "solvedCount": 6191
        },
        {
            "contestId": 625,
            "index": "B",
            "solvedCount": 8652
        },
        {
            "contestId": 623,
            "index": "A",
            "solvedCount": 3960
        },
        {
            "contestId": 622,
            "index": "D",
            "solvedCount": 2339
        },
        {
            "contestId": 621,
            "index": "D",
            "solvedCount": 899
        },
        {
            "contestId": 618,
            "index": "F",
            "solvedCount": 802
        },
        {
            "contestId": 618,
            "index": "B",
            "solvedCount": 7012
        },
        {
            "contestId": 617,
            "index": "D",
            "solvedCount": 3872
        },
        {
            "contestId": 613,
            "index": "C",
            "solvedCount": 892
        },
        {
            "contestId": 612,
            "index": "E",
            "solvedCount": 1147
        },
        {
            "contestId": 611,
            "index": "H",
            "solvedCount": 416
        },
        {
            "contestId": 610,
            "index": "D",
            "solvedCount": 1139
        },
        {
            "contestId": 610,
            "index": "C",
            "solvedCount": 2640
        },
        {
            "contestId": 610,
            "index": "B",
            "solvedCount": 6077
        },
        {
            "contestId": 609,
            "index": "B",
            "solvedCount": 7539
        },
        {
            "contestId": 605,
            "index": "B",
            "solvedCount": 3131
        },
        {
            "contestId": 605,
            "index": "A",
            "solvedCount": 6463
        },
        {
            "contestId": 600,
            "index": "C",
            "solvedCount": 4522
        },
        {
            "contestId": 595,
            "index": "A",
            "solvedCount": 12855
        },
        {
            "contestId": 593,
            "index": "C",
            "solvedCount": 248
        },
        {
            "contestId": 584,
            "index": "E",
            "solvedCount": 1294
        },
        {
            "contestId": 584,
            "index": "C",
            "solvedCount": 5439
        },
        {
            "contestId": 582,
            "index": "B",
            "solvedCount": 2942
        },
        {
            "contestId": 582,
            "index": "A",
            "solvedCount": 6519
        },
        {
            "contestId": 581,
            "index": "D",
            "solvedCount": 2906
        },
        {
            "contestId": 578,
            "index": "E",
            "solvedCount": 497
        },
        {
            "contestId": 576,
            "index": "C",
            "solvedCount": 2453
        },
        {
            "contestId": 576,
            "index": "B",
            "solvedCount": 1452
        },
        {
            "contestId": 575,
            "index": "D",
            "solvedCount": 1738
        },
        {
            "contestId": 573,
            "index": "C",
            "solvedCount": 888
        },
        {
            "contestId": 571,
            "index": "C",
            "solvedCount": 540
        },
        {
            "contestId": 570,
            "index": "D",
            "solvedCount": 4693
        },
        {
            "contestId": 570,
            "index": "C",
            "solvedCount": 8037
        },
        {
            "contestId": 570,
            "index": "B",
            "solvedCount": 13787
        },
        {
            "contestId": 566,
            "index": "E",
            "solvedCount": 380
        },
        {
            "contestId": 566,
            "index": "B",
            "solvedCount": 228
        },
        {
            "contestId": 560,
            "index": "B",
            "solvedCount": 6912
        },
        {
            "contestId": 557,
            "index": "B",
            "solvedCount": 6721
        },
        {
            "contestId": 553,
            "index": "B",
            "solvedCount": 1987
        },
        {
            "contestId": 551,
            "index": "B",
            "solvedCount": 3517
        },
        {
            "contestId": 550,
            "index": "E",
            "solvedCount": 1292
        },
        {
            "contestId": 550,
            "index": "D",
            "solvedCount": 2891
        },
        {
            "contestId": 549,
            "index": "G",
            "solvedCount": 2160
        },
        {
            "contestId": 549,
            "index": "B",
            "solvedCount": 1376
        },
        {
            "contestId": 547,
            "index": "D",
            "solvedCount": 1697
        },
        {
            "contestId": 546,
            "index": "D",
            "solvedCount": 9303
        },
        {
            "contestId": 544,
            "index": "B",
            "solvedCount": 6779
        },
        {
            "contestId": 543,
            "index": "E",
            "solvedCount": 160
        },
        {
            "contestId": 543,
            "index": "B",
            "solvedCount": 3404
        },
        {
            "contestId": 542,
            "index": "C",
            "solvedCount": 1044
        },
        {
            "contestId": 538,
            "index": "G",
            "solvedCount": 349
        },
        {
            "contestId": 538,
            "index": "D",
            "solvedCount": 2342
        },
        {
            "contestId": 538,
            "index": "B",
            "solvedCount": 14877
        },
        {
            "contestId": 534,
            "index": "E",
            "solvedCount": 317
        },
        {
            "contestId": 534,
            "index": "D",
            "solvedCount": 2169
        },
        {
            "contestId": 534,
            "index": "A",
            "solvedCount": 10602
        },
        {
            "contestId": 533,
            "index": "E",
            "solvedCount": 1958
        },
        {
            "contestId": 525,
            "index": "D",
            "solvedCount": 1402
        },
        {
            "contestId": 525,
            "index": "B",
            "solvedCount": 8227
        },
        {
            "contestId": 518,
            "index": "C",
            "solvedCount": 5529
        },
        {
            "contestId": 518,
            "index": "A",
            "solvedCount": 8033
        },
        {
            "contestId": 515,
            "index": "D",
            "solvedCount": 2568
        },
        {
            "contestId": 513,
            "index": "D2",
            "solvedCount": 335
        },
        {
            "contestId": 513,
            "index": "A",
            "solvedCount": 17786
        },
        {
            "contestId": 512,
            "index": "E",
            "solvedCount": 366
        },
        {
            "contestId": 509,
            "index": "D",
            "solvedCount": 676
        },
        {
            "contestId": 509,
            "index": "B",
            "solvedCount": 8710
        },
        {
            "contestId": 508,
            "index": "C",
            "solvedCount": 4119
        },
        {
            "contestId": 501,
            "index": "C",
            "solvedCount": 4959
        },
        {
            "contestId": 500,
            "index": "C",
            "solvedCount": 5377
        },
        {
            "contestId": 496,
            "index": "C",
            "solvedCount": 6946
        },
        {
            "contestId": 496,
            "index": "B",
            "solvedCount": 5260
        },
        {
            "contestId": 493,
            "index": "D",
            "solvedCount": 8394
        },
        {
            "contestId": 491,
            "index": "A",
            "solvedCount": 2135
        },
        {
            "contestId": 488,
            "index": "B",
            "solvedCount": 1982
        },
        {
            "contestId": 487,
            "index": "C",
            "solvedCount": 1916
        },
        {
            "contestId": 484,
            "index": "E",
            "solvedCount": 1569
        },
        {
            "contestId": 484,
            "index": "A",
            "solvedCount": 8528
        },
        {
            "contestId": 482,
            "index": "B",
            "solvedCount": 5158
        },
        {
            "contestId": 482,
            "index": "A",
            "solvedCount": 8257
        },
        {
            "contestId": 479,
            "index": "B",
            "solvedCount": 6615
        },
        {
            "contestId": 478,
            "index": "B",
            "solvedCount": 27345
        },
        {
            "contestId": 476,
            "index": "D",
            "solvedCount": 3714
        },
        {
            "contestId": 475,
            "index": "C",
            "solvedCount": 738
        },
        {
            "contestId": 472,
            "index": "F",
            "solvedCount": 219
        },
        {
            "contestId": 472,
            "index": "E",
            "solvedCount": 106
        },
        {
            "contestId": 468,
            "index": "C",
            "solvedCount": 1521
        },
        {
            "contestId": 468,
            "index": "A",
            "solvedCount": 6971
        },
        {
            "contestId": 467,
            "index": "B",
            "solvedCount": 27901
        },
        {
            "contestId": 460,
            "index": "D",
            "solvedCount": 901
        },
        {
            "contestId": 459,
            "index": "C",
            "solvedCount": 5558
        },
        {
            "contestId": 457,
            "index": "E",
            "solvedCount": 64
        },
        {
            "contestId": 453,
            "index": "C",
            "solvedCount": 1396
        },
        {
            "contestId": 452,
            "index": "B",
            "solvedCount": 1879
        },
        {
            "contestId": 449,
            "index": "C",
            "solvedCount": 1931
        },
        {
            "contestId": 443,
            "index": "A",
            "solvedCount": 57365
        },
        {
            "contestId": 441,
            "index": "D",
            "solvedCount": 952
        },
        {
            "contestId": 441,
            "index": "C",
            "solvedCount": 9610
        },
        {
            "contestId": 439,
            "index": "C",
            "solvedCount": 3521
        },
        {
            "contestId": 432,
            "index": "E",
            "solvedCount": 588
        },
        {
            "contestId": 430,
            "index": "A",
            "solvedCount": 2022
        },
        {
            "contestId": 429,
            "index": "C",
            "solvedCount": 773
        },
        {
            "contestId": 424,
            "index": "D",
            "solvedCount": 507
        },
        {
            "contestId": 421,
            "index": "A",
            "solvedCount": 4770
        },
        {
            "contestId": 417,
            "index": "E",
            "solvedCount": 661
        },
        {
            "contestId": 417,
            "index": "C",
            "solvedCount": 4209
        },
        {
            "contestId": 414,
            "index": "A",
            "solvedCount": 8645
        },
        {
            "contestId": 409,
            "index": "H",
            "solvedCount": 6620
        },
        {
            "contestId": 402,
            "index": "C",
            "solvedCount": 4826
        },
        {
            "contestId": 401,
            "index": "C",
            "solvedCount": 15754
        },
        {
            "contestId": 398,
            "index": "C",
            "solvedCount": 199
        },
        {
            "contestId": 398,
            "index": "A",
            "solvedCount": 878
        },
        {
            "contestId": 397,
            "index": "B",
            "solvedCount": 703
        },
        {
            "contestId": 394,
            "index": "C",
            "solvedCount": 475
        },
        {
            "contestId": 390,
            "index": "D",
            "solvedCount": 429
        },
        {
            "contestId": 388,
            "index": "B",
            "solvedCount": 2097
        },
        {
            "contestId": 379,
            "index": "B",
            "solvedCount": 6398
        },
        {
            "contestId": 370,
            "index": "D",
            "solvedCount": 551
        },
        {
            "contestId": 370,
            "index": "C",
            "solvedCount": 1398
        },
        {
            "contestId": 369,
            "index": "B",
            "solvedCount": 5484
        },
        {
            "contestId": 361,
            "index": "B",
            "solvedCount": 6810
        },
        {
            "contestId": 361,
            "index": "A",
            "solvedCount": 13565
        },
        {
            "contestId": 359,
            "index": "E",
            "solvedCount": 404
        },
        {
            "contestId": 359,
            "index": "B",
            "solvedCount": 6395
        },
        {
            "contestId": 359,
            "index": "A",
            "solvedCount": 7373
        },
        {
            "contestId": 358,
            "index": "C",
            "solvedCount": 1670
        },
        {
            "contestId": 357,
            "index": "B",
            "solvedCount": 7025
        },
        {
            "contestId": 356,
            "index": "D",
            "solvedCount": 740
        },
        {
            "contestId": 356,
            "index": "C",
            "solvedCount": 1126
        },
        {
            "contestId": 355,
            "index": "A",
            "solvedCount": 8091
        },
        {
            "contestId": 354,
            "index": "E",
            "solvedCount": 793
        },
        {
            "contestId": 353,
            "index": "D",
            "solvedCount": 2223
        },
        {
            "contestId": 353,
            "index": "B",
            "solvedCount": 2073
        },
        {
            "contestId": 350,
            "index": "E",
            "solvedCount": 667
        },
        {
            "contestId": 347,
            "index": "A",
            "solvedCount": 7334
        },
        {
            "contestId": 341,
            "index": "E",
            "solvedCount": 330
        },
        {
            "contestId": 339,
            "index": "E",
            "solvedCount": 476
        },
        {
            "contestId": 339,
            "index": "C",
            "solvedCount": 7311
        },
        {
            "contestId": 335,
            "index": "B",
            "solvedCount": 1695
        },
        {
            "contestId": 335,
            "index": "A",
            "solvedCount": 2146
        },
        {
            "contestId": 333,
            "index": "C",
            "solvedCount": 334
        },
        {
            "contestId": 331,
            "index": "E2",
            "solvedCount": 120
        },
        {
            "contestId": 331,
            "index": "E1",
            "solvedCount": 84
        },
        {
            "contestId": 330,
            "index": "B",
            "solvedCount": 13578
        },
        {
            "contestId": 329,
            "index": "D",
            "solvedCount": 336
        },
        {
            "contestId": 329,
            "index": "C",
            "solvedCount": 752
        },
        {
            "contestId": 329,
            "index": "A",
            "solvedCount": 4268
        },
        {
            "contestId": 327,
            "index": "E",
            "solvedCount": 1033
        },
        {
            "contestId": 327,
            "index": "D",
            "solvedCount": 1964
        },
        {
            "contestId": 323,
            "index": "B",
            "solvedCount": 310
        },
        {
            "contestId": 323,
            "index": "A",
            "solvedCount": 610
        },
        {
            "contestId": 321,
            "index": "C",
            "solvedCount": 4947
        },
        {
            "contestId": 317,
            "index": "E",
            "solvedCount": 120
        },
        {
            "contestId": 317,
            "index": "C",
            "solvedCount": 403
        },
        {
            "contestId": 316,
            "index": "F3",
            "solvedCount": 148
        },
        {
            "contestId": 313,
            "index": "E",
            "solvedCount": 484
        },
        {
            "contestId": 313,
            "index": "C",
            "solvedCount": 4985
        },
        {
            "contestId": 311,
            "index": "A",
            "solvedCount": 3738
        },
        {
            "contestId": 306,
            "index": "D",
            "solvedCount": 232
        },
        {
            "contestId": 305,
            "index": "A",
            "solvedCount": 3841
        },
        {
            "contestId": 303,
            "index": "A",
            "solvedCount": 6310
        },
        {
            "contestId": 301,
            "index": "C",
            "solvedCount": 407
        },
        {
            "contestId": 301,
            "index": "A",
            "solvedCount": 2736
        },
        {
            "contestId": 300,
            "index": "A",
            "solvedCount": 16319
        },
        {
            "contestId": 297,
            "index": "D",
            "solvedCount": 401
        },
        {
            "contestId": 297,
            "index": "C",
            "solvedCount": 825
        },
        {
            "contestId": 297,
            "index": "B",
            "solvedCount": 3141
        },
        {
            "contestId": 297,
            "index": "A",
            "solvedCount": 3323
        },
        {
            "contestId": 290,
            "index": "E",
            "solvedCount": 157
        },
        {
            "contestId": 286,
            "index": "E",
            "solvedCount": 726
        },
        {
            "contestId": 286,
            "index": "A",
            "solvedCount": 2832
        },
        {
            "contestId": 283,
            "index": "A",
            "solvedCount": 5929
        },
        {
            "contestId": 282,
            "index": "C",
            "solvedCount": 7812
        },
        {
            "contestId": 277,
            "index": "B",
            "solvedCount": 708
        },
        {
            "contestId": 275,
            "index": "B",
            "solvedCount": 2516
        },
        {
            "contestId": 272,
            "index": "E",
            "solvedCount": 1023
        },
        {
            "contestId": 271,
            "index": "E",
            "solvedCount": 427
        },
        {
            "contestId": 271,
            "index": "C",
            "solvedCount": 2697
        },
        {
            "contestId": 269,
            "index": "C",
            "solvedCount": 1455
        },
        {
            "contestId": 268,
            "index": "C",
            "solvedCount": 11634
        },
        {
            "contestId": 266,
            "index": "C",
            "solvedCount": 1250
        },
        {
            "contestId": 266,
            "index": "B",
            "solvedCount": 88465
        },
        {
            "contestId": 264,
            "index": "A",
            "solvedCount": 9440
        },
        {
            "contestId": 261,
            "index": "C",
            "solvedCount": 701
        },
        {
            "contestId": 260,
            "index": "D",
            "solvedCount": 1143
        },
        {
            "contestId": 260,
            "index": "C",
            "solvedCount": 2611
        },
        {
            "contestId": 254,
            "index": "A",
            "solvedCount": 5655
        },
        {
            "contestId": 246,
            "index": "C",
            "solvedCount": 2380
        },
        {
            "contestId": 246,
            "index": "A",
            "solvedCount": 7757
        },
        {
            "contestId": 245,
            "index": "D",
            "solvedCount": 1852
        },
        {
            "contestId": 241,
            "index": "G",
            "solvedCount": 504
        },
        {
            "contestId": 238,
            "index": "B",
            "solvedCount": 1106
        },
        {
            "contestId": 238,
            "index": "A",
            "solvedCount": 1858
        },
        {
            "contestId": 234,
            "index": "H",
            "solvedCount": 525
        },
        {
            "contestId": 234,
            "index": "G",
            "solvedCount": 1319
        },
        {
            "contestId": 232,
            "index": "C",
            "solvedCount": 234
        },
        {
            "contestId": 232,
            "index": "A",
            "solvedCount": 2144
        },
        {
            "contestId": 231,
            "index": "B",
            "solvedCount": 3203
        },
        {
            "contestId": 226,
            "index": "D",
            "solvedCount": 850
        },
        {
            "contestId": 225,
            "index": "A",
            "solvedCount": 7939
        },
        {
            "contestId": 220,
            "index": "B",
            "solvedCount": 6882
        },
        {
            "contestId": 218,
            "index": "A",
            "solvedCount": 6510
        },
        {
            "contestId": 214,
            "index": "B",
            "solvedCount": 4344
        },
        {
            "contestId": 213,
            "index": "D",
            "solvedCount": 305
        },
        {
            "contestId": 209,
            "index": "C",
            "solvedCount": 541
        },
        {
            "contestId": 209,
            "index": "B",
            "solvedCount": 288
        },
        {
            "contestId": 201,
            "index": "A",
            "solvedCount": 2699
        },
        {
            "contestId": 199,
            "index": "A",
            "solvedCount": 18272
        },
        {
            "contestId": 198,
            "index": "D",
            "solvedCount": 74
        },
        {
            "contestId": 197,
            "index": "A",
            "solvedCount": 5123
        },
        {
            "contestId": 196,
            "index": "C",
            "solvedCount": 679
        },
        {
            "contestId": 193,
            "index": "C",
            "solvedCount": 441
        },
        {
            "contestId": 193,
            "index": "A",
            "solvedCount": 2922
        },
        {
            "contestId": 183,
            "index": "A",
            "solvedCount": 461
        },
        {
            "contestId": 180,
            "index": "F",
            "solvedCount": 1930
        },
        {
            "contestId": 176,
            "index": "C",
            "solvedCount": 413
        },
        {
            "contestId": 173,
            "index": "D",
            "solvedCount": 225
        },
        {
            "contestId": 171,
            "index": "A",
            "solvedCount": 3406
        },
        {
            "contestId": 161,
            "index": "B",
            "solvedCount": 1786
        },
        {
            "contestId": 156,
            "index": "B",
            "solvedCount": 1903
        },
        {
            "contestId": 148,
            "index": "C",
            "solvedCount": 2693
        },
        {
            "contestId": 148,
            "index": "A",
            "solvedCount": 60794
        },
        {
            "contestId": 145,
            "index": "B",
            "solvedCount": 1946
        },
        {
            "contestId": 142,
            "index": "B",
            "solvedCount": 1950
        },
        {
            "contestId": 141,
            "index": "E",
            "solvedCount": 653
        },
        {
            "contestId": 141,
            "index": "C",
            "solvedCount": 2120
        },
        {
            "contestId": 135,
            "index": "C",
            "solvedCount": 1207
        },
        {
            "contestId": 134,
            "index": "C",
            "solvedCount": 402
        },
        {
            "contestId": 132,
            "index": "D",
            "solvedCount": 549
        },
        {
            "contestId": 128,
            "index": "D",
            "solvedCount": 955
        },
        {
            "contestId": 128,
            "index": "B",
            "solvedCount": 2093
        },
        {
            "contestId": 126,
            "index": "C",
            "solvedCount": 596
        },
        {
            "contestId": 125,
            "index": "D",
            "solvedCount": 332
        },
        {
            "contestId": 125,
            "index": "C",
            "solvedCount": 750
        },
        {
            "contestId": 119,
            "index": "B",
            "solvedCount": 997
        },
        {
            "contestId": 118,
            "index": "B",
            "solvedCount": 21329
        },
        {
            "contestId": 110,
            "index": "B",
            "solvedCount": 8362
        },
        {
            "contestId": 109,
            "index": "D",
            "solvedCount": 563
        },
        {
            "contestId": 103,
            "index": "C",
            "solvedCount": 845
        },
        {
            "contestId": 98,
            "index": "D",
            "solvedCount": 155
        },
        {
            "contestId": 97,
            "index": "B",
            "solvedCount": 669
        },
        {
            "contestId": 91,
            "index": "D",
            "solvedCount": 227
        },
        {
            "contestId": 86,
            "index": "B",
            "solvedCount": 359
        },
        {
            "contestId": 85,
            "index": "A",
            "solvedCount": 1587
        },
        {
            "contestId": 82,
            "index": "B",
            "solvedCount": 1745
        },
        {
            "contestId": 81,
            "index": "D",
            "solvedCount": 565
        },
        {
            "contestId": 78,
            "index": "B",
            "solvedCount": 8800
        },
        {
            "contestId": 74,
            "index": "E",
            "solvedCount": 105
        },
        {
            "contestId": 66,
            "index": "D",
            "solvedCount": 2429
        },
        {
            "contestId": 63,
            "index": "D",
            "solvedCount": 994
        },
        {
            "contestId": 59,
            "index": "D",
            "solvedCount": 518
        },
        {
            "contestId": 53,
            "index": "C",
            "solvedCount": 5112
        },
        {
            "contestId": 49,
            "index": "C",
            "solvedCount": 1379
        },
        {
            "contestId": 48,
            "index": "H",
            "solvedCount": 104
        },
        {
            "contestId": 45,
            "index": "J",
            "solvedCount": 734
        },
        {
            "contestId": 45,
            "index": "E",
            "solvedCount": 458
        },
        {
            "contestId": 44,
            "index": "J",
            "solvedCount": 454
        },
        {
            "contestId": 43,
            "index": "D",
            "solvedCount": 931
        },
        {
            "contestId": 42,
            "index": "D",
            "solvedCount": 330
        },
        {
            "contestId": 42,
            "index": "C",
            "solvedCount": 384
        },
        {
            "contestId": 41,
            "index": "E",
            "solvedCount": 1531
        },
        {
            "contestId": 40,
            "index": "A",
            "solvedCount": 2902
        },
        {
            "contestId": 36,
            "index": "E",
            "solvedCount": 325
        },
        {
            "contestId": 30,
            "index": "E",
            "solvedCount": 504
        },
        {
            "contestId": 29,
            "index": "D",
            "solvedCount": 1748
        },
        {
            "contestId": 27,
            "index": "C",
            "solvedCount": 2214
        },
        {
            "contestId": 26,
            "index": "E",
            "solvedCount": 311
        },
        {
            "contestId": 26,
            "index": "C",
            "solvedCount": 666
        },
        {
            "contestId": 23,
            "index": "C",
            "solvedCount": 981
        },
        {
            "contestId": 23,
            "index": "B",
            "solvedCount": 2362
        },
        {
            "contestId": 14,
            "index": "C",
            "solvedCount": 2558
        },
        {
            "contestId": 12,
            "index": "E",
            "solvedCount": 858
        },
        {
            "contestId": 11,
            "index": "A",
            "solvedCount": 8952
        },
        {
            "contestId": 10,
            "index": "E",
            "solvedCount": 573
        },
        {
            "contestId": 8,
            "index": "B",
            "solvedCount": 3247
        },
        {
            "contestId": 7,
            "index": "A",
            "solvedCount": 5593
        },
        {
            "contestId": 5,
            "index": "C",
            "solvedCount": 9023
        },
        {
            "contestId": 4,
            "index": "B",
            "solvedCount": 17660
        }
    ]
}